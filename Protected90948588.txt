
    local Byte         = string.byte;
    local Char         = string.char;
    local Sub          = string.sub;
    local Concat       = table.concat;
    local Insert       = table.insert;
    local LDExp        = math.ldexp;
    local GetFEnv      = getfenv or function() return _ENV end;
    local Setmetatable = setmetatable;
    local Select       = select;

    local Unpack = unpack or table.unpack;
    local ToNumber = tonumber;local function decompress(b)local c,d,e="ScriptGuard","ScriptGuard",{}local f=256;local g={}for h=0,f-1 do g[h]=Char(h)end;local i=1;local function k()local l=ToNumber(Sub(b, i,i),36)i=i+1;local m=ToNumber(Sub(b, i,i+l-1),36)i=i+l;return m end;c=Char(k())e[1]=c;while i<#b do local n=k()if g[n]then d=g[n]else d=c..Sub(c, 1,1)end;g[f]=c..Sub(d, 1,1)e[#e+1],c,f=d,d,f+1 end;return table.concat(e)end;local ByteString=decompress('1G26M27526L26G27526M23R24E23Z23R24C24D26L26J27923T23V24A23T23X27727924A24724E23V23L23S26L26E27924323B21T21C24F1F2621L26L26C27923R24D23M23X23M23L24D24B24C23V27H27923U23V23W24B23T26L26I28A23K23S23L26L26N27923Q28Y27924B28S27923S23R23K23U26L26D27926321S21S2102541M25S1O25G21S22B27P27523K23622321E24F1326L26F27924T23Q23Z24C23Z23X24A23V24C28827J27L24B24E24823Z23M24B23V26K27927925G24U29P26M24T23Z23N2A723Z2AJ2AK26M25C2AN26H27924G27L24923L24C23P2AV2AK2652AN28927526321T21Z21E2491725Y1F25K29O27127924222V22J1K2491925C1L25L22Q22M1K25V22F24324J21C22P24I26L26L27924O25A2592B82AK2AN28T2752CC2592642CF27526E2AN26927929R29T29V26U1J25O22B22M1425V22O23O2AO25A23M23Z2472A72CN26M2722AZ2792D62D82A72CM2AW26M26U2DE2752DG2D924C2652DB25E2DN26M2DP2A726226L2B02DO2D72DQ2632DB2632DV2DX24C2602DB25U2E82E32A72612DB24U2AN2B828G28L27528E23L23X23P2E02AA27M23V23K2482ET27524Q2A324929828R27Y2EO28F23K2A723V27W2CI26M23T2AR28K2BC26M24P27L2592A724823R23X28K29Y27524I23122L21K2481M25W1O25K29X2792B42B624D27C2FQ26L26B29Z28I28J23K24A2AQ2AS2A326L2722B12352221X24I1825H1E26123622I1L25T2302452512A927524N2811023Y1K25F1I25Q21W26L27327924N22V22N21R23M1525W2BL21X2301J25K23B2472531W2H226M28F23Z23U24D24A24C2F42EZ26M24M24A24A24E2FK24A26L24I27924D23A22J1Z24822K24A22C26721S22022125C23023M25421C23324J22T21G21R26O23G22R22P21H25W26S26A22P2101M22525T24622523D26M26T22G21O22727223X257237151724W26N22122K23Y22E26U2251D24221324Y1G22H26523E24R24B22S25A22Q25S23D26Y22526T21Z2952FT23L2HZ29B27924W23C1F21D23U1825I22D25K22H22I2I524X22V22121E24E1A25D2AO2F924925623Z23W2AO25223121U2KT1I2KO27525823322621G23Y21B25T21F2BM2L02FS26M2LA24S24B2I823L23K2HW23Q22Z21V21I23P1I2451Q25G2242CA2792AO25922Z22J21D23O1U26L26Y27923M2M721R25N1725C1F25E1122A1625O22O25Y25521D21926F2122I524J22Z22K21223U1A25I2C92KP23522N2EN26M24622Y22621Q2EY26829023L23L23P2AS24A2FG24A23Q23L29A2782LM23Z29923L23N2NJ29Q23V2492HW24Q22L21T21E23Q1325Y1Q25D2252G32OD2LB23L23T23T23M2FR2792572311F1024B1K25S1Q25L27X27925522Z22021N2842631S2AO24T23L28F2DR2I523S24C2OA25824P24S2CN1E23L2DV24V23N23W23R2EW2IC2LX25623R2AS24H23S24Q2D82GA27924P28F23W2AF2592A123U23L24927G2NU2752PJ2PL2QI23R23S24A24X25623L24E2HD29Z2PK2B52QS2QU24X24S23L2M22OB2O626M24O2OU24R2992P92CJ2OU2592O024C2IC2F62RC2OU2QQ2B52I52OH21Y21P23Z1325P2LL2LY2OE23X2EP28H28J2OG2OI21I24C1F2631V2KY2I525023322521M23Y182L826Z27924H23122021G23R132MC25C21V22E1225L23525Y24Z21622P25522S2342OR26M2552B523P2G72A42AI2AW23225B24U2DB24W2AN29C2CJ2Q123M23U2Q82542Q12OF2LX24Z2JG23729I2621K25N26L2BO2752SP2SR2ST24521P26A23B1V21G25Z22Y24925221822R24X2T92LA25923M23R28N2A82FI24V23121S21Q25N21625S1D25K2OQ2CR27525022U21X2122482MB2UC2UE21P25K22Y29427I27524023E22J1X29A2RO24N23K2I12O82G92LX24M22P22L21I2SK26Q1E25G2HW24H22V22F21324P1J25D2MY2272NN24Z2342NR23Y2D52A22Q22I52LG2W024S1J2642KK26M24G2FG2HW25023B22J21O2551J26321O2602202WU25923R24428K2VK26M25724Q2Q62DJ2DK26M2DB2532TK2DK2562AN2RO25A28G23R24A23R2M32DB25M2XO2AW1U25T2CN21A23W21A2GK27924S2A423P23T2PP24B2992RR2DR2DB24Q2AN2RB24V2A523R24823V26N26N2T92F123Z2OV2LD2OX2WU25623V2462IC2U626M2WZ2X125N1L2611I25L21W1V1D25U22W23Q26O21J23C2542DB24G2BB2792Z22Z42YI26526L2V626M2R724C2UT2XA2XC25A23R24623V23M2I52TU24D23R23W2OX28Z2R027524M23221Y21J23Y21Y2731E25C2291V2LU22Q2412582HV2MQ2U72SQ2SS2SU2SL22022J1223R23323N25921H21923N2NM2HE27524J23L24B24D23V2M02M223K26724T2UR2ER2I52PJ23K2F92A52RH2TA2UX21325N2132611N2XM2Y82ZY25531213123312523X2392281025C22X24326L26V27924M22Y29G25G1E2642SD112371825K2T124121522P26U23821021L26F2J32S02L222N21O2481F25D22J26K22522B2CN24U23O2AN270279313A313C313E313G313I21Z26R22Y24125321522W26L26Q312N312P210312R312T25K1123F122UH23P2N621924723E21P23126P22U23D22P21R25W311Z25323222621C23K2BV1F2T924I23R23T23Q24A23K2I426X28A22O22F21E2481L25S1F25G21X1522023S21F25F26D23421K26E21222W23824H2AO24P2AF23Z24624726L315727523R3159315B315D315F315H315J21O25H26823421L26B1X22X23E24M2NN2592F324C310926U3158315A315C315E315G315I23S21G25H26923G21G26C21B22V23F24M1X2NN25523Z2YR3160316Q31633165316T3168316W316Y26G23G21H2681Z22U23824N2NA2LX25823V23U315W2D7315Z3161316R3166316U3169316X25C317021O26921022S23D24G2AO24J2A2310E28K316227A317G3167316V315J21P25R26823521P2681X22O23824R2WU24I317B23Z3181317F316S318N318521E25I26F23621K26821222R23F318Z2RO24S2D72ER311J2IC318K316431963184316W21C25Q26C319C26M21A22S23J316K2XE25923K23Z23P318J3182317H318O23S21E25E26D23621L319E22P23J24L2AO2YB31A531A526L26W31A93197316W21I25H26G23721G26D21322U2392NN24Q23V23Z2O226L317E318L319R317I315J21G25J317L21N26E21122P23G24Q1Z31B42OU23T28X26T31AS319S315J21E25G26823821H26N1Z22R31A121221G21822T2NN24H2FQ2O826L31BT3195318331BD31AC25D26D23B21N26B317423D24H21621M315R26L313O2752IB24R24F24B27B27T317X2YG2WW2AS2AO24N23T23K2B528K2E12RC2CD24V24C23N27G2FI2A023R2TR24V23U28N29A2GB2F72M32FB2YG2YP2M32NN27C27E27G2XE2O0318I2AO298311L2RM2S024M22X2RV25N21E2621S25M2252L026S2KP23022621D2ST24A21R25G22A22M1525N2N424Z21C23I24I23D21O23126823C22S23F2S02LA2F12QY2QK2492M42TO2I622V2M823S2MB21425I2202292MP279252312P313C2SU1Q23X22E22I162UH24826O21I22U25B23C2I52VM2VO23U21Y23R2S031FU22621P23W31FX2672242MF25J2792NP31GI31GK25I22J25W2262221L23R22S23O25921I21931F323521Q26U23A21922P21K25K26N25522T1Z22J1327224O21G23E25C26Q2KJ2FD24123122G21P26L2B824X24P2AO2G723V317W31602XE31I2317W311Z31I723U24724X2ES31FI310J310L310N26E1B25K21W22J31CV2SO31112UA3114311623R23A23Q2511W22X2NN24M23622221I31932ZY24M2BR2372481A3148112241N25E22O2422DB25I2ZR2H323K24E2M124S23V2FF2M42FI2VS31JO24A2RF31DR2QC2LM2EW31022A624E31D32T924M31B62RM23W31B62Z52792NC22L21324E1726121E25F2292221J26I22S24824X1Y22W24K2WY2X021O24G1325O2X62X826A279317V311L24A24H23K25927C31FG26L31L531102U91326V2GT22D228192DB23U2Y12AK24N31LR2792622CH2CB2M32IC2FD2RF24B2OB2QO26M259311J24C2FQ2592O824D2R72TR311Z2ZT24A31032FH27925923121V21J25N21D24522823X22Q2Y92V731KY25N21A2621N25L1123H1I25V23524925A314231IP31LI24521O26W22W1V112HR25Y2542T424Y23J21R21624Z21W21921Q23426X2I527K24A23S2EW2EY2LX28N31KS28E23Z24D27G2RO31L82XW23K23T27G2Z628N2I12PP31IC28J24E311S31B72XX2M42LX2O32NX24X23S31DX31LF2NV2NX31OW23K31DY2M431LG2S124923X24X2S428I31DD27924L314T2162H72NI31FI24I2EQ2AF2E92S0317V23N2R823V24R2YR2GF2HW24O27E23V2FM24C2YR2A82FD2W72W9310A23V2A52B52WT317U23022H21M313D25Z1N2G22RB24T2Q22A72I524H2M12UR2F92NN25831QD31QF2I524W2VN2VP21Y2912LX24623421S1W2481E25W1I2672WU25722R22D21M31NY27L2GE2EY31DE31PQ23U24B2OX27G2GL2752FM31MI24E2I32GF319K2EQ31A729A2FD2O024D2ES31I631LD2M424X2IF2IH2IJ2IL2IN2IP2IR2IT2IV2IX2IZ2J12J32J52J72J92JB22527124L23C22T24B24U111X21U24Z26U23X22W21F1324N25221D22U25Y22W26H21Y1924221L26E22421S25L23924J24B22A24P22E25E21B25821W26921U1D22H21C23D26H22X1F1E1O25F26U22I24V1G24R24J23O26F2WF31P531O524X28J24D2PK31Q231OY2752FF2AS24X31RN31RP23V27G31DE31NZ29828W31I12I22I42XE23N31B723X31R22IF2O32RM24X24D31M92S025S218171825Q1H26I21223Q181R2WU31A531D72FD31P127O31M52IB2E9311I28N31092MG26M28H2LE2FD31V82A226L23Z27926T1221B22B26J22U25123F24T1X21R22V24N1526U25S21X1D25Y1M2292252431J1D1L22825623K25O1222323F22Q24025O1K1A24P24C21822C21M24C24I2731122F22U25L25E1S1L24J1Q24F21B23J26R22D25N21R21G2581J25H2501W25O21C24X1025W1X23K21223I23A22L1O23K171W22M22Y24Q24821A23U1Y24B25P26D23U21622O1A313K25224U26Y25F27922I2XK31CW28Z28Z27531CW2AJ2DB2CA31ZD2AK2AJ31W427931ZJ2CA2FD26M21929227021V26M27831ZM21926M2B02XE27927831ZG26M31CW27Y31ZQ2752892RO2AV2892FI279320E2DK320H28Z31CW31L524U27931CW2GB1Q27925Q2752GB2GB1L32062752NU320R275320T26M2NU2NU1I2AK2ZY31ZE2752GL24F320O2752HE24H321E320Y2482792CI2GL26P26M31ZD25C26N2MQ31M52AX26N2SN2Z626M23A26M2MQ320526M2YS2CR2BO310Z3225322126M2BO26I2272DC26M312M320K25S26N2GL1J320O322J2HE321K27925U320Y2FI270322J2BO322Q26M26I23I26M2HE23W321P26M25Q25D26M2SN2MQ321K25Q2313239323F27432132SN2SN322Y26M31AR31P5279315731FI279316Q31DT2AK312M320F27531EM310Z2AK31BT3240323S2JI2XL2AK316Q2CR31BA322G26M323U27931EM31RS3241323F2AW31432SN2AW312M31432CF312M2CR312M31WD2DL2DK3143324S3246324531CF324H3250324T31BT320K27526R26M322Y31CW26O26M321D320Z23X325C26M24J323531BT26I25S31KE3235268325F321D325I28Z3143325L325N28Z25Q25A26M321O31BT3157325Y323626M3143315726G3257321O24R3235320T325V275326C31ZD26R26N325B325B325726M21M26M25R3245321O25Q249326Q326W318K26M25O326632653213327032703263325626M3257326Y314332702AW31BT326R27531ZQ322S28Z26G31EM31BT325Z325T322Z325M2DO3235321V31BT3143325E325G251325J327P279327Y325X325Z326126M3157325P325G2543235321O326F26M328A326I326K26M326M275326P320T31BT326T323C3265326331AR32573279275321R31BT32133280327R321Q26N3157325B279321R316Q321O27922L32142AW328D31SA31ZD27831572CR316223Y26N31L531AR3157322D323226M25M327S321R2B0323O321R27Y324D329A2RO327G327Q26M23S323526G320N27831ZS28Z2B0328D32AA320631ZV2783202329U26M320232203204324626G23L26N32A929232A227932AE31ZU31ZW32AY321223Z32AR32AY2E1266320032AK321I29Y32A127529C2LX2AV29C323R32BB26M32BG32BI32BK3255324C26M320N321A329B32113265329B2NU320X31CW2CR32BS32132CR2CR3217279324G32BQ2HE325D320Y320Y321H32BQ322X321L321F26M22Z329T321W26M3219321R31AR324332202SN32232YS2GL2MQ324L32CS323F2MQ329P2HE2413235322V26N2HE322M31ZE322J313O323L322S2BO31FI32D3323B321L3231313O213326D323831AR323K3236323E31AR31AR323H27532DQ32582AK3157324D275316Q323O275312M321U323Y32BK327D324I2AK324K2DK324N324Y32E2322F324X26M31EM32E43245311G32E9323M2DK325731AR2AW31EM32572CF324F32EH32EM32EG327731EM2752AV3143327V32EM32F427932F332D2275325B3259275321O32C83288321D329A327O328D32FI3214325Q26M32FL325732FK326D325Z320T32673236325Z326R328U3269326521X3235326R328D32G2328G321O321O3294326P32703143320T326U326Z32GG326Y25P3278326W321332GJ32GJ3276328I32GQ326Y325732GJ324J32GG327G2AK22432A631EM314322G323532FQ32A332H332913143326N321426Z26N321D22F3235325U32A332HF28Z328D21832FS326532FV32FG26M22B326D328Z32HR327S326J32G832GQ326O326W32GD3236321K326R326R328R32GQ325B3162321R3143327F32HU32H7328V26N32972AK321R312M328Y32FO329B2AK328D214327S278316Q2GL317E329K2GB3157316Q329P313O22S32CI329Y32IJ26N29Y321U329A2LX32AU2751Z327S2GL27827Y2AJ32AX2B02RB25Q32B12B032JP27532B527Y2XE31CW28932JB27531L52FI2AV31L532E126M32K22DK32K532BM2NU32BP32C932BY320S27532C126M32BW321B26M32BZ32KI2GL32C332CF2AK31CW313O32C831CW2BO32CB32C932DF32GX320Y1832CI31AR32C5321R3157324L275322031AR32CR32D4323F32EQ2YS2HE32DM322Z322E313O1E32D232D826M32D63206322W32DV322R322A31P532D332DN327G32312BO25F2YT32363238315731AR323C323E3157315732DS328632MB323L316Q32EJ312M32DY32EW321927531BT32K3314332EQ2AK32EP2DK32ES32ED32EW2HE32F032MK32CK324V32C932MP32MB2AW32I92DK31BT325B2CF31BT2HE3252325732MW279325B32502AV328T32EO32GK2AW32NI32BM321O32FC326532FF32HC321D26G32M132H5320332M1328D26W32M126832NS26M26F32M1325B328D32O532HK32A332O03283326W328U3264327032N432G0326R26832M13270328D32OL328G32GE3260328K26M32GJ3257326R32GF32GN32N2275329S325B32703213329S329S32GP32HY326Y325B329S32NL32OU32CE2MH32M126G25Q26N325726V32O632HU32PM32OA324E32M1321V3257329432FM325G31HE28Z32NW27532PY32FW32OE32MB32O232HD323632M132G432A332PJ32PQ27525R32PS326J32OR329832GB32GK32OX321K327432MB25Q31AR32P932IG3257327C32HU26S32PS32IK32BT32IG31EM32ID32IN32E4328D25G32PS278312M2HE324S329K2NU316Q312M329P2BO1532CI32J832J62893219329A323X328D26732PS2GL2B029Y2AJ25Q24I26N27Y27828931CW32BF2DK2GB31FI2AV320V32S632BN2AW32SA32BM2CR32KA31CW2GL32KK322F2GL32KH329Q32SK2HE2HE32KN32N032CC325G32BQ2MQ32KV31CW32LW322Z2752BO24M32QY3292329Q329532IH32EN2793220315732LA313O329N2752YS313O32M432LH322B2ZZ32M132D32BO32LO32DE32LR275322S2SN323U32D332M532DG322A22T32M13237324U315732M6324U316Q32MA316Q316Q323L324Q32MR32IO324H32C5275314332MH328U32N332P0324T32N7324H313O3252314332UI32GK321Y32FA324U2AW321O324A32UJ32OS2CF3143313O32F632NF2DK321O32F42AV326L2DK32VE32UN325B32BM320T32NP326R32FF32FN24832PN328D32VP28Z32HQ32VS32OS32VR32U3325Z32OH32QP325Z32GJ321O326832QU2LY32M132GJ328D23K32QG26N32I532BT326P32P232GG32GF32P632UO25N32OS32GJ321332WM32WM32GP32OR326Y321O32WM32UN32PC32T12792YS327J31EM325B24732M1328C32A332X53291325B329832PW321D22Y32VQ32A332XF32OD32W0328732FN24132OM32HU32XN328G32WE3213326P32GJ32P332I332PE32GO323631AR32WT32IG325B32GU32HU32X932R1326W32T831BT32QV32R4329C32A322U32R832EW313O32F0329K324R32EW329P2MQ24J32T532RN32J629C32C5329A32BG328D22P32RT26M27Y2892AJ31AX32Z126M23H32M132QD32Z732NY32A326G26K322I32J732K42AK25B32BK32BD32BH32BJ32S52AW32S532BM2GB32SH320Z32KJ32KD32BU32KG32KB32ZW321232KE32MY32SS32UI31CW32C7321I313O32SY32T232TT2CI2HE21Y32T52SN32CL26N32CN2AK32CP32462AV32CW32CU32TH322K32CX32TL2HE22432TO322O32LN322N26N32D92AK32DB32E632LP321S330D32DH26M1332U332DL323F32U732DU32MA32DU323L32DX2DK32E032EB32UG324E3316324T32L632F732E827932EC324P32EF2AK32EI32N532T732EM32MO27932MQ32ER32GK32EU322F32ND324W32NJ32MW32F2327132GV32F632V3314332BM32FB321I32FE27932HQ21L32M132HH279332S32VT32FN332W32GK328D332Z326432FU32W132Q43268320N320T1W32Q932HU333A32ZA1X32WC32HY32GA32GG32I232GF32QO32GI32QL32BT32OZ32GP32VE32GS32PE32GV32QV31ZQ21732PH32H126M21G32NV32HU334232H832NK32XD26M18332T32HU334A32OD3334328732O31E32U332HU334I32ZA1F333G32OS333I326R333K32I4326X32Y032I832N232IB32Y9334432T532II32T832IL2AK329A32R532A31432YH32IU32UZ32IX32MB32J032LI26M21V32T532J532T832RL329932O432YE2791V32PH320N32JL32ZF32Z6328D32ZE320K31ZV32S1320S23E32Z627Y321U29Y32JU320A32MY2AW32Z2324632C52GB27Y320732AZ32BT27Y33652AK3367321I28932EL279336C2AJ27223331ZD2GL336G23K32Z632JM2CO32Z6336632B732BQ28932UX32Z632Z3322F321E32082AK32AE25Q26O32S032AY32S3322M29C3243320U331632S932SC2AK32SA32SD32BN32SF32BO321I32SJ32ZX2GL32SM32C92HE32SP329Q32SS31CW321I2BO32KS27532SX321I32T02CI2BO26Q335V321V3157336Q329632TA32L732MB32TE32EN316232TI32MB31AR32RH323M335V32TP331032D7331832DA323F32TX322J32TZ32LX322A2AU325X3238316Q32U632DO32U826M32UA324U32UD336A3320331P32MX32UV32UK32NJ326Y32UY339T324532UQ324T32US32EM32UV32573378325B32V232OS33A53143321O32V5320Y32V8324532V0332H324Y32VG2AK33AH32NE32GQ32VJ32TT31CW32VM332Q32FN24L335V32O732A333AS332X325G33AW32VW33AV335V32OG32GR32Q332W332MB32A732GG2PT28Z32W932A333BA32HU24T338J326J32XS32OT32WH32P4326V32WK326Y32WM321O32WO27532WQ32QP3302320T32WU26M32WW33AI329R32PF27525Z335V32PI328H24G335V32X72B1335V328D24H338J321R32XB33AQ325G25033AT32HU33CL32XJ33B432HQ257335V32ON32A333CS32XR32GL32OT32XV32WI321K333Q334V32Y2321V32Y4321L32A333CF329132R232J632YB3355339O328D24W338J27831EM32YJ27532YL324B31EM32YO326Q33CG26N32YS32T832YU33DF32YX32A32AI336W337932AO23732Z623R335V32ZA33E732ZA21L338Z322J29Y331T32ZK32BC27932BE331R32ZN2DK32ZR32C932ZT321I321032ZX321532ZZ32BX330132BT32KF33052AW330732SV32C9330A3389330D32CF24033DT330I32J6330L32TB323F32LA32CT324I32CW323A330V2NO33ED32LB32TR32LM339432DC331132KX322Z331A21633B2331E32DN323D32EN32DR32BT331J32DW337R324432K332E332UF32BJ31BT331T32V333GE324B324O323V331Z331Q32EJ32N932MZ3325327733GP32EW32ET339N2GL332C324B32PD332F332K32MZ332J3271332L32C9332N32BQ332P327W321D21V335V332U27533HB33AX33HA335V32Q0335H33B232FT3271326332FX32GK33373265222335V32QA27933HT32ZA22333BH26N333H32OT32GC3272326V333M2AK32OV33CY32XY33BV334W333T32Y5331U333W2AK23933C6334022M33HI32HU33IM334632HA32Q632FH33HC32HU22L33CD32A3313J334E33HN32HB32Q722H33B232HU33J432ZA22E33I033I232I0334R3272334T32I6334V333S32IG32IC33D827933IP32IG335232IG3354335N335727921B33DJ324U32IV33DN26N32IY324U32J126M23133DT335K32IG335M27532JA335P27521233C6335T26M33EC28Z320832A333KI32AF337033623364331P336N337632UO3372337A32C531AR336G3372337133KQ3374336826M28932EY33E3336T336V32DZ335W32A3337F337H3361337K32BK337N32BN32S8337O32MH337T337S337V330032ZU322F32SK338133EV32CF338532SR32KP33F1330C338B322A330B331F32PF2BO1333DT338L32J6316Q332532TC330O330S32TF32N2338U32TK338X31LO32ZG32TQ33FT32TT26M32TV337R32TY3319322A2ZW339C32U532DV33G132UB339I32BT33N3339L32MJ32EW33GM337B32EM32UL33KU33B432E7339X32MX339Z331U33A132TM32UN33A532V132MZ33A932EM32V733C1325232FD33AF32VD32HZ33C132PV33AK32VI32C932VK321I33AP320Z32O326B29233AU27933OA32ZA26Q29232HQ33OG28Z33CB32UJ29233B332N4326433B632W532GG26Y29233BC27933OU33CX32OX33BK32GQ33BM33C232P72AK33BQ32PE32WP33BZ33IC33D533NW33C033AK32WY31ZQ26C29233C732XB29233OL3260292328D25Q32AT33CH32OS33H926M25E33OB32HU33PX33CP32N433IS26M2G228Z33CU27933Q532HU2P833OZ32WF32PE32XW25Q33D232PE32I733D533PT32Y533PQ33PS26N33DC32YA32GW33KA33DG32A326632AT33DK320Y32YK26N32YM33DQ322E2MQ1S33DT33DV32IG33DX335N33DZ27926132AT336X33L532AO32AQ27Y32AE32JC31ZR31ZT33EE32EW27933EH335O32F133EM32ZQ33EL32BK29C32ZS337X32BQ33ES330232ZY32SN32KC33S433EZ2AK330632CF33M333F532SU322Y330E26M315U329133FB32T833FD338P32CQ324Y330Q33FI330T33FK32CZ26M24N33RO33FO3311331332LS33FS339233FU3230320Y23H33ON33FZ33N132DP32EN331I32EN331K33G733LB33G9339O32EW33GC331V33GF331O33GI331W33GK32E533NA336Q32V333GR3327339N33GT331Q33GV32EX332E33EJ33H0332I33H132F932GQ32NP33H833J2321D28X32FJ32A333UF32HU24033OH32FN33UK32PZ33UJ33ON33HM32FV326432FY33B7325732VK29233HV2752EY32G7334P33I3327132GE33I632GH33I8333O32GM33QI32BT33JI3326333U32EM33IH2MR33PJ334023329233HJ33VM33IQ33CJ321D31MV33UG27933VT32Q3334F334831IZ325X32HU33W0325633I133V333JC33V532XX32WE32I733VE334Y32ID328D33VP33JO33PU33JQ32R032YD32IP32A323I33QX33JX335C33K0335E32TL313O25633QO33K7321V33K932IN32JX328D23D33PJ33KG32AE33KK32AV31ZT3360336I25Q3363336K33KR337532C928933H2336S33NB324533KZ33KO33S433XF33L3336O33NZ336R33RH336T22P33VF33XO336133XQ3373336M33XH32JV33WK33KV336D2AK321O33Y033XC3372336L27933KS3317336P2AK25E33L833XM326R33YC33L133XR33Y433L428933IF33Y8336T2AK3270336G25Y337I33YQ33Y333YG33Y5336933PE33YW33XM329S33YP32ZX33YR33Z533YT26M25L33SA33YM336U31ZD25K3370316Q32AB32352AJ328D2B0335Z323525I320S245323528Z31GP31ZN33ZR32C92AJ25G2DK2AJ28Z32RX33RU2AJ25H320625H2YU33PW321I28T31Z733S428T28T25C32C92B032382AW29Y31DE2AV29Y32JX335O340Y340X33U929C33LS31L532SK32K532SN320Q32ZX32SA32SS32E433EW33M32GL33M5322P32PF2CR1D33QO2BO324D321R2MQ3388321Z32TM32LA2NU313O2U62YS2NU2BO313O329P2CR21F33SY2CR33FP330T33942HE2LX32D333T133FV322F25I26I33MZ2MQ32CD33G12MQ2MQ32MA342M33MR2SN32BJ31AR323X32MB32K3316Q340Y312M337831EM3378315731EM2CF328732UO331N324M339M331Q33LJ3242331M32452CF32ME32UZ32E5339V31BT31BA2AV31EM32ND32E5343P32EW31EM32BM314332NP325732NR32Q728S28Z33DQ32A3344032HU270342H3348344628Z325K32A3344932Q3325B31EM33HO32OS326231ZW32PU33L5344733PN26C3447327832PK32GK327V328L32EW325B32GF33PC326W328N32BT33WA32BT32F8326Y327E32UF328Y32093447327K32EW26Z3447344B279345E33DB33AD33UD2DL34473442323S3447328D25R34473264344F32Q532FN26Q344733OC32UJ344Q326J32NI344U32OS32X332XX32QS32QQ33H3334X33QP33WI328D345I32IG328S32J6329333DF33JT33BT344Q27831AR2NU32EQ329K29C2SN338W322E2GL1633QO278323R32AJ323O329A31DE33RM25E344Q23H32T12RB26M264340H33RU32AX28T32B532B026N340N26M267340F26N27I33YL32BQ278340L32BT278278340P31CW29Y26433EN33RT324Y32ZP2AK348627933EO320P33S132C933S332BT33EU33S633EX32C0330433ZJ33M0329Q33SD33SI33F633SG32CF24M344Q321R33SL346H322A33FE33SP330P330T330R322433ST322A33SV24S344732D332D533T033MR331532DD322J33T5331A22R345T33TA331G33TD33G433TF33G632MH343833GJ32EJ31EM33TM33GG32EA343933TQ32EE2GL32EG332132E733TV327133TX338O331Q33U032E533U2331U33L732NC33U5346B33U733U7332M33AN33NW32VN325G248344733HD3258344732VU344733HJ34AQ33J033US33HP32FZ33UW2LY344733UZ34B433V232G933V4333K33V7327533V932OW333P33VC321333VE327733YV327133VI32TH345B32PJ314324734AW32Y6345Q32A3244348U26N32H9332Q32O324334AR32HU34C332ZA22W345T33UR345W325G233345T32HU34CD34B832HZ326P33JD32GE33JF32QP31AR33WC34BZ334Z328D34BX329133JP321V33JR33QT346M26M22S346O33WQ32IW33WS32IZ33WU325H34BY33WY321R33X033KB33WM27923J347932AY32A1347E2XE32JJ340G278347S340Q26M347V321332JQ347Z336926532K633RH33RU32ZI32K332K52AW32K7348D348C33EW32SK32KF32SN337Z33S433LV32SS33TV32KQ33F332KT348P32SW33F7320Y21X34BY32L2346J331V32L833MG34942HE346V330S32LF323F33K3223349932LM342732CD32LS2MQ32LU322J338F32LY26M1V349K338V33TB32MB32M932BT32M833MR343H343932MH31EM33N832ML33GO32NJ33GR32MS332A32MV324H33N832V6339S32VF33NE32N632MT33GN32NB33RQ33NU34AH32NI32PD32HA33VF325732NN34AM32NQ33VR334134BT328D21G34AU32FN34GO28Z346034GL32OD33UU344H32XK31ZW320N326R21R344733Q727534H232ZA21O346226N32QI33CZ33VA326V33D327933BL32BT33BO32BT32QS33PF32NJ33QM2AK21234BP344S21F345Z32HU34HT32ZA21C34BY344L33O832Q71F34GM32A334I332ZA1434C9333633481B34B532HU34IC32OQ326532QJ32GG34BF33QG32GG34BD346A34HL321R32W633RM34HY329134CX321V33QQ34CY33KC26M1034D232RA33GX32RD324U32RG322E2BO22M34BY33X0321R33R832IN32RQ32A31R34DH32RV2AK347E2RB34DM26N2B034DP336H34DS33YE2AX32C929C26232SB33LL32BN33LN33TH34K133U932SG337Y348I32KL33LW32SO32ZX32SQ26M338733M132TM33M3338D32BQ338F330C26926J329133MB32T833MD330M338Q33SQ3312338S33MH34FG338X26F34KO331733MP33T4349D339533113398342E2MQ25534L232U4339E34FH33N3339J32UC33GJ33N834A432UH32MZ33ND339V32N433NG34G6320Y32UT33XM327733A3343I27933NP32GV33NR331U33NT33AK33NV32OS32VC32UY33O134MA34G333O331CW33O532BQ33O7345L25D34L234GT34MK32ZA24U34L233Q326434L233PN34MS34MO34LD32VZ33B433OQ32OS33HR327026134L233OW27534N432ZA25Y34L2344R33BJ32I034HH32WJ33C233BP32WN32BT33BU32WS328Q33YA33PA32WX33C333PW34L2345C325B24T34MT33BF34NB33PT32XC33Q324O34ML32HU34O332ZA25A34MX32GG33Q232O324K34L234H426M34OD32ZA24L34NB33BI33IA32XU33P232XX33D3346A33QK328H33QM32A334NW345J32R3328W33QS33WL33JL27525634NB33QY33DM26M33DO312M33R3322A26Y34NZ33DU343A321R33RA33QT33RC27525134NB347A336C279347E340V347P27Y26332B834DR32ZX341126032C931L52612DK2NU31P52AV33EU2AW34Q82AK33EU32BM2GL33LS338434KC329Q32SN313O32SK313O313O32SS32UX31CW2MQ33M32SN33M534L92CI2MQ24B34PE316Q341R32QZ326Y3220316Q32LA2BO34D634942BO34LF33DR23L34L232TS342732T033MS32EN31M532D3339F33992SN22A34LD3238312M34LJ33G1312M312M32MA34RV33MR32EV32E734G0332333VF32EJ33A432VA34LZ32V334M332V3338H32N134A6325B33LJ321O33L7320T34AF32652CF33A2334734M82DK320T32HA2AV32HY33AE32XC34M032OS32BM326R32NP327034AO321D22334NX328D34T532VT32O323D34LD32HU34TB33HY34O933OR32Q3329S33BX34GZ32PE23634L2329S328D34TN32ZA23734OK26N32QO327F326P33P732WO326V34NL2AK33ZN320T34TJ32Q133Q433IC345332KD33ZN33AE33C031ZQ23G34NT32PJ321O21Y34TC328D34UK32ZA21Z34PE326T34C132Q721U34T632A334UU32ZA22J34TG34N1334822M34N533IO34TU34TW33P133BR32XX34HJ346A34UA321R321O33PG32A334UP329133DE32T8314333IF335634IZ22F34P532452BO31CF329K33U2325K322E2SN24434PE34PI321V31L5336Q329A32E1328D21A34PN335O323R347E320C275260337I340A323632RZ32B926M25Y34Q126M25Z34Q432ZI34E034QA332Q33TK34QC32C934QE321I34QG33S434KD34QJ34K8320Y34QN2AK34QP338C34EI27534QT321I34QV34XA21J34QZ32ST34R234KT34R534KV34R732UZ2YS34RA32MB33DR21P34RE349G3391331734RH322S346Q331134RM342E2SN26P32NU32M2324B34RT323E34RY34RX324B323L34S034FZ32MZ34A6325734S534S833A633NQ32MT314334SC33VF34SE348Y34NO34SI33GX32N1320T34SM32TM34GE32VB34SQ334734ST33WI34SX34SW33NW321O34SZ34GI34T234US321D1N34UV27934ZH32ZA26E34Y732HQ34ZM33W1328D34ZP33B534V1326434U633OS32GU34Y734TP32A331ZW328G34V732I034TZ323634U133PA326Y34U433C2321333ZN33ZN32GP34UA330234UC34NO34UE2AK1O34UH33W526D34Y7326E32A3350Q32ZA26A34Y7321V34UR34I1321D26934Y733PN351232ZA26U350R32W234V132HQ27134Y734N6322B350X326J350432WG34NJ34IL34VB31AR34VD33W534VG279350W34VJ34P0334Y34VN33QU32F7350X27831BT34VT33JZ34VW32TL2SN21C34W133XM321R34W433DF34W732A325P34Y732D32GB25W32ZJ32MY323U2AV32KF2AW352O321832MY32BM2HE33LS34QK32ZX34QM34KA2BO32SK2BO2BO32SS337N32SZ34XB32EN33M534Y32CI2SN25Y350X32QZ321Y321R31EM324A3220312M32LA2MQ32RF330S2MQ34RS3525347D352G34FA34XX33MV3394329H331134LJ339931AR243350R323831EM312M32U7343O33N43213354A323L33GN32GV33NL341R32UY33N834SH34Z434SK34YZ32N12MQ34GE325B354I32OS33GG320T343R326R343R325B326R2CF34SF33XU34SR2DK326R32PV2AV32OR2AW355A2AK32OR32BM327032NP32GJ343Y321D252350R32HU355L32ZA23T34ZN32FN355Q28Z34B6355T34TI34NN326432WM33JG32G0329S24X34Y732WM329D351G26N32OZ327C326P350B34TJ326V350E32UO33ZI326R32WM321333ZI33ZI32GP33I7279326R33ZI355B34U832KY27525734Y7345C320T23O34Y734B635713291320T32ID32VU355M32VR3518350C32Q532O324E34ZZ32HU357F32ZA24F3568356A32OT356K350C321K34U2346A356P321R320T34UE32A3357433JJ33VG32PT33C233JS34IZ244351Z32712MQ327V329K32NA3271329P31AR25V353E329L34S3321R2GB341R329A32DY33WF350X2GL29Y31L532RX32B1320B26M25X3206322M31L5322S34Q934WS324Y34WU32ZV32EJ34WX32SI34E733LX34QH2HE34X434QL320Y34QO34KG34QR338E34EK32C934XF322A23A358G34R032J6312M34R3324U34R633WT34R933N033DR23G353U331834RG34L634Y13392353A32312SN21D354534Y934FH34YC32BT34RY34YF34LW324534S234YJ33TK34S633AE33A732V432EM34YR327734YT34SG34YX32KD354N32MT34SN34Z233AF32KD34SS34ZA34S734Z932OS34ZB32C934T0321I34ZE351026M22E351332HU35BH32ZA212355R325G35BM34ZQ32A335BP34ZT32W4355X34TK33B832GJ229357G328D35BZ32ZA21A3568351I33PA34V932GF34U233Q8326534U634U8350F3452334U34UB34S7350L27922J356Y34UI26M211357932A335CQ32ZA1Y358G350Z345L1X35BI328D35CZ32ZA21I357B34TH32HQ21P351D32HU35D8350332GG34TX33C235C8321K351M326W33JG350Y358232HU35CV351T32YC351V346L34IZ21E3586352133AD34VV32EW34VX323F237358G34W2352A34S334W634IZ1D35A22GB25V352K2CR352M330333N8352Q27932KF352T359A320Y359F313O32SN353032ZX353234KE2AK353534XC353731AR353934EM2SN1M358G342Z32J6353I34KT353L34KV353N33GX2YS353Q33K234VY26M1S35A22SN342734L934RI353Z33923541342E358E26H33MZ354734FH354A32MA354D324H34A632UU32NJ354T325B354K35AX330235AZ34Z0354Q33C1354T321O354V34G9356Q35GG32UY355133C12MQ33O135552AW355734AH355C32KD32IM33BW33U9355G321I355I34GK25L35FT3265328D35H134T932Q726S35H234B635H832ZA35H535BV3335356033UV35DF35H2356632A326P35H2344R357M32I0356D350735CE356H326W357O33ZH35HX356O33V835GH356S355D356U32WZ34XC35H2356Z26M25G35H932HU35IA3575334Z32HQ26035H2350S27935IH32OD34ZW345L26635H2350027935IP32ZA26735HN326J35HP34TY35CC32XX357R31AR357T34HA34NP35IC35HN35DR32T8325732WY34P133RM25W35HN2783143358833JZ358B325U322E31AR1J358G352B32T8358K33DF358N32A324V35HN2GL289358S323632B129C289325M270322M2GB25T2DK35EE34AH35EI35EG35KB352S338335EM352W33S4352Y35EQ34X535ET353434KG2SN33M335EZ321I353A35EX25235J826N35F532T835F733FE35F9349135FB324S35FD35AD329P2SN25835H232LV353W339734L635FO331735FQ33T631AR23735II354634YE339G35FX32BT35FZ324T35G135AJ325735G4343A33NW34YW35G9354P34SO354S34S735GF354X35GI32GQ35GK33AK35GM35I334GE32QE33NZ355933Y7327234Z4320T355F34GI35GZ33PV22X35II33W235H233Q324435IB34CS35H2328D35MT35IM355Y325Z35HG33OS329S24135HJ32XP35IW356932PE356B34U834U535HS356G326Y356I33PA356L35HY32BT356P35MI35I235CI356V26M24B35I732PJ320T22S35MZ32A335O132ZA22T35KZ357634GK23C35MU328D35OA35N434TK32HQ23J35IQ32HU35OH328G35IY35NN357P33PA32WR334V35J4357V34P226M35O6334633IF34IQ35DM35JD32HU23835JG3587332H358A324535JM32EN24Z35KZ35JR32IG35JT335N35JV27922735LE322J32K9352K2GL31M52AV33LV2AW35PR33ZJ2GL32BM313O33LS35ER33S435ET32SN2MQ32SK342P32SS33GE31CW31AR33M3315733M535LL32DT26M22G35KZ323Z33DD35AX3220343434KV2SN34PA330S2SN35FV358D26M22M35PK330K35LG32T63394335B3392354832U031571I35LP324531EM32U731BT31BT32MA35RB33MR34G132PD34YT3378321O32UV354W355635MB355032MT325B2SN33O1321O3378320T33GR326R34M7327034M7321O32702CF35GE34Z735GQ2AW327032XC2AV32WE35GP334Z35GH326R32BM32GJ32NP329S34T326M1B35O227935SN33HG35SM35H234OF35SQ32Q335N732Q333ZN34BD33B832WM21E35H233ZN328D35T332ZA21F35ND32WK32GU326P35NM356K326V356M32UO33ZX3270350B26M33ZX33ZX32GP34HF275327033ZX35SD35I231ZQ21P35I733DC1635ST32HU35U03291326R32QV33Q31535SO27535U832ZA1R35II35N6334U33Q31135NB328D35UI32ZA1U35TA33C235TC34U8356J32XX35NK334V34HF321R326R350J328D35U332QT35P033PT33PE34VO34DE2751N35P432572SN326N329K33NT32FQ322E315722D35KZ35PF32IG341Z35DS35V72CO340A25933TK29Y29C2NU325X35K333RH35K635K826M24V35KG35EF32MY35EH35M135W633U9352U330934X535KM32C935PZ32BT35KP35EV35KR35EY359L31CW35KW323F26U26E34IU33NM32Y8353J324B353M34J6353P35LA35FG27035WR34XY35QY35FM322S35LJ32D335LL323131AR24X35X332U435FV354932EW35FY32EW354E34S332V3354H34G335G635M332NJ354O33VF35GB33AK35GD33TN326535MA354Z326W3552322A35GN34SO35MI355835GV356T35GU35MM35MP355H33F333Q325Y35XE32HU35YH32ZA24M35X333Q325X35X334B635YP35YL35XE325Z35IN355Z334U356232BO35X335HK27924U35X335HO35NF32OT35HR32GF35UU27935TE32BT35TH35HZ34BD35I134Z435UZ2AK26335X333C7320T24L35YQ32HU35ZQ32ZA24I35Z5357U35IF32O324H35YI33CE35X3328D25235YU357C32XL325G25935X335IR31RT35Z535IX35Z7350535J034IL35J234IM346C35OT33RM35ZV35OX32J635JB35VO35OU24Y35Z535JH322A358932LB327U32TL328S35ZW358H338M33WS358L33TH328D23X35X332D32NU24S35PN32UG35PQ35AJ35PT32C4322F35PW35EM35WG321335Q132KW34X535Q52AK35Q735QE35QA35WM33LB348R32EN246361435QI33QR32EG35QL34EU2YS35QO33RQ362A32EW34J732EN24C361C35LH342734Y334RI35R1331735R33399315722B35XE323831BT35R9339G35RE35RD3245323L35RG34SD34G335RJ35AJ35RM35SD35Y135MD32UY35RS34NO35RV34A935MI35RZ345K34SX35S334NO34Y52AK35S733YY33WI35SB35SE35MI32R3363T33U935SI321I35SK34GK22135ZR328D364135H6321D23835X334OF364732ZA364435SW334U326435SZ35HH32WM23535X335T532A3364J328G35TB32OT35ZD32GF35ZF2AK35TJ35NH27535TN33IC35TQ32GG35TT363N35HX35NV23F35ZN33DC21W364832HU365935U433QS33Q321V364232A3365G32ZA22G360635SX32HQ22N35Z132HU365P364O35UP35Z835HV35UT34U832I735UW32WD35I4328D365C35V235JC35V4360T33RM22C360W32GK35VC33JZ35VF32TL3157243361435VL321V35VN358335VP21B35X326K35VS35VW33Y435VV326D35VY27Y358X35K732BN24T35W435KD35W835KE35W935EL352V35WD320Y35KN353132TM35KQ348M35KS34XE361Z32MC32PF2SN21J361435L135WU35F836293318353O349435FE335F323F21P362I32CJ35FL35LI339M35X933MW34CO32O534Y835XG35LS35XI35LU35XK35G032MZ35XO32UN35XQ354M35XS35B0322A354R32ST33NW35M935RN363935RQ35Y435MG35RN35Y835MM35YA35MN35GW35MQ35YF32O31N360132A3369632ZA26F368833Q31I365H279369E369A368834ZV35N533PA3561360S32J728Z35Z2275369P33W435OM35Z9356F365Y2AK364R275364T327335I035NS35ZJ34NR1O3657326526A368834B636AB35IE357732FN26X369J32HU36AI35OE34CB321D2703688360C3206368835Z632GJ35NG357O34TJ357Q350935OR35I035ZX357W351R36AT35J93665366832HU26T36AT360X35JJ34P83610358C35JN26M21C361435PD321V366K358M34IZ25O3688361D26M35EC33RR322F35PP34K935PS361J361M33F4361O35KO32TM35Q2361T322A35Q634KG35Q935KV367J35QD32EN26136B6346D324334OZ362732EW32LA362B32F0362D35QS36BI26736BS362J34Y234L6362N32D3362P342E3157240369J362U368E33G1362Y32BT35RE3631368P32GK35RI34S735RL35MB354Y34G3363A32GQ363C34SX363E35RX363I35TR36DR32OS363K34SX363M35GH34MB32GG35SA363V35SD363U35DJ363W34GI363Z35BF25536AC32HU36EA355P369C355S368834OF23T369J35UF33JG364F33V835T126M24W3688364L2KP3688329D36AT326J364P32I0364R35TG35NP279364V35TL364Y35TP33VC27935TS35RN35TV2AK256368833C7326R31UF33Q632HU36FJ32HU23P36CI35U534GK24936EB328D36FS32OD365N32O324F3688369R325C36EV32A324C36EX26N36EZ356C365W34IL35UU346A366035UY35OU36FO3291360S32T8325B35V5351X27524536BC366C32NK35VE327135VG32MB25U36CI366K321R366M34IY35VP23036AT2GL29C2GB358T358H29C35W0329B24Q2DK35PO34AH361K36BZ35PU33U935PX33F6367D2BO36C735Q436C9361V36CB353735QB321I36CF31AR23B36CI362532IG31BT36CM35QM349136CP35QQ362E361232Z736CV35QX362K36CY33NB36D033MW315721C36D535R834FH36D9321336DB33NS32NJ36DF33AE36DH35Y036DK368U36DN33NW36DP35RN363H35S132GG35S4323F34SW363O36FA363Q36E2365336E432WE35SH36E735YF32FN21536FT32A336JL35SR36JO32GG328D36JQ35YX36EM325Z364G33OS32WM22936ES32HU36K0365T329S35UQ36F135HX356N364U32GG36F635TM364Z36F936DS365235ZI35NV22G36FG33DC21036EH32HU36KN365D35U632O31Z36JM27936KU33EB36EK369M357D32Q721R36G032HU36L334H736G636G835UR35NN321K36GC31AR36GE366232A336KQ36B836GK35J635P1328D21H36GQ35VB36GS34KW34C0329P315723436GY34XJ26N36H136LM32A31C36ID34K636BW2HE2ZY2AV34KD2AW36MA2AK34KD32BM2BO33LS35Q332ZX342P32SN2SN32SK323J35EU27933GP35WN3537316Q33M536D12CI31571P36CI33GD32J6314332ND322031BT32LA31AR327L330S31AR362V366G34FD36ID3157342735FQ34RI34J33392362W3399316Q25V26C33MZ314331BT32U732F832MA32F8323L34SN32UN35XX33LJ320T34A635RY2DK35S034S736DV33NW32QR35I333LJ35DK363P33H232GJ33H2320T32GJ2CF35RW33WK35S92DK33BS34E032QO35S834P036DS327032BM329S32NP32WM35SL25K36NQ36JR32A336P23645322G36P3351E26V36P3328D36P635SY33V8326433ZI32XZ32G033ZN26O36P333ZI328D36PM328G33BU32PC326P36F535HS36F72AK31GP32GJ33ZI321331GP31GP32GP34HJ27932GJ3402363P365231ZQ26Y36P333C7327025J36P932HU36QH32ZA25G36P3321V327032Y535IG36P334OF26036P336EN34BD33Q326636P336ET32JR36PC32A326736QN326J36PS364Q36KB32XX36A231AR36Q6321R327035TV32A336QM32XA36LL34VE35I436M127925W36QN278325B34CO33JZ2BO344L329P316Q1I36CI36M0321R2CR3243329A32MJ328D24V36P3366R32MY2CF358R35KH32JN36HA26M36HC2NU36HE36C036BY32SL36HF36C135PV36C335PY36C536HP361S36HR2MQ36CA348M36CC32BQ36HW32BQ36HY26M25336QN353H34YU327T35QK36CN35QN33DP36I936CS32EN25936P333MV36IF35R036IH322J36MW3231315722636QV36D6362W36D83245362Z36NT36IS35RH363436DG34Z436IX32UN36DL35RR33XU35RU34Z436DQ36J436O832MT35S536J933XU36DS36E136E536E335RN35SG32C9363X32BQ36E8345L24736P334B636UV32ZA22V36P332HQ36V036FK328D36V3364D36JV34U835T0320N32WM23236R032HU36VD32ZA23336R636G7365U36F036GA36F236K936F436RA321336PX33VB32XZ36JB36KH36A535NV24836QE32PJ326R22Q36QS32HU36W432ZA22R36T8366135U632FN23B36UW32HU36WE36FW35UG32O323H36P336G136WL32ZA23E36VJ36L933ZN35US36GB369Y36GD36F935UX36LG27936W936GI35V3328H36GM34CZ23736RR36GR35VD36LS333035VH36EQ36WA36GZ36LZ35WT36RO27522236TK322J2CR326C36M6339M36M935XM329Q34A636ME35WF35EM36MI33S436MK32C936MM32ZX36MO32SS36MR275315733M336MU321I36MW36Y926M22F36WA36N134VL35GG36N5367S36N833AD2YS36NB32YN36XE22L36XN32T636NH34L636NK331736NM342E32U936TU327136U033G136NV3454327136NY36XJ32UY36O134Z436O436DT36O733AE36O932OS36OB32KD36OD33NE33I42AW36OH34Z436OK35I332Y1363P35B836OQ324Y36OS363P32YC36OV33U936OY321I36P034GK1636W535V036V132O321H36QI36LN36R3279370A32OD36JX32Q336PI35HH33ZN1E36PN334K36VJ36R832I036PV32GF36PX27936PZ35HX36Q226M36Q434HI34NH33V936Q936VW34NR21K36W134TV26M15370G32A3371G32ZA1236WA36QP34GK1P370B32A3371P370L33V832HQ1S36VE328D371W36PR33PA36PT35HX35TK36RB35NP346A36RE371E36RH279371L36RK33PE36RM350J36XK32KG36X936RT32HZ329K36RW32GQ36RY26M22836WA36S233R136TA36S634IZ26K26D35VR32MY31ZM329V35KH351R2XK32BN34RK330324O34K724P3380322F24M33ZJ34WI3670313O24N2DK341Q34AH342P2AW373O35WJ2MQ32BM31AR33LS315732SK34FL32SN316Q32SK33N332SS32EY31CW31EM33M331BT33M5343V32PF31EM26P372Z32Y334LZ36RM34GE322032UQ3491312M34I02YS312M328J329P3547374E32D331EM342736U032LS35JI3311325733SG323131BT23V374E32U434B932U732HY32MA32HY323L36OM35SD33GG35ZH33V933LJ32WH2AW32WM36DZ327032WM2CF3270312M32YC36VV2AK329S343R33P72AW33ZN36ZY34U82CF32GJ312M33IF32WM370334U832Y52AV33BU375L36LL33BT33PA32BM33ZI32NP33ZX355J26M25T374E36G1376N32ZA24H374E33Q324S374E36R12ZZ374E33CE3756325Z31GP35OQ3264340735CF32G031GP24P374E3407328D377A328G364Y356S326P340E32WM31GP32GF340E340E326Y33YL33ZN3407321333YL33YL32GP364T35CB34DP27932WM340E35NV25U374E345C32WM258376W32HU3788329132WM350J32HQ24W376O32HU378G32OD377336L1355K374E31GP3604376Z32A3253374E344R377G32OT3407377K32XX3407340732I7377X321R32WM340733RM378B32IG326R36KH36RF371436B9328D23W378U278326R312M327F329K36ZW32G4322E31BT25M378U321R34EZ32T832TJ33DF354I328D23R37852IE342134043341373527921G34WV361L2CR313O2AV36H0339M36SG2CR29C24K358Y329Q24L2DK2BO32EL2AV35ET2AW37AS34X832TM32BM2SN33LS31AR32SK32DU32SN373W32ZX34FL32SS32V231CW312M33M331EM33M5374X32WZ312M22Y379T344S326Y33PT32F6322033GT3491316Q34C03494316Q325735P9312M240374T36TP35QY36Z134RI35DW3392374A339931EM1Y37563238328J32U732VE32MA32VE323L35S5356T36ZO33GR3270337833I92AW329S35MH326W329S2CF326R316Q32R3327033GR37642DK375K33P636UJ32GG375P363P316Q32YC329S36E4376734AH32WK37CO35P032P133C232BM33ZN32NP33ZI376L222374E36AR37DN34UY376T32O3221378H3643378R35CL377136KD33P53264378L33HR33ZX21U378O32HU37E632ZA21V378U326J35TH34UC326P3407329S33ZX32GF379132UO377J379E3213377N33IC35ZB376F3782375V35I934NR227378532PJ329S22E37DV32A337F232ZA22F37BI329S33C033Q322A37DO32HU37FC32ZA21737DZ33ZX33P532HQ21A374E33ZX34W837EC26N37EE32OT31GP37EI32XX36Q334CN35HT32IA36VK36Q9328D37F735IE35NT36WZ36KH35V635OU213379I3265316Q3213329K363M326E322E31EM22V37BI2GL331T379U34A9329A33TV328D21Q37BY34KW32KA26M32ZK373M34E0373Q33OX36TA34XA373S359M35EM37B433S4373Y32C9374032ZX374233GJ348M3746321I3748321I37C532WZ31EM1B37BI35AO32IG321O374I32GQ32LA374M32HZ374O32GQ36GV31EM21D37GV374V331137BE34RI374Z3392375132U031BT25E26A33MZ3758339G375A34HK32OS375D363F326W375G33NE32GJ375J37D3375M36O633PA375Q324B375T33NE375W2DK375Y34U334Z727532GJ33ZN3763324B376636OU376934AH376C37D233Z835OP33U9376I321I376K34GK26Z37IF33PA346F37JP33Q326H37JP376X37JU32ZA37JO378K36B03775369Y33B831GP26A37JP377C32A337K632ZA26B37JP378V36KD377H26M37EN377L326V37EQ377P34U8377S275377U33IC377X34U7377Z37ET34NR26K37JP33C732WM26U37JV32HU37L132ZA26V37KD379535I433Q326Q37JP36G137LB32ZA25N37JP37E236B032HQ25Q37JP378P32QB37KD326J378W32I0378Y37EO321K37EL379336F337L8379732PO37L73661379C371E371937G933RM25J37KD379J324B379M35QX35O8329P31BT1437BI379V32IG379X335N379Z33QV37KD210368P26G2IE2BO27I31ZC27537A932JY2AK230372U2BO337W34JT35W934DV320Y2IE373P32N02AV37H237H5373L322A373T37H834X537HB31CW37HD33S437HF33TR37HH353737HK32BQ37HM2CI31EM24L37M237HR35DL37HU374K330S37HX329437HZ374Q37GJ26M24R37JP374U35QY37I7322S37I9331737IB339931BT23J37LH323837IH33G137IJ3213375C36ZV35RN37IP339V37IR37D037IT37D3375O32MT375R34P0375U34HG35MB37J335CB376137J833V9376537D2376833ZN376A376F37JH37JF3780376G32C937JK32BQ37JM35BF23P37LC36FN37JP328D24537JS32O323K37L232WA37PW32A337PY37K03774325Z377635HH31GP24D37K732HU37QD377F37KF32OT37KI35HS37KL33YK37KN32BT37KQ377W36F337KT37J237KH34NR23Q37KY32PJ32WM24037Q232A337R132ZA24137M2378D34GK22S37PU328D37RA37Q736AN32CG37LM32HU22Z37LP26N37LR37EG33PA377L37LV37EW37LX36VP37LZ35OU37R6365D37M436QG379F32A322O37MA326W379L33JZ379O32TL327M37M237MK321V37MM33QT37MO27923F37KD2GL2CR2HE32JJ32A52GL325I34ED322F24G35KI33M533SE36XY32KV361L2BO2CF33TV2O62HE22737KD32HU37T4327J25T34KW22437JP2GL328D37TB35VX34KW2CR325Z32AP32LB22337T534T737M2313O32C526Q26N2Z627Y25Q11322A2CR32ZK31RS2BO37GZ32BT2MQ37TI337B2BO325Z2MQ321337U526M25837U737UD322A37UB32MY35VS37U131M637UH34XA2CR25637UF37UQ37UA32B137UC2572DC24Y32TM37UW37UA37UO328E37UF328A37V137TY2TA37UF25536TA373Q3536373A32BQ31AR347V3670316Q25232UF343M343Q32UF343R354A343U35EM325732SK32NI32SN325B32SK32VE32SS34Z934MF3537326R33M535GX32KY333937M237D1321V32WM33IF322037CS34KV34V932PC2YS34VF32PE329P320T21237OC322J320T342735BC32LS327032MW32D336UR342E326R26W26B33MZ32WM370633G133BU32MA33BU323L33ZN33H233ZI34M733ZX37CQ31GP343R37EH2DK340E35JC364X37QV2CF33ZX321O36KH31GP37CQ37KO2AW37EN2AW33YL37JH31GP33YL2CF31GP321O3719340E36VX340I36Q92AV37EQ37XW37QV37YD340E32BM31Z732NP340P376L1037JP340E328D37YM32ZA1H37PZ32Q71V37JP33YL328D37YV37YR37LH325Z3238377O32Q332B5377V34TL32381O37JP32B5328D37ZA32ZA1P37RK340P340P340L326P347O340E323832GF347O347O326Y348233YL32B532133482348232GP31Z731Z737KM348237YD347O35NV1537QY26N340E26K37X2340I328D380B32ZA2GA3291340E34DP33Q326G380C37YO32ZD380C328D269380C326437Z337RF26C380C3238328D380X328G37ZI34PX32I032B537ZN32XX32B532B532I73800346C340E347J32HU380H32IG33ZI340P32T833ZX340S36H235OU271380C32AY33ZI321O356S329K314333ZN36PO322E326R2UC34KP35B3338N34GE329A32V2328D26S380C32AX316Q25332032IE312M278310G37MY37H337A835EJ2AK37MZ36XJ329S367U36HT34E034XA33GG36MO37VF2RC36CD37VH322M312M2503322324X2AV35RE32E734M735RE32BM325733LS37VX32ZX32VE32SN321O32SK32HY32SS35GU33AO3537327033M537WY2CI326R25W381R37L834SW321R33ZN35JC322037D5349135NI32WW2YS35OT34TP382026M262382B322J326R342737W632TU32PE325032D3370633993270230380T323833ZN32WM32U7356G32MA356G323L33ZI37CQ33ZX33H231GP36DZ340734M737XX37QN37Y0340I37Y332653719340736DZ340E36E4377Q2DK31Z7372G275340731Z72CF37KO37M037Y9385J37EW34E037KQ37XY340I385X33YL32BM340P32NP3238376L250380C37YX32A3386632ZA23P380C33Q324Z380C31Z7328D386F386B380T325Z37Z63335347O380134TL32B523W380C347O379G380Q32A323X381R326J32383238381K326P37ZT26M37ZV326V37ZX32UO34DX31Z7347O321334DX34DX32GP3813326Y31Z734DX385X380335I52TA380C33C733YL23K386G32HU387U32ZA23L383W26N33YL347V33Q324C386732HU388532ZA245386L3877340I3608321D248380C37ZC32A3388G328G387234JV32I0347O37ZU32XX37ZQ37FY387J32IG33YL380532HU387Z3291381M32J631GP381F372H241381R27837EJ36KD36BF325733ZI37FO322E327025T388037BT359S33XU329A32EY328D22W382B31ZV312M382E27537MT32EW33ZU32AZ382P331T382P3219382P321Y382P341R382P336Q382P32C522R36TF34PQ35QX34E0348V338O36SG31AR37AJ37AL316Q327Y332837VM343S37VO38AR37VR33LS37VT32ZX37VV33H534X537VZ34NO348M320T33M337W435BD34EM320T221388037WA37L837WD33C232LA37WH330S37WK32W9322E320T227384D35J537WS34L637WV3311383S3231326R13384Q372134FH37X734NK33PA37XA35B336A136DT37XF2DK37XH2DK37XJ37YD37XM36KD380A36KA37XR36PY35Y637EW35YB385727937XZ38C8385A38CI37Y52AK37Y72DK33YL37YA27537YC38CT37YE38D037YG32C937YI321I37YK34GK31CN28Z380O27938D9334838DD386838DC388B380V344H386N33OS32381Z388H32HU38DO381234JV37ZK347N37QV37ZO326V388S37ZS340I37ZV275387A37ZZ34PX380237XK38DV35NV216387R32PJ340E21I3886328D38EF32ZA21J3880380J34ZF26M21E380N32HU38EP32ZA1838DI37QV334G32Q71E380Y334K386X2791F387026N381338DU381626M37ZO321K381937FY381C37G0381E35OU38EK3291381J32J63891366N35OU14389735HX381U33JZ381X35HX329P326R21U3880315732F6382533DF382832A31V38BN312M37UY36BW36I434AH383832513322325432C9383D321I383F33S4383H32C9383J32ZX383L35I3348M34MI31CW383Q35GY34EM326R26G32OL32IG37P9383Z35P03842367S3845330S384832TL327F38H132D3384F3311384H34RI32GJ384K322J384M342E327024I38H132U4384S34FH384V32BT384X369Z38CJ385138CP385436DT38CM37KP376E379E37Y238CI320T385D37D3385G38CV36RN275385K38CA34PX385P3265385R38CW385T37M02AV385W37QN37KU340I386032C93862321I386434GK26238H138DG27538J035SR38J434PX328D38J6326438DL32Q3386P35HH37Z638H1386V32A325E38H1344R388M3874347D38E135HS38E42B934PX387E275387G33IC388U279387L38ID387O31ZQ25P38H1387S26M26138H1386H32A338K834N938JK321R388238EN25X38J132HU38KI32ZA24R38HQ386M388D345L25T38H1388I27938KS34MO38JK387138FA388N37ZL38JP34IL38DZ334V38JY38KF38E935YJ38KE37RL38L032T8389337S02HF38JK3898326535TT329K389C36KD329P327026D38LB389J3353389L35G7328D25A38JK37MR322H382F32EW27Y37MX37A632KO27521Q32EN343T37H737N632DU24Z349O31AR347O36MS24W36HX26M31SA343938GS31EM31AR23Y324H369S36Z938MR2DC336V31BT38MS327V25134CQ32F432AX325737VE33KN325B3831326537VK36OT328Y2AV370136JB376832QO36OX35EM32WM32SK33BU32SN33ZN32SK356G32SS35NT32C937PR32C931GP33M53407362133ZX24838LB385I32T831Z737EU341S38I7349133ZI38EM349433ZI33YL37YO322E33ZX24E38HD322J33ZX342731GP3394340732QV32D3340E3752379E22838HQ323831Z733YL32U7381C32MA381C323L340P38CD323834BL32B537JH347O376838762AW34DX38IS32B534DX2CF32B533ZI3894347O37JH348237Y8387C2DK34JY347V279347O34JY2CF347O33ZI388X26M34DX389438J338L92AV38JW38PG38Q42DK38JW32BM34PV32NP34Q0376L23C38H134DX35OC38H1328D22038H133Q323B38H134JY328D38QT32ZA38QQ32OD34Q3387H32Q334WN34JY33OS34Q323438H134WN328D38R8328G34Q034Q034PV32I034WQ34DX34Q332GF34WQ34WQ326Y352J34JY34WN3213352J352J32GP34PV34PV326Y34JY352J38QB34WQ35NV23H38K532PJ34DX21Z38QU32HU38S832ZA21W38LB34DX34JY35BF21V38QL32HU38SI32ZA22H38KO38K738QC38EX321D22N38H134Q3328D38ST32ZA22K38KY26N38RE26M38RG326P34WN38RJ32XX34WN34WN32I738RW346C34DX34WN33RM38SD3291323834Q032T832B534Q338FO33RM22D38LI38L033ZI340S329K329S340P380Z322E31GP24538LB37WK32T8360N33QT35GU32HL38HD31ZV320T389T31ZW2IE326R29Y382J38M635B3382P3325382P325234U636E435B5331U37CQ34GC38AY38N731CW321O38NA326R383436ZR334Z2AV32OZ38V134BL32OZ32BM32WM33LS38NQ32ZX356G32SN33ZI32SK35TH32SS36VX31CW31GP33M3340733M538OU32PF31GP1C38LB31Z737G638F6385Y338P385O34KV33ZX38KG349433ZX38P032TL31GP21E38OL26N31GP342738O0331437QV32Y532D338P132U0379126933MZ37ZJ34FH381332MA3813323L323837JH32B538CD347O385L38JO34BL38PT2AW38PV2DK38PY32MT347O33ZX38Q3348238WY34DX371938Q7381K35ZL388N34JL38T332MT38PR38JO31LV38L929D38XM324Y34JY38SG2AK38XS38PU384B33U934Q032NP34Q3376L26K38WL38XX380E38Y4328D27038Y432HQ38Y928Z34PV38Y838Y4326438R4333534WQ38RX34TL34WN26F38Y434WQ32O838Y732A326C38Y4344R34Q334Q338TK326P38RP34WM35HS38RT32UO358X34PV34WQ3213358X358X32GP38T2326Y34PV358X38X226M38S0387P1H38S526N34JY26Z38Y438YE32A338ZP32ZA26W38YV321R34JY38RG345L26V38Y438QV32A3390132ZA25P38YG325Z38YI38SR327838Y438RA32A326R38YS32NE38YV326J38YX26M38YZ34WP38XX38RR321K38RM37FY38ZD32IG34JY38S232HU38ZV329138TM32J6347O38TF381O33RM25L38YV27832B533ZX347J329K32WM323837ZC322E34071938LB38U5321V36GF335N363U328D318733ZV326R38UC389V3270289327J382K3277382M35QE3921363I382P32EG382P326Y382P32ND38AB36FQ38AD368Y35OZ32PV36SG325B38AK3670320T31WC38ND34AH38NG370436OT36OW32C9329S33LS38NM32ZX38NO32C938VB33S438NS38HX348M38NW38VK367J38WD32KY33ZX24H38ZW388136RN321R38O734KT38OA330S38OC385Y2YS38OF37QV329P33ZX24N38Y432D338ON331138OP38WE38OR331138VP339931GP23E38YG38OZ340I38P234PX38P434PX38P637DF38L038PA38I538PD2DK38PF38JS38PI38QC38PL35HX38PO38I538XL38QB38PW38Q7394S38DV38PZ2AK38Q138XO38Q538XW388X38Q938QC38QB387M38JS34DX38QF34GI38QI38EN23L38Y438QM33UH390H2VL38YA33UM390233UJ390838SP38R238YH38XX38R63258390D32HU248390J38T1390M38XJ38RH38QC38RK326V390S38RO390P32BT38Z438RV38XJ38RY38ZI38QD390O35NV23M38Y4345C34DX233395L33WF393C38SF34GK22R395E32HU396R38R038SQ345L22X38Y438SV32A3396Y32ZA22U395X38T238T438Z238T734IL38T937FY38TC37G038TE35OU396L38TI395Z38TL38SP38TO35OJ391838TS38LD38TV34JV38TY379E256393C38U332IG391L329A38U732A323A393S384E26M323436BW32GJ32ID38V3358037J6398C33IB38V835EM393038HV34U838VE34X538VH36KA348M38VL321I38VN321I394032WZ31GP21V393C38VU32J6340P377Z322038VZ349138W138142YS38W4380D38TZ26M221398438WA35QY3938384I340E38WG322J38WI339934071Q394438DT38WO34JV38WQ34JV38WS38I538WV38X438IE38WZ396E394U38X32AW38X538Q036KD38X939A038XC38XW38XF38XP39AD38E338XJ2CF38XL387O38XX38Q32BD38XQ2AV38XV38ZH38XT38XN34JY32BM38XZ321I38Y134GK21F396M32A339B036P71X38ZQ32HU39B535T8395N390A32Q338YK33B7320N34WN21M38YP32HU39BH32ZA21N395X390L390N38Z138RR326V39692AK38Z6390O38Z9358W33IC390U38XP38ZG38XU396D35NV210396I31EM34JY1E39B6328D39CA329138ZY38EN1D39B127939CH32ZA1339BA395R345L19395U328D39CQ32ZA1639BN38SP390N34WQ38RQ32XX3965334V39C038ZX396F334K393C391132T8391338LG2751V397O391A388C36BF391E388C329P340722K393C391L36WZ372G329A391P32A31M38YV37MR363U391V32BL32WZ3925382O331Q392338UL323P33Y432XW37TG392I26M325F392K26M23U37IV38NE392Q370237IV392S31CW392U370734X5392Y31CW398I350D34U838NT34KG393527538NY398R34EM33ZX26Z272329138O532IG393G33FE393I38OE37QV347S393M340I38OH36KD26939F53317393U3392393W32LS393Y3392398U33T631GP25039FK32U438W5394731Z7394938D53295394C38P92DK38PB399Z38PE38VX27938PH39G6394L2AK38PM39DH27538PP394H389A38JS39A33814394X38XX39A738Q238JS38Q639AL34AH38QA3957396E395832C938QG321I395B35BF26339FK395F29D39FK328D24Q39FK32HQ39HC28Z390327939HF32Q338R1333539BB32G034Q325U39FK390E322R39FK344R397632OT38RI38SP38RL390O396639D038RS396D396A38YL38XN38ZJ39GB39D631ZQ26439FK396J2FJ39FK39HH31CX39HU321R396P33PV25939H732HU39IO396V38R233Q324J39FK397031KE39HA32A324G39HU326J39HW32I038T639HZ321K397B38TB396B32IG397F33RM24P39IK26N38TJ32J639D9391536EC39HU278323838TT33JZ38TW38L0329P37XH39JG397X321V397Z33Y733DH39FK38HE3224352K398934AH38V433V938V632PE398G38VA34X538VD37PO398M35HX38VI34KG398Q32BQ398S32BQ39FS39EZ31W539JG398Z32T8399134KT3994330S3996340L399834PX37YX399B23N39K2322J38WB3311399H34RI399J3311399M342E340722F39FW3873394A339G38WP32BT38WR2AK38WT39GD38WW39A0348238X039GO38XN394U39A639GP38X838XI38XB379E38ZH39AF38XJ39M6348234PV39AI36KD39AK34JY39AM38XJ387O39AP38XX39AR38XW39AU32C939AW32BQ39AY33PV22539IH32HU39MS36P723F39FK38ZR37SG39IZ27939MV38R339CO326439BD33HR34WN23839FK38YQ32A339NA32ZA23939J226N39BO32OT39BQ38Z339I539BU38XJ38Z827538ZA39BZ395Z38ZE39BY38ZH38ZJ31ZQ23I39IE39C826M22039MY32HU39O439CE3960345L21Z39MT328D39OB38SY39FW390939CO32HQ21V39HR38SK39NH39NJ396139I3390R39I139D339NU390V39IB32A339O732IG39JK321V39DB397M328D22G39JN388C391B33JZ39DJ391G37EW24639JG39DP366139DR363S328D22B39L6366138MN27537MR3703389V32GJ31L532HK391Z392437NQ39PV32ND38UK39E839KB35K2328H366Y37AL320T32A5392N36OR37JC392P360L38NK392V39EQ33PA38NP39KE39EV393337JL353739F039KM39F226M21H39JG39F7321V39F9338P39FB39FF38OD39FF38OG32TL33ZX21N39PL39FM331739FO384I39FQ331739FS323136PZ27333MZ39FY339G38P332BT38P532IJ39G4398E39G739A537JC394I39IA394K38PK39GF394N39GP38PQ39GL39IA39GN39LY39GQ39GP39GS39IA39GU39ME39GW395439GY395533U939H232BQ39H4345L1L39IP328D39SK350V39RG345L1G39OC32A339SR39SO39IS39HM39CO33B834Q32HD28Z39HS27639SP328D26I39SP39HV395Z397739HY3963390O38RN2AK39NL39I438RU32BT397D39C339I938JV39IB2AK1M39IE38S632CK39SP39II39TU32ZA27239T839IL39MJ334826Q39SP39H832UJ39SP326439HL390B26W39SP39IX32DT39T532A326X39T839J339TA32OT39J638RK39J838Z239JA39I739U13914328D39TZ397I38TK39OZ397L39JL33PQ39T839JO35HX38TU36VK38TX38W626M1E39JW36X439JZ398135ZC39SP39K336BV27532ZK39K634E039K836Q7398E38V732C938V9321I39ET34U733ZN398L38VG39KI398O321I39KL32C939KN32C939KP379E25U39U026N39KT32IG39KV33FE39KX38W3340I39L038LC38W539JU390M39VH39L7399G34L639LC339239LE33T6340723039U839LJ38D533G139LM321339LO27939LQ2AW399Y39RR38WY39LU39A238XW39S4394W38PX39A839M2396E38XD38XX39M634PV39M839AH38XI33ZX39MD38XO39AN39MH38Q739AS39XW39ML38XY34GI39MQ334823P39TV36FN39SP33Q324W39SP39MZ27539Y9386B39U839OH38R539BC39JB32G034WN23X39SP39NC27939YM328G39OO38Z0396732GF39BT27939BV39NQ39BY38ZB32BT39C039AN39C239I834NR25339SP345C34JY23K39YA387W39WA39CF35BF24F39Y5328D39ZI388939YF38Z239YH33Q324B39SP39T335NW39UG27924839UJ39NI39CX39HX39YU39OR39TF346A39D438ZN39OW2CS39WA39P0321R39P239V132A324139V339P739DH391D38L039PB340724V39WA39PF391N33QT39DT27922W39T82GL344X324627021K32OS23T38GQ32OS373F383O23Q36OP38V2398D39KA3A1C33U939VT32BQ39VV35HT39VY32ZX398N36VQ398P353739W531CW39W731GP23439WA39WC321V39WE38VY367S39KZ39KY39L239V923A39WO399F38WC39WR33VG38WH33MW34071B39WY399R32U739X2328V399V39LP399X394C38WX39GK39LV39S3399Z39XF39GI39XH34PQ39AA39M439C339XM38XH3A2V39MA39XQ38XQ39GV2AW34PV39XV38XX39XX3A3939XZ39AV39Y1369432Q722839ZJ32A33A3H333E39Y732O321B39ZD328D3A3O3A3L32OD39BB39N639YJ39BF26M21439YN32HU3A3Z32ZA21539ZY39YS396D39I339BS39NN39YX39NP32BT39NS38ZC39OU39C138XW39NY2AK22D39Z939O221O3A3P32A33A4O39O838ZZ32HQ21C3A3I2793A4V3A3T39OI32O321I39ZS32HU3A5238EJ3A453A0039OP38Z234IL39D23A053A4G39D5390X328D3A4R39UZ38TN32IG3A0D372H1C3A0H39DG391C26N39PA32TL34072253A0P36RL39PG33DF3A0T2751739T8322033NR32JJ3A11320T3A1333S432OR3A1636DS23R37OZ32QV2AV37DD37EV38CD32WK37DI35EM38VF3A1K35HX32SN33ZX32SK364Y32SS38XD31CW340733M3340E33M539WU385M321P2703291340P37M4394533FE340P32LA31GP31Z7381K2YS31GP38WN39DL32KG3A2534073427398U34RI33YL32WY32D339G2342E340E24P3A7634Y839LJ32U7388M32MA388M323L32B538WY39GJ2AW348238NU38QC38CD34JY3A2Z39XO3A323A2V31GP39AK34DX3A8B34JY385R39AN381N35IK38LD38JS34Q02CF39AB395639MG2DK34Q039562AV38TC3A3639O938XP34PV32BM34Q332NP34WN376L25R3A7Y39YB326Q3A7Y328D2663A7Y32HQ3A9J28Z34Q03A9I3A7Y3A3V38YL3264352J34Q033OS34WQ25I3A7Y352J328D3A9Y328G397B38TN326P39YY35HS3A4E38WE34Q0352J3213322S35X732BT390L326Y34Q0359138XG39C231ZQ26O3A7Y33C734PV2653A7Y3A9O32A33AAS32ZA2623A7Y321V34PV39UY32HQ24U3A9E32HU3AB432OD39N7345L25W3A7Y39YO2753ABB32ZA25X3AAZ326J3AA439NK3A4C34IL39BT346A3AAH32IG34PV39NY32A33AAY32913A5M321R3482390X372H24Q3AAZ278347O31GP3805329K33ZN32B5386V322E340E26G3AAZ39DQ32J636RG33DF3703328D24L3AAZ3220354O3A67326W3A6A35CG326R3A6D32PE23O37QU37PI37JI376D37PK37PN31CW33ZI33LS3A6T32ZX364Y32SN31GP32SK37FX32SS3A8O3A1Q353733YL33M53A7U2CI340E23X3ACF39JH3A2X321V32B539AD3220323832LA340739V83494340739LJ329P340E24Z3A7Y38OT35QY39LE34RI31Z733C032D338IW339933YL21Y3A9Q391F38L032U738FD32MA38FD323L394Y3A893A2W37Y834JY37JH34PV3A8Q34WF3A8S39IA3A8U38JS34073A8X34JY37Y834PV38O83AEX39GU34Q339S938SP2CF3A8N39U2395Z3A8X34N739U22AV38T22AW3AFL2AK38T232BM34WN32NP34WQ35SL23G3AAT32HU3AFV36P722Z3A7Y39UE32CG3A9H32A33AFY32Q33A9U3335358X34Q333OS352J22S3A7Y358X37RC3ABI26N390S38TF326P322S3AAB35HS3AAE32UO35EC34Q3358X321335EC35EC32GP39J92AK34Q339VJ3A8R3AAK31ZQ2323AAP31EM34Q023F3AG132HU3AHA329134Q03A5K32HQ2273AFW328D3AHI32OD3AG8390B2393A9Z32HU3AHP32ZA2363AGI3AGK32OT358X3AGO34IL3AA9346A3AGZ321V34Q03AAM32A33AHD32IG3ABZ32J634DX39I937M732HU2233AC338JO34073803329K39GS3482329P33YL23Q3ADO3ACI32T832GJ37G8398C328D21U3ACN35Y23A0Z24V371E37N632QO37N832WM23M2DK33ZI33C02AV35TH2AW3AJD38HX33ZI32BM31GP33LS399O32ZX37EL32SN340E32SK37EQ32SS37KU31CW31Z733M3340P33M53238362131Z72163ADO37ZM32J6348238943220347O32LA388Q38052YS388W39DK322E31Z72283AE5322J31Z734273AED384I39JP331132B538OV340P26C27133MZ3482347O32U7387A32MA387A323L39AB38ZH3AF5385U3AFO36543AH039XT38Z239MF34PV34WN2CF34PV33YL38ZZ395Z3A8O38SP394U34WN39AK33C43A343AEX34WQ2CF34Q033YL39UY38Z23ALJ3ALQ39UY2AV397B2AW3AM32AK397B32BM352J32NP358X35SL1T3A7Y39ZT3AMD35SR3AMG390O328D3AMI3264322S38TA32Q335EC39TF33B8322S143A7Y35EC328D3AMU32ZA153AGI39NS38S0326P325M34WN322S32GF325M325M326Y35KA34WQ35EC321335KA35KA32GP39YW3ALQ35KA3AM436SI34NR1F3AH738Z21O3ABC32HU3ANS329134WN390X33Q31N3AME32HU3AO0380G3AKV32Q33AMN378M32LN3A7Y322S328D1J3AG42791G3AN139BY3AN336BU38Z23AN7321K3AGW37FY39YW321R34WN39VJ37ZD3ADO34JY39Z5321R34PV3AAK372H26H3AO532AY34JY33YL38SG329K31GP396P329P340P2133ADO329S371937RU335N33Z832OO3AP32GL327037WF27226233W523P32GG31CW32GJ336Z376D3ACZ37PL37PJ37QU32WM376H35EM3AD733S43AD938NX34X53ADD2AK3ADF38CY3ADH367J3ADK3AQD25N3AP3321R32383APG26N3ADS34KT3ADV34KV3ADX38LD2YS3AE034JV3AE232603AO53AE634273AE8322S3AEA33113AKN33T633YL23M3AO532U432B53AJZ339G3AEL32BT3AEN39S639GK39M33AES38I53AEV3A8Z3AEY39TO3AF039IA3AF239C33AL63AF7395Z3AF939GH38XN34Q33AFD37EW39AS3A902DK34Q338XT3AFK397J3AL83ALX3AEX34Q03AFQ34GI3AFT38EN24R3AO53AAU2793ASJ32ZA2573AO533CR3AO53AG23ASP3AHM39OU32643AGA39BE396D24I3AO53AGG32A33AT132ZA24J3AP3326J3AHW32I03AGN396D32GF3AGQ326Y3AGS39BY3AGV3AOK3AGY39UQ3ALA3AH23AEX3AH42AK24S3AO533C734Q02523ASS355N3AO5328D2533AQJ395Y3AHG32O324Y3ASK32HU3AU632ZA23V3ARA325Z3AHN334823Y3AO53AA032A33AUG328G3ATA3AA6395Z3AAC321K3AI131AR3AI3321R3AI535OU3AU132913AIA32T83AIC39DC27A3AP327834823AIJ33JZ3AIM32TL33YL25G3AU23AIS32IG3AIU33DF33YV328D24E3AO533ZL321O23N3APT263371E24E32ZX32QO3ACV35MR392T26M24C39EP33M333ZN24D37IV37PC31RS326R23L3APT36DS3AVS33S43AVU33173AVW27032OL329S24B39EP32NP33ZN326V36OT3AW535MI24A3AW932GG37SP35NQ32GG37SS3APU26M247363Y3AWZ39EP3AX0361L37P2336T39EG326R24632GG347J326R24426M33ZZ3AXC26M2423AXF337B326R3APS321O38GV26M3AWB3AWV32703AVV36JI33M3384T39VU33F3322F3724336T3APQ320T3AW832703AWY2403ACY37JE38I53APZ37JI3AQ33AD634X53AQ739363ADC379E3ADE34KG340E33M33ADI321I3AQG37QV21Y3AU23AQL39JJ3A303ADU367S3AQS340S3AQU38L0340P3AQX2243AQZ322J340E3AR134L63AR433923AR6323133YL133ARA3AEI3ARD33G13ARF32133ARH39XG3A8B38XA396E3ARL3AEU3ARP395Z3AEW38QC3ARR39TO3ART38XN3ARV3ARO3ARY3AFB3AS139C334073AS439SC33RD3AFJ3ASD3ARO3ASC395Z3ASE32C93AFR321I3ASH35BF2123AU7328D3B0O35D33ASQ32FN21I3ATX38EH3AUC396D3A9V32Q33ASY33HR352J1X3AT239B73ATZ32A321Q3AT83AGJ390O3AGL34RI3AHZ326V3ATF2AK3ATH3AGU2753AOO3ATL3AMO3B0C3ATO395Z3ATQ2792173ATT3AH839QR3B0W32A321H3AU23AHF34GK183B0P32A33B253ASV3B1032HQ1F3AUH32HU3B2C3AUL3B1D3AHX3AUO32XX3AUR38Z23B1P3AUU39NW32HU3B213AUY39D6321V3AV139P333583AV43AII38XM3AIL38DV3AIN322E33YL21V3AVD3AL9321V3AVG335N3AVI38G63AVL336V320T24332GG2723APS320T3APS326R3AXP3AWU36A332703AWX398D32D136US26M3B3U39VS3B3W37IV37D531RS320T3AXA3AY636DS3B3P37043AWX322J32GJ32SY23U36VK33M532WM37SX36DS3B4133022323AXB3302233325G3AXH23033K43AWV325B37AK3670329S22Y2DK384034AH356G375Z39A0356G32BM33ZX33LS3ADB32ZX37FX32SN3AJL33S437EL32SS3AF731CW33YL33M331Z733M53AR638I426V26Y39103AL739P13AEY322032B532LA3817347J2YS38FH397T33YL2713B5Q331733YL34273A7U34RI340P350J32D33ARD339931Z724X3B6532U4347O3AKR339G388S32MA388S323L394Q38JS3A8M3ADQ39AN38WY34Q03B0538XW3B0738XN340E39AS34PV39XK3ALV3AS63ALB34WN3ALD38Z23ALG37QV3ALJ3AS72DK34WN38ZZ2AV390L2AW3B7K3ALA34Q332BM34WQ32NP352J35SL24M3B653AG23B7U36P725X3B6539ZT3B7Z35YL3B6I325Z3B123AO63ATM32G0358X31Z528Z3AOB32A33B8B33W438Z438S2326P3B1K35HS3B1N2AK3AN534RI32133AN933IC39D227934WN35013AFI3AOT3AFO3B6533C734Q324L3B8035ZS3B65328D24I3B65321V34Q3391433Q324H3B7V32HU3B9E32ZA2523B8439BY3AGB33482593B653AT331ML3B99326J3B8H32OT322S3AGT32XX3B1I346A3B8T321R39HP35OU3B9832913B2V39OV39Z53AIE328D24Y3B9927834DX340E387M329K39XR38QC329P31Z726O3B99321R3B3A32IG3APF33DF37XM361A3B6532D332WM32CH36BW3AJA34AH3AJF35ZC3B3838C53AJH3AQ83AJK34X53AJN39W634X53AJR37QN348M3AJV38D6367J3B6E32WZ31Z72463BAO26N3AK432T83AK634KT3AK934KV3AKB330S3AKE39PB31Z724C3BAW3AKK35QY3AKN34RI3AKP33923B6L3399340P2283B6I32383AKX34FH3AL032BT3AL238JS39XK3AF42DK34PV3ALL34Q03A8B34Q339MF3B793BCN3B7B38XG3ALI3AL83ALL34Q33ALN3ALR390O3ALP395Z3ALT3AL83ALW3AM63A953AM034AH3AM53B8U38Z23ANM34WN3AM834GI3AMB34GK21Y3B9434UM3B6533Q32383B653ABD26M3BDS32ZA3BDN32OD3AO7344H3AMQ3ASZ322S2353B653AMW364M3B9632A32263B9S26N3AN232OT3B8O3AN7326V3B8R3ANB390O3ANE2753ANG33IC3ANJ390O3ANL3BDA32A331ZQ23F3B9031EM34WN21X3BDT32HU3BF03ANW39D632HQ22H3BDO32A33BF73BDZ3ATM33Q322N3B653B8D2793BFE38SY3BEC3BEE32I035EC3AN632XX3B8M346A3AOQ26N3AOS35OU3BF33BA832J63AOZ3AV222D3BAD38XX3AP633JZ3AP938Y5322E340P2433BBO3BAS32T8379633DF3APJ32A32183B9937MR3AQ238M233ZN2GB38M5382P32R329Y372431ZD39PP2DK37MR33YV389V329S366T2AV382P32YC382P32Y536SG357O22W3236337H33BU22X38UD35HX2CR39PU38UI3BH439VP392332IM382P35JC29Y32WM3BB736SB32WM32C53A8635J631CW33ZX22U38IH36522AV37EL2AW3BI33AQB37EW32BM33YL33LS31Z732SK381C32SN340P32SK381332SS3AEW31CW32B533M3347O33M53482362132B5143BBO3A8E3BFY3B0B3220394W3491323839IM2YS323834JY38QM322E32B51A3BC23AQN35QY3AKY38WE3AV6331134DX38OV3B6K32HC34Y834PV34JY32U738TC32MA38TC323L3B763B7L38D13BDF394U34WQ3ALL38Z12AW358X3A3A34WN358X2CF34WN32383914390O394U352J39GU39BV2AW322S3ALZ390O322S2CF34WQ32383AC0358X3BK8384I390X2AV39NS3BK03B2P3A4B358X32BM35EC32NP325M376L26C3BJJ3B9Q320A3BJJ328D26V3BJJ32HQ3BL83B8C32PO3BJJ326435KA39Z13264320N3AAF32G035KA2733BJJ320N328D3BLN328G3B8R36BV326P35W3358X35KA32GF35W335W3326Y361F322S3338275361F361F32GP3B8M32LS361F3BKT35W335NV26H3BJJ345C358X26Q3BJJ3BFG32UJ3BJJ321V358X3AAK33Q326P3BL332HU3BMT32ZA25J3BLE325Z3BLG3AO825P3BJJ35KA328D3BN332ZA25M3BMO326J3BLT32OT320N3BLX32XX320N320N32I73BMA321R3B8A35OU3BMK329134Q335013AOR376M3AV225F3BMO27834Q3323838TN329K3BD938SV322E347O113BBO393N381L39LW329A36VX38J83BJJ32AX38OJ320S21E36KD33ZX3ACV39W33A6Y3AVY398T34GI33YL22V2DK399631ZG35VS31GP336Q2GL33ZN31GP36H933ZI3B4U37AL31GP32J337YD38CX37QV3ARW38CZ27937EQ37YH35EM3BIF32ZX381332SN323832SK388M32SS38Q631CW347O33M3348233M53BJG32PF347O2593BMO3AOY3AEY3B2O39AS32203A32349132B539ZG2YS32B53BJL32TL347O24J3BOE322J347O34273BIP38WE3BAF33113BJM32U0348223B3BLE39JI39H233G138T232MA38T2323L3BD13B7G39GA3ALQ39M6352J3ARW3BKD38WE3BKG34WQ3BKI2AK34WQ32B53AC0352J39M6358X39MF3ATC2AW35EC3B0G352J35EC2CF3BKB39C43BKP2DK35EC38ZJ2AV3AGQ3BKE34RI3BRY327I32C9325M32NP35KA35SL2303BML32HU3BS736P724B3BJJ3BE72933BL632A33BSA32Q33BLJ333535W33AGX344K337X2443BJJ35W334CS3BNA26N3BEO327Q326P3BM3337X32GF3BM732UO367235EC35W332133672367232GP3BEJ3B1J2AP2DK322S3BMC387P24E3BMH31EM322S22Z3BSD37RI3BPZ26N322S39VJ33Q322U3BS8328D3BTU32ZA23G3BMZ337X3AAF33Q322Q3BLO36W63BSG36X13BSU3BSW32OT35W33BM432XX3BM037FY3BTB321V322S3BME3BTO3BF43BES321V34WQ37GX3BAA32A323C3BNW38Z232B538TF329K31Z73B9B32TL34822523BTP399938LE3A30329A38XD328D2373BQF26N340722T352K3AVB34AH38IQ38CN3BR138IT33U9340P33LS3BPL32ZX388M32SN32B532SK38FD32SS39AM31CW348233M334DX33M53BQN32KY348222K3BTP3B6X32J634Q33ALJ32203AF03491347O3AB1330S347O38RF3BV126M21U3BVC348234273BPV32LS3AP5331139SG342E34DX1N3BQR3A0032U7390L32MA390L323L34WN39M634WQ3BKA3AZV358X38IS3BRJ3BTC3BRM3AOK3BRP38DV39I9358X3AZX322S3BD53ATH2AW325M3A5K3A4B325M2CF3BRH3BKU3BRU2DK325M39C22AV3AOO3BRK3AOK3BY335EC32BM35KA32NP320N35SL1F3BTN328D3BYC35SR3BYF3ANN3BYE3BU03BSM3335361F3ANA34TL35W321I3BJJ361F38EH3BU727521J3BSU3BNH3BNT32I03BT435W235HS3BT832UO36HE325M361F321336HE36HE32GP3BEO326Y325M36SL3BTC367235NV1X3BMH32PJ35EC1A3BJJ325M328D3BZP32ZA1B3BTP35EC32A333Q3163BYD32A33C0032ZA1S3BYK3ATK345L123BSR32HU3C0939CL3BYY337X3ANL3BSY3AOK3BT6321K3BT232I73BZE32IG35EC3BTG328D3BZV32913BUP32J6352J3BUK372H1O3BUU34WQ347O38S2329K340P3ANX32TL34DX22H3BTP3A7I32J63AQV335N3A8O3AOC3BMO37MR3A8O389V340E313O3BGP35CB33Z5393K31ZD39GG3AEB39KQ22Q38E83BP93BPC3AQD3BPB37QV3BPF33LS3BPH33S43BPJ32C93BVQ33S43BPN39RX348M3BPR321I3BPT321I3BWR32WZ37ZR32O03ABR3BQ1395Y3BQ339XP3BQ638XX38RG3BQ938XJ38QV3BO432323C2K32D33BQH33113BQJ32LS3BQL33923BW4342E34822513C2K32U43BWK32U73BQV39Z2395Z3BQY39LW27534WN38IS34WQ3BR33BJU39NR3BDB34RI3BR834RI3BKJ388C3BRE3A303C3P3BRI3ASA2793BRL2DK3BRN32MT3BRQ39I9322S3AC03B1M3BRR3BRW3BRZ38WE3AP0384I3BS131CW3BS3321I3BS534GK24R3C2K3BMM37OA3C2K32HQ3C4N28Z3BSE326G3C3A325Z3BSK344H3BYL33OS320N25V3C2K3BSS32A33C54328G3BUA32I03BSZ3338326V3C0L2AK3BZ23BT62QP3BTD3BTA3ANN3ATG3BTD3BRY3C0Q38XU3C2K345C322S24M3C2K3C4V2I63C2K3BUI3BY433482563C4O32HU3C6332OD3C4Z345L24G3C2K3BLP39J03C2K33CE3C5Z326J3C5A3BLV34RI3338321K3BUF32I73BUH321R3BUJ35OU3C5V3BUM32J63C0U3B2W31FT3C5Z27834WN3BUW33JZ3BUZ38Z2329P348226Q3C5Z321R3BV532IG3C1B335N3BV932A324X3C2Y31ZV31GP3AXR25Q3BOI37FX3ACV3A6Z3BOP38AB32BQ39LE3AJU26M3BOS2AW3A7E330O35VS3407321Y2GL33ZI340736H933ZX3BP43670340722O38ID38IO38I438IS3BVJ3C8F3BVN35EM3C2832BT3BVS32C93BVU32ZX3BVW39GP348M3BW03C2G367J3C362CI34822403C79395Y38943BA23A953BWD367S3BWG397J2YS3BWJ38XJ3C762NO3C2Y322J3BWP3BJF34L63BWT33923BWV33T634DX2193C3A3BNZ3C3G339G3BX23AAG38SP3BX53C3X3BK93C433BXA3BVL3BXD3C413C403ABE3BXG39TG3BXI39NO3BXL3BD33BXO3B8N39V03BXS32MT3BXV39Z53BXX3BXP3B2P3BY13C613CA43B1R3AOO3BY734GI3BYA38EN2343C5W32HU3CAW37EA3C4R32FN21V3C2K3BZR365I3C4X3BZ33BSN32643BYN35HH35W32233C2K3BYT32A33CBE328G3BYZ3C0G3BTD3BT53BZ43C5K2AK3BZ72ZZ32BT3BZB33IC3C0N2793BZG3BRT3C5O387P2393C5S3BZN35QU3CB433IO3C6E32A322N3C913BZX34GK22A3CAX328D3CCE32OD3C51334822H3C5533J63C6G26N3CBK32OT361F3CBN34IL3C5F346A3CBW321R3C0P35OU3CCA3C0T348C321V3C0W3AV221A3C6Z390O3C1233JZ3C153AMJ322E34DX2313C913C7D32IG3C1D33QT3C1F36JN3C9F380926M33XY36BW39QW2AV381C2AW3CDV2AK381C32BM323833LS3C8P33S438FD32SN347O32SK388S32SS3ALP31CW34DX33M334JY33M53C9M39TO21E3C913BCS32J634WN3ALX32203B07349134823B233494348238YY3C1726M21K3CDO34DX34273C363C3R39GO32D339MO342E34JY25M26X33MZ34WN3A99339G397B32MA397B323L3BKK3CA03BRG3ARZ384I394U3CAD3CBX3CAF3C3P3BXT39NO348239Z5322S39GU35EC3AFH3ANN3BKO3BNT3CG3322S35KA2CF3BXM3C4D3ANN39Z53BEN3C4D2AV3B8R3CAL3B8W3ANN325M32BM320N32NP35W3376L1I3CC6328D3CGQ37KB3CFB345L1H3C2K3BN532A33CGX3CGU32OD3CBB344H36723ANH34TL3BYT3CGV367239T63CGV328D26J3CGV344R3BUF32BP326P3CBR3BZ9326V3CBU326Y326C35KA36723213326C326C32GP3BYZ3BEK36XQ3CAE3BZH31ZQ1N3CC326N325M2723CGV3CGZ32C43CHD32A32733CHG321R325M3BES32HQ26R3CGV3CB533263CGV3CBA3C5M345L26X3CGV3CBG323P3CIB323S3CHG326J3CHI32OT36723BZ832XX3BZ532I73CHX32IG325M3BZJ32HU3CID32913CD532T8358X3BTG372H25R3CHG278352J348238S0329K3BKL396D329P34JY1F3C913CDK321V38FH335N3AF73AA13CHG37MR3AF7389V33YL37H631ZD382P35NT29Y3996320K322M31GP32313BP834AH3C1Y3BPA38E838D33C7V3C2334X53C2631CW3C8L32133C2A35IS34KG3C2D32BQ3C2F32BQ3C2H2CI347O24V3CIE26N3ARN32T834Q03C2O3BQ5330S3BQ739603C2T3BQB329P347O25X3CGV3C2Z35QY3C32384I3C3433173C8X3231348222W3CIN3BQS34FH3C3E32133BQX3ALA3BD23C3L3C9Y3BR42DK3BR632LS3C3S3BRA2793BRC3B2T3BRF3CM53ALB3CA33C4A3BXF3BRO3CA832B53C473B2T3C4A3BRV3C4G3BTE3CGA3CMQ32BM3C4J32BQ3C4L33PV23L3CGV3C4P3CMZ35SR3CN23AOK328D3CN43BLI35FN32Q33CCJ32G0320N23T3CGV3C5627J3CIX3BSV3BNT3BSX3CBS3BUD3BT13CBS326Y3C5H32BT3CJ432BT3BUH3C4A3CJ93BMB34NR24W3CGV33C7322S24C3CGV3C5X3CO432ZA24D3CL43BTR34GK2413CN032XP3CIN3C4Y3CN933Q32473CGV3C6C2793COK32ZA2443CNI3C6I3BZ33CNN3C6M3BZ33C6O3CIP3C603BUK328D3CO93C6U32T83C6W3A0E2792313CJJ3BUV3BDG3BUY38SP38RA322E348224O3CL43C7B321V3CDI32IN3C7F27922S3CK13B6U26M31WC37M035PF33YL23G2DK3A1X37AE3C9Y38132AW381332BM32B533LS3CE732ZX388S32SN348232SK387A32SS3AFH31CW34JY33M334PV33M53CF72CI34JY2273CL43ALO3C6V3CAF32203ALF34KV38T738TF2YS397F3BO338XX2393CLJ322J34JY34273BWV3B1F38XH32D33CFE339934PV183CLU3B2H32U7390S32MA390S323L3BRQ3BKT3CAB39MF35EC39M63B8O2AW35KA3CG53BNT3CG838QC3AP035EC39MF325M3A3A3ANC2DK320N3C493AOK320N2CF3CG03CAO35KA3C4F337X39VJ2AV3BEO3CRU3BZ02AK3BEO32BM35W332NP361F35SL21Q3CI832HU3CST36P72193COL32HU3CSY32ZA3CSW32Q33CH6333536HE3BNI3BSO36722123CGV36HE3B0Q3CNI3BT23BME326P3CHQ3BTD32GF3CHU32UO373A320N36HE3213373A373A32GP3C6N2CG382Z3CSK3CHZ31ZQ2283CO131EM35KA21P3CSZ328D3CU5329135KA32KA32HQ21D3CSU328D3CUD32OD3CT5390B21J3CHA32HU3CUK32ZA21G3CTF3CBS3CTH26M36HE3CHR32XX3CHO334V3CTV321V35KA3CI132A33CU832IG3CJF32J6322S3CNX3BUR39CJ3CP9358X34DX38ZG329K3CML39BY329P34PV2203CL43CJX388V38XO329A37KU3AMX3CGV33ZL340723J37QV367033YL33633CQ338VX3CQ039M63CQ239RN340P3CQ535EM3CQ833S43CQA32C93CQC32ZX3CQE38JS348M3CQI321I3CQK39H334EM38SG26U3BF439AK321R34WQ3BXR3CQU367S3CQX330S3CR032TL34JY1K3CR43A073CR734L634Q038XF3CRB33MW34PV24M3CWP34Y834WQ3B0K33G13CRJ32BT3CRL3CMK3CME3CRP3CBZ3CRS3BDG3CSM3CXQ32LS3CG73BQK3CGA3CS13BXY3AFF3CGD3CS83CS73CBZ3CSA3BTC34DX3AH23CSE3CS63C613CSI3CSL38KV3CYC3CGD35KA3CSO34GI3CSR38EN25Q3CXD3CI932123CXD3A9I3CXD33Q325P3CXD3COM37J63CYP33QV3CXD32643CUI32Q33CT735HH367225I3CXD3CTD32A33CZ6328G3CTG32OT3CTJ3CHS326V3CTM326Y3CTO3CUT32BT3CTS33IC3CUZ275320N38N73CYD3CTZ32MP3CXD33C735KA2653CYU32HU3CZY3AAX3CXD3CV0348C33Q32613CYM32HU3D0732ZA24V3CYZ325Z3CZ135YO3CXD3CHB32A325X3CYX322R3D03326J3CZC32I03CUU3CTK321K3CUX346A3CUZ321R3CV135OU2623D033BNL3CBS32T83CV83AV224R3D032783CVD39NW3CVG396D3AGG322E34PV26J3D113CDP3C93393D38Q33CVQ34IZ24I3CXD3CVU32Z73CVX322M33YL23C3CPY3CW23A2I3CW43CQ134JV3CW83CQ734X53CWC3BVZ34X53CWG39IA3CWI35373CWL39SH3CWN39863D1I3CQR3CP43CQT3BCW34913CWX34943CWZ3CJR26M24Y3CXD32D33CR63BWU3CX63CRA322J3CRC342E34PV2213CYZ3CJP3CXG323E3CXI32133CXK36RP3CFN39BY3CXN3BY33CXP3CG33CRV3CMR3CXU3C333CXW3ALB3CS32DK3CS52AW3CY23BY33CY43CA43CY63CXR3CSF3C5334AH3CSJ3CXR3BUN3CYF33U93CSP321I3CYJ33PV23J3D08328D3D4A35SR3D4D337X3D4C3D0D3BTD3CH732643CZ333HR367222U3CZ732HU3D4P36UZ3D0N26N3D0P3CTI3BNT3CZF37OA3D503CZI337X3CTQ2CJ382Z3CTU3COW3CTW3CZR3CGD3CZT2792413CZV32PJ35KA23E3CZZ328D3D5I32ZA23F3D1I3CUA34GK2263D4B3BEA3D4I3D0F32FN2393D0H3AHR3D4U3D4W3CZK3CUV34IL3D0U31AR3D0W3CNJ3CV237SG3D1I3CV63D143CC0372H2223D1839BY3CVE33JZ3CVH3D1E38XJ23T3D1I3CVN321V3AKE335N3CVR32A321X3D1Q336V340723F3D1T340I32203CW134DP3CW33D1X3D203CW73C8O3CW93D2538DV3CQB3D2838JO3CQF34KG3CWJ32BQ3D2D39MN3D2F21B3D2H3A343CWS3D2K3CQV3D2M3CPD3CWY38Z23CR134JY22D3D2T3CR535QY3CR83ATC3CX83D2Z3CXA320032PM3CXE38Z23CRI390O3CRK390O3CRM3D3C3BXK3CMR3CRQ3C9Y3CRT3CXR3CRW3D3K3CLN3D3M3CS23CXZ3BNT3CY13CMN3CS932MT3CSC3CY73CMS3CSG3D403CYE3BNT3D433D963D453CYI36JJ325G113D5S2793D9D35SR3D9G3D4G32A33D9I3CZ03BNT344H3D4M3CT926M193D4Q39CS3D603CUR3CZD3D4Y35HS3CZH2AK3CZJ3D54382Z3CTT32BT3CZO337X3D5A3BNT3D5C27521C3D5F3CNJ1S3D5J32A33DAG32ZA1T3D5O3D0532O31O3D9E2753DAP32ZA322G3CUH3D9N345L1K3D5Y328D3DAY32ZA1L3D9V361F3CUS3D0R3CHS3D0T3CZK32I73D673D0Y33RM3DAL32913D6C32IG3D153C6X327G3D8A32AY3D1A3CVF3BJA352J3D6M34PV2143D6P3ARZ38L83D1M3BR1328D26D3D8A3D1R2JH3C1L3D1U3BDV3D1X3D753D1Z3D773DCB3D23321I3CWA32BT3D2639AG3CQD3D7G3CWH321I3D7J39H1367J3CQM38Q725R3DBM3BNS3CWR3B1C3CWU3D2L3D7W3BV03D2O3D7X3CX02JI3D8A3D2U3D833D2X3D8639ZZ38OV34PV23T3D8A32U43CXF34FH3D383ALQ3B7Q3CXL3CRO3D8K3CXO3CXY3D3H3CXS384I3D8Q34RI34DX3CS03D3N3D8U3D3Q3CTW3CS835EC3D3U3C4A3D3W3CYD3D3Y3CYA3D443CSK3D973CSN32C93D4632BQ3D48345L24V3D8A3CYN35W23D8A328D25B3D8A32HQ3DEO28Z3CYV37GY3DDE3D0E3DAW3D4L337X3D4N2I63D8A3CZ8312N3DEM32A324N3DBM3D0O3D9W32I03CZE3D9Z3D513DA13D533CZL3D563DA63D5835Z33CTX3CXR3DAB36SI3D8A345C35KA2563D8A3DET3DFT3CU93D0532FN23Y3DEJ32HU3DG03DAV3CH733Q32503D8A3D0I2793DG732ZA2513DF83D4V3DFA3CHK3D9Y3D643DBA3CUY3DFK3D0X3CZK33RM3DFW3CV53D133DBI3D6E3CVA27523U3DBM3D1938QC3DBP3D6L32TL34PV25K3DCT3D1J32J63D6S33QT3D6U27923P3DC23D6Y26M23B3D7133YL2363DC834AH3CW539G33D7833U93CQ63DCE3D7C347O3D7E3DCJ34823D7H3D2B3CQJ3DCP3D2F2333DH63D2I32IG3CWT34KT3D7T3DCZ3BDG3CQZ3DD23D2Q2453DD53D823CX533943CX733113D3033T634PV2133DDE3D353DDH3D8E3CXJ3D8G3DDL3CAA3DDN3D3F3DDP3D3P3DDR34RI3DDT322S3DDV3BTC3D8T3CS43D8X3D3S3BTC3DE33AOK3DE53CGD3DE73CSH3DE93D423DJ13CYG3DED3D9A376L2273DG13AHK3DF527922K3DEP32O32223DFU32HU3DJY38SY3DEV3D4J3CT63DEZ34TL367221Z3DF238SA3DJT27521W3DGE3D613DFC3CTL3DFE2CB3DFG3CTR3DFI32133DA73CZQ3DJ13DFO2343DFQ3D5G26M22J3DJZ328D3DKX365K3DH63D5P35BF22F3DJR32HI3DKC26M2183DK33D5V325G22B3DG832HU3DLE3CZB3DGG3D623D0S3CZK3BZC3DGL3BM132IG3DBD32IE3DH63DBH3C603CV936GN3A3Y3DGY3D6I3D1B3DBQ3CVI3D1F26M22W3DH63D6Q3DBX33DF3DHB32JD3DHE3BVD26M2393DHI26M2343DHL38AF3D213DHP3DCD32BQ3DCF32133DCH38JO3DHW36MP39TO3DHZ3CWK3DI1362134JY1D3DI43D7Q3DCW3DI83CWW3D7V3DD13CFD3DD321F3DIG3CX43D2W3DIJ3D2Y3DDA32U034PV25I32QX3D8B3D3639TE354B3DDJ33MR3CRN3DIX3BRY3D8L3D3G3DJ13D8P32MT3DJ53D8S3CXY3DJ93D8W3DE1337X3CSB38QC3D913DJH3D943DEB3D953DEC31CW3DEE32C93DEG38YB3DNM3DEK2703DNM33Q326J3DNM3DET3DOQ32ZA3DON3DG43DK53CT832G0367226C3DNM3DF3320A3DNM344R3DKG3DGI3CZG3DKJ3D553CTP3DFH3DA53DKO3DFK3CZP3DFM3CZS34NR32EH327J3DKV26Z3DOR32HU3DPO38ZU3DP53DGN3CUB32FN25R3DOL32HU3DPX3DOW388E32663DNM3DG932UJ3DP53DF93DB532OT3DB73CUW3DGK3D0V3DGM3D6835OU26W3DPT3BED3DGS3DLV3AV225N3DP53DGZ3D6J36BF3DH23CVJ26M163DM73DBW3D1L3DMA34IZ25E3DNM3D1R33E53DC5340I2263DMK324Y3DHN3DCA3CW13D793BIK3D7B3CE83D7D3CWD3D7F3DHX3DCL32BQ3DCN31CW3D7L31CW3DCQ38XX24S3DQJ3DI53BUO3D7S3DN73DD03DIC3DNA3D2Q25U3DNM3DD63DII3AAA3DNH3DIM323134PV22V3DNM3DDF3D8C339G3DDI3DNP3D8H3BKC3AZV322S3DNW3DJ03CSK3DNZ3CRY3DJ63CA43DJ83DJ13DO53CY33D8Z3DO93D3X3CY93DJI3D983DEA3DJL3D993CSQ3A3F321D23W3DPY379G3DNM3CP13DOO32O323V3DPP328D3DTI3CO83DSE3DEW3D4K325Z3D9P33B8367223O3DP236FL3DTE32A323P3DQ73DGF3DQ93DFB3DP83D503CHV3DFF3DPC3DKM3DPE2753DKP3DPI3D5B34NR24X3DNM3CZW32583DTJ388J3DTX2G43DQJ3DL333482303DTC3BSH3DTN3DK43DQ22433DQ434C53DU03D613DQB3DGJ3DLN3DQE3DLP3D043D692752493DQJ3DLU3C6Q3DGU3DLX22W3DQP3DM03DH13D1D3DH32FJ3DQJ3DM83DQZ3D6T34IZ22R3DR33DHF2353DMH32GZ3D743DHM3DMM3DCC3D7A3D243DRH3DHU3DRJ3DMU3DHY3DCM3D2C3DMZ32PF34JY2253DRV3DN43DI733FE3DI93DD13DS026N3D2P322E34JY2373DS53DIH3DNF3DS83DD93DSA38XJ173DSE3DIR3D8D34WQ3D8F3DDK3D3B3DSL3D3E3BTC3DNX3DSQ3D3J3DO03CRZ3DJ73DO33DSW3CY93DO63DJD3D903DT13D3R3DE83DT43DJK3DT53CYH3DT835SL21O3DUS2793DXU36P72173DUK3B1U3DUM2753DXX3CT43DEX3DTQ3DK63DOZ26M2103DTV328D3DYB3DLI3DU23D4X3D633DP93DU63DKK3DU83D553DUA3BZ33DV63DPH3DA935KA3DFO21A3DUH3CU326M21N3DY02753DYZ3DFX3CUB3A513DXV27521I3DY226M1C3DUU3D0F32O321E3DUY35T63DZ921F3DV03DLJ3DV23DB93DV43D663DQF3DLR328D3DZ23DGR3CJG3DVD3DLW34CZ183DVH3DBO3D6K3DVK3DQU21Y3DVN3DQY3DH932IN3DMB331B3DVT3DME3ACC37AL33YL2223DR93D763DRD3DW13DRF3DW33CQ93DRI3D273DW73DRM32C93DRO39AN3CQL3D2F31CE3CWQ3CQS3DCX3DWJ3DIC3DWL3DWN38XX1J3DWR3DNE3C9L3DD83DIL3D8824L26T33MZ3DDG3DX13DNQ3DSJ3DIW3A4B3DX73CA43DX93D8O3DXB3DSS3DO23CAL3DO43DXH3DSY3DO83DJF3BNT3DOB34E03D413CYD3DOD3DJM3DOG3DJO38EN25P3E1F3BNT3BN63E2B38J83E2B33Q325K3E2B3DET3E2I3AAX3E2B3D9M3DTP3CZK3DOY320N367225H3E2B3DP337KH3E2E38JI3E2B3DP63DLJ3DKH3DYJ3CTN3DKL3DYN3CZN3DPG3DA83DKR34NR25Q3E2B3DFR38K73E2J3D093E303DPU38EN25W3E2B3DEK3E3M32ZA24Q3E2N3DTO3AO825S3E2B3DQ536SI3E2Y38KV3E303DQ83BZ33D0Q3DGI3DZN37FY3DBC3DGO3E3I3DBG3DQL3DZW3AV224M3E303DQQ3DM13DQT3DM426E3E3J3DH732T83E083D1N35VP24H3E2B3D1R2253DMH2203E0I3DRC3CW63E0L32JR3DRG3E0O3DW53E0Q3CWF3DCK3D2A3DW93DI03E0W3DN032243E4M3DRW3D7R3E113DRZ3DIB3DWM3DID3DWO38MM3E2B3DS63DWT32LS3DIK33923DWW34PV21X3E2N3DX03DSH3DIT3D393DIV3DX53CXM3DIY3DX83DSP3E1Q3BRY3DJ43DXD3DSU3DXF3CSK3DSX3D3T3DSZ3E1Z3CY83DXM3DT33E233DJJ3E243DT73D473DT932CG3E3N37RI3E3Z27523F3E2G32O322U3E3H3BTW3E6W26M3E6Y3DQ13CZ23DY83257367222R3E2V396T3E413DU13E433DYH3CTK3E343D523DYM3DA43E383DYQ3E3A3CTY34NR2303E3E3DYX23A3E7239823E4M3DUP33Q32393E6U328D3E8232ZA2223E3S3DUV33482353E3W32HU3E8B3DYF3E7H3DLK3DB83DLM3E473DZQ3E49328D3E7W3E4B3DZV3BTQ3DVE34CZ21Y3E4G3DVI3E023DBR3DVL23O3E4M3DVO3E4P3DBZ32A321T3E4T3DHF2233DMH21Y3E4Y34JV3DHP3E0K3DMO32C93DMQ3A2T3E553DCI3E573DRL3E593DRN3DWA3E5C3DWC26M2173E5F3DWG3DRY32LA3D2N3DS138SP3D2Q2293E5P3DWS3E1A3DNG3DWV3D8826D37TS3DNN3DIS3DX23DIU3DX43CA63DX63E663E1O3E683CYD3DSR3CXV3DDW3DSV3E6F3E1W3E6H3E1Y3CSD3D923D3Z3E223DOE3EAZ3E263DUB3E2835BF1B3E8332A33EB535UC3E2G32FN1R3E7X2793EBC3E773DEY3E2R3BTD123E7D328D3EBK39CL3E7F3DP73DYI3DU53E353E7M3CZM3D573E7P3DKQ3E7R35NV1C3E7U3BNT1M3EBD2753EC43DZ338EN1L3EB62793ECA32ZA26I3EAB3E2O37RF1H3E8C328D3ECJ3E8F3DB63E453E8J3DBB3E8L3DV826M3EC73DZU3CV73E8S34IZ26E3EAB3DBN3DH03E8X3DM338XJ2103E913E073CVP3E9435EJ3EAB3D1R2213DMH21W3E9C3DRB3E9D3E51388C3E0N3CWB3E0P3E9L33S43D293DMW3E5A3DMY3E9R32KY3AET3ED13DCU3E103DN63E9Y3DN83EA03D7Y32603EAB3E5Q3EA63DWU3E1C3DDB26M23O3ECG3E5Z3CXH3E613DNR3DSK3E653DNV3DDO3CAL3DDQ3EAN3D3L3EAP3E6E3CXR3E6G3DJC3E6I3EAV3E21324Y3E6N3DXO3E6P3DXR3E6R35SL2593EAB3DEK3EF835SR3EFB3D9J31ML3ECG3E3T3D9O3E793BTD24L3EAB3E2W3EFL3ECN3D9X3EBR3DA03DYL3CZK3DU93E7O32UO3EBY3DFN34NR24S3EAB3DUI2543EAB3DET3EG432ZA2553EDZ3CNJ3DZ432Q72503EF933CN3EAB361A3EFG3E89378F3EAB3E3X24W3ED13E423ECO3D633E463ECR3DV63DGN3ECT3EG93E8P3ECX3DZX34IZ23T3ED13E4H3DVJ3E8Y3DQU25G3EGA3E923EDA3E0A23K3EDD3DHF21Z37QV3C1K323F3C1N2DK27021B37QV32G2389U2IE340E31AR34WI38UI3476382P37M03CK432MB38UH382P3719382P38O8382P365227024U39WB26M38MF33S4381C21U39RL34PX38UA38IF34PX21S3EIH31Z73BHD3CKQ26M21T39GD38IS3AEI3CDW340338JZ33F131ZV340P22M32J63238385R373C3A7C39DK32A322Q3EE831ZV348222N320S32B1387A22K39JC39LW39D538Q3348138XX327J316Q340P22X3EAB32ZA3EJS37TG340P3C89322M32B5329A3AEQ381F2AV387A3AEQ3BD5387A32BM34JY33LS34PV32SK38TC32SN34Q032SK38T232SS3BXR3B0J353734WQ33M53AM932PF34WN2223EGA3CA33CCY3BKU32203BRA34913B9X35912YS3BA33D6M34WN2343EE8322J34WN34273EAG34RI3CJL3311358X38OV34WQ153EEG3AOK322S32U73AOO32MA3AOO323L3D3O3CSK3CG1320N3BKG35W33BD53BSZ2AW36723DE736722CF320N34Q337GX35W33BKG361F3CG33BZ22AW36HE3B1R35W336HE2CF35W334Q33C0X367237GX2F03E43324Y3BZ53ELZ3D6E3C5J367232BM326C32NP373A376L2163EGM32HU3EN032ZA21M3EAB33Q32153EFM32HU3EN83EN43EGJ373C3BT932Q3373F3DLN32G0373C1Y3EAB373F328D3ENL328G3CZM36XQ326P373K3672373C32GF373K373K326Y37AK36HE373F321337AK37AK32GP3EFS3EMN37AK3EMR373K35NV21B3EG231EM367221L3EN933313EGA36723BZH33Q321G3EN134GN3EGH32A31A3END3CBP33Q321C3EAB373C328D3EOY32ZA21D3EGP26N3ENR32OT373F3ENV32XX373F373F32I73EFS321R3672373F33RM3EOI3DFX3CZR321R320N373C3DBK3DQV3EH43BNT34Q33ANL329K34JY3CIG32TL34WQ21Z3EGA3BJ33AYW3ALJ329A38Q635UK3EL73BBP26M31Z936BW34DX395239TO3CG139GX39IA39H03DRP35EM3EKG32ZX38T232SN34Q332SK390L32SS3BKO31CW3B0M32C9352J33M53ELF32PF38YQ326J3C0O3CAF3CIF3CGA32203CMJ34913BFO36BV2YS3BFU3AOB322E3DX23EQ934WQ34273EKP32LS3D1A33923ELL32U0352J24N3ER432U4325M3BKY339G3B8R32MA3B8R323L35KA3BKG320N3A3A35W33B0G361F3CG13EMB3CBQ3CAO3EB23EMG2AK35W334WN3C0X361F3B0G36723CS83CBR2AW326C3CGI361F326C2CF3EM93DQL36HE3C0X326G3DGS2AV3CBU3EMC3E4939HI3CZK32BM373A32NP373C376L25M3ER43E2W3ETC3AAX3ER433Q325L3ER4326C35H43ER438J83ERU325Z3ENH3335373K3DU632G0373F25E3ER4373K328D3ETX328G373C373C37VE326P3EO12I635HS3EO532UO37AN326C373K321337AN37AN32GP3EBV2AK326C37AN3ET33EOA387P25R3ER4345C36HE2613ETK3D093ER4321V36HE3CHZ32HQ24S3ETD32HU3EV232OD3ETR3DQ225V3ER43ENN3C573EUX326J3EU33CTX3ENT3CZK3EO3321K3ENY37FY3EUJ3EUY33SW35OU3EUU32913EPO32J635W33EPI3CP62CJ3EUX2783A3X32BP329K34PV3D5P329P352J26F3EUX321R3BQA39123C40329A39AM328D24J3EUX37MR39AM389V348233ZP324Y3EI339E338I433Z5340P34823EJW32GQ22J37AL32B532H33EK234AH3EK538XI3EK738JO3EK935EM3EKC32ZX3EKE3D7M3EKH395Z3EKJ34KG3A9B3B0L367J3ERM32WZ34WN23Q3EW93E8R3ALX3EKV39Z53EKX367S3EL0330S3EL332TL34WN23W3ER432D33EL933113ELB322S3ELD33923ER1339934WQ21S3ERU323835EC3ERQ33G13ELN32BT3ELP3CAE3DJ93ELT3C3Q3ELW2DK3ELY3C5G3EAW3BTD3EM338SP3EM63C3Q3ESV3EMR3B1R3EMD2DK3EMF32MT3EMI3EMO3BTD3EMM3CZK3BUK2AV3EMQ3EYS3CNX3EMT33U93EMW321I3EMY35O93ER43E3X23C3ETH32FN3EZO28Z3E2W3EZR32Q33ENE33353EV73BSO373C22O3EVA32HU3F013ENQ382Z3ENS3EVP3EPA3ENX3EVP3EO03EVI32BT3EUA3EO73DPA3CZK3EUO29Z3EVP35NV22Z3EUR32PJ367223B3EV338QW3ETN39ND3EXO3EOM38EN2373EZM32HU3F0Z364B3ETP2FJ3EOW32O32273ER43EP032A33F1832ZA2243EVD3EP63F063EP83BTD3ENW321K3EPC37FY3EPF26N3EPH35OU2383EXO35KA3EPM3CCP3F153EPQ21X3EVZ3EPT3BZ03EPW3ANN3BN53ERH26M23N3EXO3EQ3397K3EQ53CFN328D22K3EY13BQG26M22H352K3EQE39SB3EQH3B0B3EQG39SF3EQM34X53EQP32C93EQR32ZX3EQT3BDA348M3EQX31CW3EQZ321I3EY932WZ34WQ2153EXO3CFQ3ER73AP03ER9367S3ERC330S3ERF3EPZ26M21B3F2G3B1C3ERL34L63ERO33173ERQ3399352J269337H34Y83ERW34FH3ERZ3CNU3ANN3ES23C3Q3ES53EZ33CA53CBS3ESA3ESD3CZK3EME3CZK3EMH38Z23ESJ3F453ESM2DK3ESO3EUK3ANN2AW3ESS32MT3ESV3CJG3ESX2DK326C3BTG3ET13ET43EMN3BZH3ET536HE3ET734GI3ETA38EN193F0S32A33F5437ZF3ETH32O3143EUV3AMX3F0U2791P3F143EZY32643ETT35HH373F113ETY32HU3F5N3EU23F153EU534OG3F0D32GF3F0F2AK3EUC3EVP3EUF26M3EUH3DPD32UO3EUL3F4H3F5U35NV1A3F0O26N36HE1K3F5C32A33F6E3DB23EXO3EUZ38EN1G3F553AOF3F5E2CO3F3U32643EZY33Q326K3F3U3EVB33EJ3F3U328D26L3F3U344R3EVF3F5T373K3EO232XX3EVL32I73EVN321R36HE3EOC32HU1L3EXO3EVT32T83EVV3AV226A3F723EW038Z23EW23CL53BNT3BLP322E352J1Y3EXO3EWB39DA3EWD39XT328D2713F723A0C39GO3EWL324B3EI23A1M39PV3EI43BVK3EWS3EX639Q3340P39Q5367032B522E39GK3EK339AG3EX53F8P33U93EKA3DMY3EKD38XJ3EKF3F2S3EXE3ALA348M3EXH32BQ3EKN321I3EXK2CI3BK63F843EXP32J635EC3EXS3C3T34KV3EXV34943EXX329P34WN25J3F3U3EY235QY3EY5396D387O32D33F3433T634WQ24B3F6R3EYE34RI3ELM3AOK3ELO3AOK3ELQ3DDY3F2O337X3ELV3BD33EYR3F0K3EM132MT3EM43CD33EM73EYQ3DJ23ESB3ET53F4A3ESF2793EZ63EMK3CD33EMN3EZB3EZG3EMR3EZF3BTD3EMU32C93EZI32BQ3EZK33PV24W3F3U3EGN3F3U378F3F3U3E2W3FB232OD3EZW344H3EZY33B8373C2573F6W32HU3FBG32ZA2543F72326J3EP732I03ENU3F153F0A3ENZ2AK3EU73EO32753F5X3CHT3F0H36HE3F0J3C5J3F7E31ZQ24I3F3U33C7367223Z3FB732HU3FCA32ZA23W3F983F0X33PV23K3FB3387W3F6R325Z3FBB345L2ZK28Z3F1A2903F6Z32A323R3FBM3F1G373A3F073EP93FBR3F1L3EU83EPE3DKJ3EPG3EU833RM3FCF3EPL32J63F7I3EVX3AVY3F7N3F213EPV3A073EPY329P39CZ3F983F2A39UZ3F2C3EQ732X83F9L3F2H3AH232ZK3F2L34E03EQI3F2P39SE395933LS3EQN33S43F2T31CW3F2V33S43F2X3BDF3F2Z35373F3232BQ3F9S3ALQ22O3F983F393CI53ER83CA73ERB34RI3ERD3BFT3ELK3F3H22U3FDT3F3L33113EXK34RI3F3O32D33F3Q342E352J21N3F9W3ANN3ERX33G13F3Y3B8Q3F403CXR3ES43D8U3ES73FAG3F473EZ13F483EZ43F4C3ESI3ATR3F4F3D8X3F4I3ASM3F4K3FFO3EST3FFO34WN3F4P3EZ73ESZ3F4T3F4W3F673F4X3FG23F503ET93D9B321D22B3FCB39PJ3FB532FN3FGA28Z3ETL33IY3FCM3EU83DV4325Z3F5K33HR373F22I3F3U3ETZ32A33FGQ34UY3FCX3F7432OT3FBV3EU93F5U326Y3F5Z3EUE2753EUG33IC3EVN3ESZ3EUM3ESC3EUO31ZQ21X3FC732PJ36HE21A3F3U3FGH2793FHI32ZA21B3F983F6K35BF2163FGB32A33FHS32ZA1W3FGJ3F6T32O32123FBH3B0Q3FCU2792133FGW3F5S32OT3F763EU834IL3F79334V3F7B3F6C3F0L32HU3FHO3EVS3F1X32IG3F7K3EPQ21O3FDG3EW133JZ3EW43D4G3F7U32Z73F983F7Y3A5L3F803EWF32A321J3F722GL340P3B5W39Q339LJ36HC347O32HF38QB3EQF38QC3F2N3FJG3F2Q3FE33F8X34Q03EQQ34X53FEA3C3J34KG3F303CA63ER034EM34WQ1U3FEJ3ER63FEL3F3B3FEN3F3F3FEP3FK23EYF3F3H143FEV3ERK3FEX3F3N39SC3FF133MW352J26126P33MZ3F3W32U73FFA2753ES13FFD3CY93ES63F453ES92DK3FAI3EMN3FAK3EZ53F4D3FFO3ESL3FFQ3FFT3FFS3ESR3D503ESU38Z23FFY3ESY3D503FG13E8J3ET33FG43E8J3FG6321I3F5235BF2723FKH3CZK39UV3FLL33PQ3FLL37LK3FLL3FHK32123FLL3F6S3DQD3FGM3DFE33B83EPD3FLL3FGS323P3FLO32A326U3FLL3F733FI832I03FGZ3F5W3FH13F5Y3D503FH43F623FMI3EUI3DFI3FFS3FHA3ET53FHC337S3FLL33C736HE25P3FLS32HU3FMU3BN83FM83F7C3D5033PV2663FLL3E2W3FN33EV63DGK33Q325G3FLL3F6X385M3FM53BPD3FM83EVE3FMA3EVH3F773FIC3F0B3FIE3FML3FN03FC432A325M3FMZ3F1W3EPP3FIM3FD83FDE2623FM83F7O34WN3F7Q3FIT3F7T396D1R3FIX3A953F853ALX3EWE34IZ25X3FLL32D3348222C352K34JY3A3839AQ39C33A3A38XV3A3D33LS3FE83C9V34Q332SN34WN32SK397B32SS3C493F313537358X33M53FF22CI352J25A3FNT3D8N3D043AH232203CFU34913AND3F4K2YS34WQ3F3W3EW634OG3FOF322J352J34273F3434RI322S38XT32D33ERX3399358X23C3FLV323835KA3C4J33G13BEO32MA3BEO323L320N3B0G3FAF3F4L3CFS3BTD3A3A3FFR3ESZ3FL43FFV2YA390O3CJG36723EKK3CZK39TN3D503D97373A3D973672373A2CF3F4G3CNX3F4S2DK373A3CJ92AV3CTM3ESP3FN13F4J326H32C9373C32NP373F376L24E3FMV3AVJ3FNE2752413FLQ32XM3FLL373A328D3FRK32OD3FGN32Q337AK3DA532G0373K2493FLL37AK36FU3FNG26N3F1M3EPP326P3FH335HS3FH6326Y2IE373A37AK32132IE2IE32GP3EVF3D5237NA3F4J3FHA31ZQ23N3FMR32PJ326C2303FRN3BS93FRI33K43FNT326C38N732HQ22P3FRG32A33FT13FRR3DFE33Q322V3FM232HU3FT832ZA22S3FS23FS43FGY3FMG32XX3FBY31AR3FSI32IG326C3FHC32A3314K32913FIN32IG361F3F7E372H23H3FO03BZ334WQ3BME329K34Q0320N3BSS322E358X2573FNT3C9B3BBR3CAF329A3ALP328D2383FMR2IE348238MB3CK72MH33Y43BCE32D23EJZ26M22D3F8M3EX23BD33EX33A2V3EWU3E0T3EX834X53EXB3DRR3FJK3DMV3CFS31CW3F9132C93F9332BQ3F953FJP22K3FNT3EKU26N3F9B34KT3EKY3EXW39BY3EL139ZZ322S3EL43BWM3FPN3FER3ELA34L63EY733173F9S323134WQ1N3FQ03FES3F9Z35EC3FA13FPW3FKM3FA43EYN3FA73ELX3D923EM03CY93EM23CTW3EM53ESG3EYY3FAH3F483EZ22AW3FFL3FWJ3EMJ3EYS3EZ93F4Q34E03EZD3F0K3FAU3BZ53EMV34GI3FB0345L21O3FLL3E3X3FX432ZA1C3FRL325G3FX93EZS32HU3FXC3EZV3CBP3FLW3ENI3EVT21J3FNB3CUM3FSV21G3FS23FBO3EVH3F09326V3FID2793FMC3FBX3FME3FBZ3DYK3EO93FKT3FIH31ZQ1X3FSP3F1P35SM3FN434IE3FSV183FNT3FCH345L173FX532HU3FYH3C043FLV3FCN3EOW32FN133FLL3FCS2753FYQ3F053FCZ3F1I3F093FD33EPD334V3F1O3F1Q33RM3FYD3FDB32T83FDD3C0Y3FTY35KA3EPU33JZ3EPX3E2C3F2622H3FNT3FDO3ADR3A953EQ634IZ1J3FM837MR3BPP3DHH347O22A3CKU38DV32HS323E3BPQ26M3FZU3E5238DV22835NW3E9H3G003FZV347O2293AXK39XG38GS3482340P3B4V322M34JY21A3ARO3AS83B0E3AFM3F453AFP3EKL33LS34WQ32SK390S32SN352J32SK38Z432SS3CGC31CW322S33M335EC33M53CMV32WZ322S26T32PJ32IG320N39I9321R35W33BUN32203CY434913BNF32BP2YS3BNM3F2534RI26Z3G1A3FKD34273FW734RI325M39UY32D33BY832U035EC23W3G1A32U435W33CGM339G3BUF32MA3BUF323L3EYZ3EYS3FQO36HE3CS8326C3B0G3CZJ2AW373C3FWT3F152CF36HE358X3F4X326C3CS8373A3CSF373C3FL9373F3FL9326C373F2CF326C358X3CHZ3F153FLE373F3CHZ2AV3EVF3G2K3FIL2QD3F1532BM373K32NP37AK376L25X3G1A3FYS358W3G1A3ACL3G1A32HQ24L3G1A3FNC3F623G23325Z37AN373C344H2IE3FZ033B837AN24S3G1A2IE328D3G4632ZA24T3G1A344R3EUA3EOC326P325I373C37AN32GF325I325I326Y37SS373F2IE321337SS37SS32GP3FXV310I2WV2DK373C3AWU31ZQ25Y3G1A33C7373C24G3G3U32HU3G57376R3G4D321R373C3EVW33Q32583G3M378A3G3P32A32513G3X3FMI3G4033482543G1A37AN328D3G5R328G3G4F32OT2IE3G4J32XX3FSF37FY3FXV3G5D26M3FSK33CE3G5C3FY83F0J3FN03FMN3DGV38MM3G4D2783672358X3BZJ329K3FFX3BTD329P3ANE3G6939JD39OV3AC0329A39XX328D23S3G1R322J34PV3EHO36BW3BWB34AH3B7M3B0C3FQO390L3B7P35EM3G0W32ZX38Z432SN358X32SK39NS32SS3C4F31CW35EC33M3325M33M53G1Z32KY35EC2453G693BLW32J6361F37GX322035W332LA3BUD3BME2YS3C6R3FO535EC24B3G6Y3FVH35QY3G163DJ339V032D33G263399325M21B3G2332383DQ932U73BT232MA3BT2323L3F4G3ET33CG3326C3FQQ373A3FQO3G2W2DK3G2Y3F4R3EU83G3234RI3G35373A3FQQ373C3B1R373F3CJG2H33DQL3D55373K2CF3G2U3DPI3G382DK373K38N72AV3F1M2AW3G9O2AK3F1M32BM37AK32NP37AN376L2393G583E843G5K27921X3G3R32O32343G1A3FM32753GA632ZA3GA332OD3G423335325I3FBT32G02IE2253G1A325I328D3GAK328G3FH63EOA326P3G4P3G6635HS3G4T32UO321H373K325I3213321H321H32GP3F5X2HF359L312N3G4Y35NV23A3G5431EM373F21S3GA732HU3GBF3291373F3F7E3BFD3G9Z3CC93GA127522C3G5N3GAE3DQ222J3G4732HU3GBV3GAP3FMI3GAR325H3EU83G4R321K3G4M37FY3GB5321R373F3G5132A33GBI32IG36HE3FMN321R326C3FSK372H2283G6G3CZK322S36SL329K34WQ3F0X329P325M2323G69390W3BIV3AID3BDB328D2173G4D37MR3ALZ389V34Q038GH3FUL3A2T33Z53CES366W26N3G0E39EC37AL34JY32HM3G0N3G0L3B0H3B0F3GDN3ASF3G0R34X53G0U3EQY34X53G0Y39NO348M3G12321I3G14321I3G162CI322S21D3G693G1C3EVU3CYC3G1H367S3G1K330S3G1N32TL322S21J3G88322S3G1T34L63G1W33113G7P342E35EC25K32QF34Y83G2534FH3G283DFJ3DOH3CBS3EMA3FQD3G2F3G913G2I3FAP3F153G2M373C3G2O39BY3G2R3D8X3G9H3G3C3G2X3FFZ3D503G313F4J3G342AK373C3G373FR73G3A3G3D31CX3GFQ3F15373C3G3G34GI3G3J34GK2683GES3G3N3GFZ36P732WD28Z3G3V3GG432HU3GG232Q33G3Z33353GBT3BSO37AN26G3GES3G4832ZD3GES3G4E3F5U3G4G3GC23G603G4L3GC23G4O3GC332BT3GAW3G4V3FNM3GB837SS3G3C3G512AK2HA3DPM26N373C2733GES3G3V3GH73DOU3GGK3G653G5F32O326Z3GG03DPQ3GES328D26P3GES32643GGB390B26V3GES3G5T39043GHJ32A326S3GGK326J3G5X32I03G5Z3FMI34IL3G6232I73G643GH53GAU33RM2703GHC3G6A32J63GCF3AV225P3GGK3G6H39BY3G6K3FER361F3CHB322E3BZO3G6Q3CXS3A5F33DF3G6V36RI3GES32D334PV31ZZ3G7239O93B7J3FQD3G753AFI3B7O3FV93G7A3GDU396D3G7E34X53G7H38WE348M3G7L3GE1367J3GEO2CI35EC25T3GIB3G7U32T83G7W34KT3G7Z34KV3G81330S3G8432TL3AMQ3GIW322J35EC34273G8B3CG63G8D322J3G8F342E325M22Z3GHM3G8K3BZ33G8M3CBS3G8O3CBS3G8Q3FL13G8T3BRR3DKK3G8X3GFG3G903FR63GFI3FFS322S3G953GKL3GFR3G993G9D3EVP3G9B382Z3G9F3DFF322S3CZR3G9J2AW3G9L34AH3G9Q3GB83EVW3GLB33U93G9U321I3G9W38EN24X3GH832HU3GLJ32ZA24E3GES33Q323W3GES3GA839863GHU2793GLO3GAD3FD432Q33GAG3ASZ2IE23T3GES3GAM32A33GM432ZA23Q3GHX26N3GAQ32OT3GAT3G4R326V3GGV2AK3GAY3GC23GB1348P3GB43FME3GB63B4H3EU83GGZ387P24Y3GES345C373F24D3GLS37QF3GIB3GBK34GK2403GLK328D3GN53GLY3FZ032HQ2473GGH32Y63GMB3GMD32I0325I3G4Q32XX3GC632I73GC83FS33GC233RM3GMZ32913GIE32T83GCI3AV22303GIH3GCN3DGO3GCQ3BTD3CTD322E3BZG3GIB3GCX32T83ABS33DF3ALZ36V53GJZ3F7R2162AK37MR3ASC36SB34Q332F637N23CEV33U9348237N6387A37N83A373B773B7I3GJ53B773G7738SP3G7933LS3G7B33S43G7D32C93G7F32ZX3GJD32LS3GJF35373G7N3C4K34EM35EC2223GJN3BKU321R3GJQ33FE3GJS34913GJU34943GJW3G6O3DMI3GOD3GK133113GK33F2133923GK733T6325M153GKB3D9W3GKE361F3GKG361F3GKI3ESN3DJ23G8U3FR13FQD3G8Y3G9P3GFG3G3032MT326C3GKT3DFF3G973F483G9A3G9K3GKY373A3GL23DKK3GL43G9R3FR73GB63G9M3G4X3GLC3GR03G8Z3EU83G9T34GI3GLH33PV318Q3GG535DA3GLP32FN3GR93EVP3CU73GHM325Z3GGD32643GM133HR2IE2103GM536KP3GLV2752113GNF3GC03GME3GGT32GF3GMI2SO3EVP3GB02U73GMN3F0E3GMP3G9C3GMR373F3GMT31ZQ21B3GMW32PJ373F21K3GN0328D3GSG33EB3GN23FIH3EOO3GN632A321G3GRR26M1A3GRH3GAU3GNA32O321C3GND3EP13GSR21D3GRU37AN3GC13GNI3GAU34IL3GNL334V3GNN3GCA35OU21L3GIB3GNT3FTM3GI83FDE163GNY36HE3GCO33JZ3GCR3FLM3GO426M21Z3GO63B2T3BQ03GCZ3GOB3D9K3GGK2GL3482394W36SG387A2173BHA3GDE38JO3BHD36SB34JY34GE3GOM3EJO3DRJ3GOQ38JO3GOS3BD33G7334E03GJ438SP3GOY3GJ63EQW3GJ83G0X3GJA3GP53GJC39BY3G7I34KG3GJG32BQ3GPC3CMW3GPE32BI25O3FTR3GPI3DGF3G7X3BZ33G80337X3G823E8R3GEU3GPR26J3GV633173GPU33923GPW3FZB33113GPZ3231325M25B3GVJ32U43G8L339G3G8N32BT3G8P3EYS3GQA3GKK3G8V3GQE3GKO3GQH3G923F4J3GQL3DKK3GQN3GKX3GL0373K3GL03GQS32MT3G9H3GL53GQX3G9C3GQZ3EU83GR13GWO3GR3373F3GR53G9V3FG838ZI3GVJ3G3V25W3GVJ32HQ3GWZ28Z3GLT3GX232Q33GRJ325Z3GRL34TL2IE2673GVJ3GM638PX3GVJ328D2643GVJ344R3GNG3GAS3GRX3GMH3G4Y326Y3GMK3GS2348P3GB33GS53EO631LS3GB73G4X3GSA364U3GVJ3GMX36BU3GVJ3GLT25V3GXJ3GC93GSM32O324U3GWX3AB63GXG32A324K3GVU3GRI3GLZ33Q324Q3GVJ3GGI39HI3GYF3ASM3GXJ326J3GXL3GC23GNJ3GT83GGR3GTA3GMP3GY93GCB3C413GY83FIG3GCG26N3GNV3EPQ24G3GXJ2783GTM3GO03B1C3GCS3GTR2723GZ43GO73C2L3GTX34IZ2573GXJ3GU139S53GU438JO3GU6337G3GU834823GUA35VS34JY33O13GUE39MM3D273GUH3GDF3EQL3BD53GUL324Y3GUN3H0B3GOZ3GJ73GP13GJ9352J3GJB3G7G3GUX3GJE3GDZ3GPB3GJI3GV424F3GZ43GJO3FTT3CD33G7Y367S3GPO3G833BZ33G8526M23P3GVJ3FPV3G8A34L63GVO3GPY33MW325M22H3GVU3GKC3D4633G13GVY32133GW03F0K3GW23G913GW43GKN3GFF3G2Z3GW83GKS3GQX3G963G4Z3GQO3GKY3GWF3GQD3GQT3D553GQV3GB83G353GWM3GL93FNX3GLD3GQG3GWS32C93GLF32BQ3GR7345L23J3GYD3D4C3GYQ2752263GX032FN3H2K3GX332HU3H2N3GX63GLZ3GRK3FNM3GAI321Z3GXD32HU23A3GYS3GMC3GRV32I03GMF3GAV3GXP3GMJ3GS132BT3GB233IC3GB53GS73GR33GY027922O3GY23GBD26M2253GY539MU3GZ43GN335BF2203H2G39OX3H2I35QU3GYI3GSV3AO821W3GYN365B3H3U21X3H303GYU3GT63GC43GC23G4N3GYZ3GXW321V3GTC33RM3H3L3GNS3FMI3GNU3GTI372H22I3GZB3GNZ3GCP3GZF3GTQ3F403GZJ3GTV3F7R3GZM35VP22D3GZP38JO3GU33EJG38JO32IR3GZV387A3GZY38XX34SW3H023GOO39GO37ZW3GUI3DCO3CG13H093GJ23GUP3GOX33U93CP53FP13GUT3H0H3GUV3H0J358X3GUY3GPA3G7M3H0O362135EC21L3H0R3GV83GPK338P3GPM3GJV3GVD3H643GVG3GIO26M21R3H133GK03H1533943H1733173GVQ3ANN26Q25P33MZ3GVW3H1F3GKF3GVZ3GKH3GW13F673GW33GQD3H1N3GR33H1P3GKR3ESZ3GWA3D553GWC3GR33GWE3GQR3EVP3G9G34RI3GWK3H233EVP3GWN3GLA3GR23H283GLE3GR63GWV26J3H6K3EU83CHE3H7K32HQ3H7J3H2O3H7M3GN93GAF3H2U32572IE2CX28Z3GXE2753H7X33W43GYU3H343GRY3H363GS03GAZ3H393GS43EO43GS63EVP3GS83GB9387P1Q3GY23GSE32Z13H7K3GLT26E3H7K32O83H7K3H4C3GYA32Q726A3H7K3G3V3H8U37JY3H7K32643GGD32HQ2723H7K3GYO321B3H8Q3GYT3H323G4H3GRX3GC53GYY346A3GTB3GNP32HU26F3H8Q3G6C32J63GZ83FDE26V3H8Q3GZC34RI3H4O3GTP3GO33ANN21E3H4S3AC03GTW3GOA34IZ25Q3H8Q3GZQ3H503GZW26M2153GU73H553BHE34JY35MO3EWO3G0C39PV31ZM3H5932BM3GOP3E9M34JV3EQL3H5F3GJ13GOW3BJT3H5I3GP03F943H0G34KA3GP633S43GP8384I3H5T3GJH3G7O3GV425S3H9J26N3H0S321V3H61341S3H633GPP3H653HBD3H673AOK25Y3H7K3H143GK23H163GK53F1W38OV325M2303H8Z3H1D34FH3H1G3BM63H6Q3H1J3H6S3H1L3H6U3H1U3H1O3G913H6Y3D503H70382Z3H723GQG3H743GWG3H763GL33G9I3GWL3H7B3H253GWP3H7D3GWQ3GWT3GLG3GWV23N3H8V32HU3HCP36P723Y3H8L3DG23H8O32A33HCS3H2R3FZ03H2T3GAH3H7V32243H7K3H7Z3HD53GBZ3GT43GRW3GYW3GXO3G4U3H373H883GMM3GXU3H8B3H4B3H3D3GQG3H3F34PL3H7K3GY324E3HCV3AVJ3HB63H3P33482453HCQ37PX3H8Z3GYJ3GNA32VO3H94395V3H973H313HDA3GNH3H9B3H483GC73GZ03GNO3GZ22753HDR3H4G3GZ63H9M38953H9P3H4N3GTO3GO232TL3CJ83HB63GZK3AB03GKL329A3GTY3A0U3HA33H4Z32463GZS34823HA83H543GU93HAB326W3BHH382P31ZM382P38Q3382P3894382P3A8Q3EJN39MM32663GU832KP3AJ238X132BT38JW37N83AS53ANM3AM13FJP3CG33BDE3HFV33U9352J33LS3HAX3A4D39BY32SN322S32SK3AGQ32SS3ATO3C4I353735KA33M53GPZ3FW82213HB63FA93FD73C0X3220361F32LA3CBN3BMC2YS3CCZ3FU53ANN2273HBJ322J325M34273GEO3C6K3CXQ32D33DOH33T635KA153HBS3BTD3GQ8339G3BZ532MA3BZ5323L36HE3FQQ3G2S3GQD3CGC3F153CG33GQP3GL73H753H1Z382Z35EC3CZR373C3HHK373F3CGI3FBQ2AW37AK3FAU373C37AK2CF3G983G3D3GL83HHZ3FIL2AV3EVL3HHO3FTV3G9C373K32BM37AN32NP2IE35SL21K3HDS32A33HIL36P72133H7K3FS032A33HIQ32ZA3HIO3GM03FNM326437SS3GXW32G0325I1W3H7K37SS328D3HJ4328G3G623EUM326P3GXR35HS3H3A326Y325Z37AK37SS3213325Z325Z32GP3FS93FBU2DW3GQQ32KV31ZQ2163HDP31EM373K21J3HIR3CUM3HB6373K3EUO32HQ1A3HIM2793HK532OD3GX93CUC3HD632HU21D3HE63HJA3GRW3HDG321K3GMI346A3HJO321V373K3GSA3FJ23HB63HEK321R373A3AWU372H163HEM326C35EC36XQ329K352J3F6K329P35KA21U3HB63GO93CL73BKU329A3ASC35UK3HEZ34DX3A3236SG38JW2123GU738JW3BHD389V34PV392S2MG3HFC3EWQ3A343HFG37N13E5L3A9732C93HFO387F38QC3HFR26M32DJ3HFT3BDD3DJ23HFX3B2M3HFZ35EM3HG239BX358X3HG534X53HG83BTC348M3BL03GPD3HGE34EM325M26825M32913HGJ3FY83HGL3CBS3HGO3BZ33HGQ3G893DQ93GCT32Z13HMR33173HGY3GEN34L63A3X33923HH4323135KA2593HN432U436723HHA33G13HHC3CNS3BTD3HHF3GKV3D503G2T3BKU3GFR3HHM3H1W3HHP3GWI3AOK3HHT3HNR3EU83HHX3EMS3F5U3HI13F5U3HI43AOK3FNV3HCH3HI83FNV3HIA3FIH3GB63HID3EVP3HIF32C93HIH321I3HIJ38EN25C3HN43GLT3HON32ZA25V3HN432HQ3HOS28Z3HIS3C413HNF3GX83HIY325Z3HJ035HH325I2633HN43HJ632A33HP63HJ93GAU3HJB348P3HDG326V3HJF2AK3HJH3G4Y3HJK3HJQ3HJN3FMJ3HJP325Z3HHO3HJS38CT3HN4345C373K24U3HN43HOX3CZP3HN43HKN3F68345L24T3HOO33BF3HN43B973HOZ3GC23FBT32HQ24P3HN43HD73HQE3HPB2IE3HPD37SS3HKI3G4Y3HDE3HKL3HPO3HQ23HKP35Z33HQ13GCH3H4J3HKT3H9G372H25A3HQ12783HKZ3FN13HL23CZK3ETL322E35KA2713HQU3H4U32J63AUV335N3HLD32A32553HQ12GL3HLG3AJ13A0737N638XV37N834Q33AJ82AW3DWH324Y390S3HRT3D8X390S32BM3BNM32BQ3HG632ZX3AGQ32SN35EC32SK3AOO32SS3B8W31CW3CMX32C9320N33M53HH43CGD23L3HRB3FAI3FN03CJG32203FWG34913CJ23BZJ2YS3CJ83CBS3HL527A3HN43G1Y35QY3GK734RI35W3390X32D33HHA3399320N22J3HNF323836HE367232U73CBU32MA3CBU323L3G333GQD3GQN3CSF373F3CS83HHY3HJP3HO43HI33GFL3ANN3HO8373F3CSF373K3D973EU72AW37AN3GFN37AN2CF3HHW3H2637AK3HO83FH53FNX2AV3EUA3HI83FC23F5U37AK32BM2IE32NP325I376L22P3HPY32HU3HUN32ZA2353HOT32FN3HUS28Z3GHS2793HUV32Q33HP3344H321H3F6333B837SS23C3HN4321H35OC3HQ832A323D3HQ1326J3GC637NA326P3HPJ3HJJ326V3HJL32UO32ZK37AN321H321332ZK32ZK32GP3GI43FMF32ZK3HI83HPQ387P22Q3HPU31EM37AK2243HN43HUX2753HW5329137AK3FHA33Q32233HUO34T73HVB27921S3HQA3HV1334821Z3HP738SA3HVE26N3HVG32OT321H3HJI32XX3HPH346A3HVV321V37AK3HJS32A33HW932IG3HKU32J63G563AV222K3HR1382Z325M37VE329K3GFK3FRO322E320N24A3HRB3HRE32IG3BA3335N3EKK37G33HRJ38XX3AF03A103D6N3EXA38XJ3ACV34Q33A183HRX3A5K2AV3HRW3BRB3HRY390O3HS035EM3HS333S43HS532C93HS732ZX3HS93CAE348M3HSD31CW3HSF321I3HSH3BNT21R3HSK3CAO3HSM34KT3HSP330S3HSR3HYW3HH932TL35KA2113HSY322J35KA34273HT13C6R3HT4322J3HT6342E3BNI25N33MZ3HTC34FH3HTF3CBT3CZK3HTI3HNZ3H1T3G3C3HTM3D8X3HTP3FXW3HO23HI232MT373C325M3HTV3D923HTY2DK3HU03FMF3HU332MT3HU63GLC3HU82DK37AN3EVW3HUC3HQ33HZS3HUF3EUA3HUI34GI3HUL34GK1H3HWF3CH03HUT325G3I0L3HUW32HU3I0Q3HV03FXZ325Z3HV335HH37SS1P3HV832HU3I10328G3HWS32I03HVJ35HS3HVM326Y3HVO348P3HVR37GY33IC3HWZ3HUA3HVX3HPP34NR103HPU32PJ3HI33HZE3FMI380E3I1P3F703I1P3HX03H4H345L26G3I1P3HPZ31ZW3I1S32A32723I1P3HIZ3FME33Q326C3I1P3HP8320G3I2234893I1U3HVF3GC23HVH348P3HWV34IL3HWX31AR3HWZ321R3HX135OU26L3I1U3HQX3HKV3G653GMT372H26Y3I1U278373A3HXD33JZ3HXG32TL320N21K3HXL3GV83HXO33QT3HXQ32A326T3I1U3BQ433MG367034Q337MR3HY234AH3HY53CMA3HY734WQ3HY933LS3HYB32BT3HYD3G7K34X53HYH3CFR3HYJ35373HYM32BQ3HYO35KA2673I2T3FY83AH23HYT33FE3HYV34943HYX3I4E3HYZ3HSW25H3I1P3HSZ3HZ634L63HT333113HZB33T6320N2493I253HTB3HNM339G3HZI3BZA3HZK3GFJ3HTK3H1U3HZP3HTO3HO23HI03H1U3HTS3G3E3HZX3GQW3HTX3D953I0231PD3F4V3EU83HU43GQW325M3I073GFS3I0A34AH3HUD3HJP3I0F3F5U3I0H3HUK3GWV23Y3I1Z3DG23I1P33Q32593I1P3HW731M63I2D33DN3I253HP23I0V348P3HV4325737SS2523I1P3HV932A33I6F3I143I2H32OT3I1732GF3I19352K3HVP32BT3HVS3I1F3GAU3FH23I1E3HVY34NR24G3I1P345C37AK23X3I6332HU3I743HWA3I1W33Q323S3I5Y3G6W3I663AXQ3I683G4Y3GXW33Q323O3I2A36FL3I7E23P3I2F3HWR3I6L32I03HWU3HPK321K3I2M3GAU3FSG32IG3I2Q33RM3I773HX53HQY3I2W3AV224A3I303HXC3CTX3HXF3D503HXH337X2603I483HXM3B9A3CGA329A3I3D2792453I1P33ZL34PV3AVO3B6X3B4L34PV2113B4S3I8P3H1138XX3HXV34Q03ACS3CLY395Z3ACV34WN3A6F2AW352J39142AV38Z43I983HNO38Z432BM3BUD32BQ3HYF33S43AOO32SN325M32SK3B8R32SS3D433HYL353735W333M53I4Q3DPH23F3I483FFR3HQV3CNX32203ESF34913CUV36SL2YS3D0Y3GIN337X22P3I4K3GK635QY3GEY3BTF3BRR32D33HTD32U035W321F3I4U3D5036HE32U73CTM32MA3CTM323L3GFD3HTT3HHV3F48373K3FQQ3I5F3HUA3I043HU53BNT3GLC373K3B1R37AK3EZ93F5Z2AW2IE3H7A373K2IE2CF3I003FTV3I5O3IBD3FIH2AV3FH63HU13I1W3I5G37AN32BM325I32NP37SS35SL2173I753GD13I6032O322H3I1P3H953F2I3I7E3IBZ32OD3I0X344H3GYJ33HR321H22A3I1P325Z3CCG3I7E22B3I7P3GAW37SP326P3I1B3HVQ326V3I6T326Y37UE2IE33HM37UG37UE32GP3GT92792IE37UE3IBQ3I1I31ZQ22K3I7132PJ37AN2123IC532HU3IDC32ZA3122329137AN3FSK33Q31Y3IC032A33IDM3HIV3I7G3ICB345L2UZ28Z3I6H2793IDU36L53ICM3G4Y3ICO3HJQ3I6R34IL3I6P346A3ID1321R37AN3HVZ328D3IDH32IG3HX832T8373F37SX3G6E21G3I88373C35KA3EPP329K3GQV3EP0322E35W32383I483I3B321V3BFU335N3BKO3BYE3I3G395Z3205367034WN1Y3CA03I9A3CA63FQQ3I9C3CA8352J3I9G35EM3I9J3EYJ3AOK3I9M34X53I9P3CXR348M3CAU3I44367J3I9W337X1P3I9Z3FL23IA134KT3IA4330S3IA63IG03CZK3IAA320N1V3IAD3F1W34273IAG3CBS38ZJ3IAJ33MW3BSM31HE34Y8326C3IAQ339G3IAS32BT3IAU3HCE3G3C3IAY3B1R3IB03I013I5H3HU23GR33I5J3GB835KA3IB73F483IBA3I093HCG3IBE3GQQ3IBH3GXX35KA3IBK3H262FT3IBN3HUA3FMN3IHE3IH33IBT32C93IBV321I3IBX38EN26X3IGG3I643IHO35HC3IGG32HQ25L3IGG3IC63IHV3ICA3HPO32643ICD34TL321H26O3IGG3ICI32A33II532ZA26P3IGG344R3ICN32OT3ICQ35HS3ICT2AK3ICV3HJQ321337UE3ICZ32BT3ID13IHC3ID43HVW34NR26Y3IGG345C37AN25G3IHW35IC3IIC3IE93GTI35IG3IHP32HU2603IGG32643IDS36QY3IGG3IDW32JR3IGG32RR3IIC326J3IIE3I163FMI3HVQ321K3IE631AR3IE83H313IEB36RI3IJ23GI73I2X3GY93IEI3DLX25W3IIC2783IEM3F1X3IEP382Z3IER3BZ31I3IEV3CGA3BNS3AH2329A3IF035JW3IGG33ZL34Q03AVO34Q32703AVQ34Q33C7L3GOW3I953EKM26M32JE3FVB3FP226M1W3B773BK4337B34Q03AW83IKM3AFI3IKQ3GUO3EU83F9M32KS32OL34WQ1X3HAU33M3358X3ILE3BJT3IL131RS34Q03AWR3IL538SP3B473IL83B3S38Z23AX43GJ73ILU3FP13ILU322F34Q3352J336T3APS34Q03AXA3ILO34Q33ILQ390L3ILS34WN33M53FVA3GDT3GMR3IM033Y9395Z3B4L3IM63H693F2W38SP38M936SG390L21O38MX395Y38M93AFA3B4L34Q021P26M3ILE3IF532I03I9D3IF9396D3IFB3I9E396D3IFF33LS3IFH3ATJ35EC3IFK3I9O3ANN3I9Q34KG3IFP3DJN3I9V34EM320N2443IJV3IA03GZ73D6E3IA3367S3IG134943IA93I3626M24A3IGG3G8E3IAF34L6361F3IGC322J3IAK339935W321B3IJ932383IGI34FH3IGL3FY033MR3IAW3G3E3IGQ3GQQ3IB13IGU3I5H373F3IGX3G4X3IGZ3GXX3IB93GF53IBC2AK3IH53HHO3IH73GB63IH93FMF3GWP2IE3F7E3IBO3IBR3IHG3IBQ3IHI31CW3IHK32BQ3IHM33PV21W3IJ636633IHT32O32363IJ034TQ3IJG32A33IPI3IHZ3F633II13I6V3II326M2273II637T63IPQ2792243IJI26N3IJK3ICP3IJM3IIH3I1E3ICU3GAU3ICX3IIN33IC3IIQ3GAU3IIS3I5G3ID62AK23D3IIW3IDA335H3IPO365I3IQ227521S3IJV3IDJ38EN22N3IPJ3CC93IQT26M22C3IJ93I0W3HPO32HQ22J3IJD3GBX3IQ53IQ73IE33I1C3IJO3HPM334V3IJR3IEA35OU3IQV32913IEF32IG3IEH3AV22283IK23F153IEN33JZ3IEQ32TL35W32413IJV3IEW3IKD33DF3IKG3B1U3IKI336V34Q03B3H3AFA31L534Q03B4R323E3ILL3I8Y3B7E356T38Z234Q03BH93213397B3HLN2IE352J32GJ3F893AFI39233ALX382P3A8X29Y34WN3IFE39Q33BX63F5U36703FF43CMR3CMP3FPS3CMR3CSF3AGQ3CMU35EM35KA32SK3BEO32SN320N32SK3BYZ32SS3ESY31CW3DEG31CW367233M53IGJ32KY361F312X32913G2J3IEE3GQX32203FQW34KV35W33FSY330S35W33FYW329P361F1E3IO13HZA35QY3IO8384I3GZD33923FAY342E367225E25L33MZ3EU434FH3EVF32MA3EVF323L3HU63HHO3IOV3D9737AN3CSF3FSB2DK325I3DA937AK325I2CF37AK35W33F0J37AN3D972IE3GL03G4I2DK37SS3HU93FMI37SS2CF37AN35W33FMN325I3HUF37SS3FHA2AV3GC62AW3IVU2AK3GC632BM321H32NP325Z376L26G3IUN3GC2335X3IW532NZ3IW533Q326F3IW53I2B2753IWC38ZU3IW5326432ZK3H49326437UE3HDE32G032ZK2683IW537UE32OO3IW5344R3HVM32CB326P35VS325I32ZK32GF35VS35VS326Y37UQ37SS37UE321337UQ37UQ32GP3HPH2B126M37UQ3IVV37UM35NV26L3IW533C7325I26V3IWD32PO3IW83GHV3IWV321R325I3GMT32HQ25N3IW53HD73IXZ32OD3IWK37RF25Q3IW532ZK33PQ3IWV326J3IWX32OT37UE3IX132XX3IQF32I73IXE3IXV37UG33RM26S3IXU26N373K3HVZ3I1V3I1I372H25J3IWV278373K35W33EOC329K3I5L3GRF322E3672153IJV3FPJ3C0V3CYC329A39TN3A9I3IW53F9R3CEY352K3FVI34E03BY23BTC3CAQ3AOK3CAS33LS3ITJ32ZX3BYZ32SN35W332SK3BUF32SS3G9B3ITQ353736HE33M53IUJ2CI367224R3IYO3GQF3IRP3DPI32203GF834KV361F373A3EPP2YS361F3IUP329P3CH63IZE3IO735QY3ITT384I3HR333923ET832U036HE22Q3IWI3238373F3FRB339G3F1M32MA3F1M323L3I003HI83CGI37AN3EZ92IE3B1R3IVF2AW3IVH3IH33IVK3FMF361F3FMN2IE3EZ9325I3FAU3GAT2AW321H3IP5348P2CF3IVD3H4J3IVR2DK321H3FSK2AV3GAW3J1E3H8F3IXF37SS32BM325Z32NP32ZK376L23V3IXQ3DTK3IXS2933IWA32O323Q3IW53IJE26M3J2J32ZA24B3IWI325Z3IWN333535VS3GXU32G037UE23N3IW535VS328D3J2Y328G3I6T3HPQ326P3IX737UG32GF3IXB32UO37UW321H35VS321337UW37UW32GP3I6P3GS037UW3J233IXH387P23W3IXM32PJ37SS2463J2K32HU3J3T32ZA2473IYO37SS32KV32HQ22Z3J2D32A33J4332OD3J2S390B2413IWS32XP3J2F2752323IYA26N3J3432OT35VS3IX832XX3IX437FY3J3J321R37SS35VS33RM3J3Y3I783IYT3IJ33IQJ3G6E22V3IYW3F5U361F3EOA329K3IP33FS0322E3FC13IYO352J3BUN3D123BUQ3HNR328D23I3IWV37MR3CGC389V322S329S3EHL3C4035WR3BFO3ASF21L3EXI32C83BDF32233ALQ348L34WN21I39BW3ALQ3J603CA838MU347J352J37A93ISF3ALQ21J396D32AX352J3BOI321B23P3B1C21H3J6D3CA638UC31RS34WQ21F3GKL3IFC39BX34WQ3J6K2703AJ23AR33HS43B6A32C935KA21C3F443BES2AV3BUF3FWO3GFG3BUF32BM3EML321I36HE32SK3CBU32SN326C32SK3CTM32SS3D5A31CW3FLI32C93IRQ32BQ3G3H32PF373C22C3IYO3IOX321V2IE3F0J32203I5J34913FSC3H4H2YS373A3HDA329P373C22I3J0M3GI73427373F33943IYY33113H2B342E3G3125I33MZ3HQJ34FH3G6232MA3G62323L3J1N3IVG3GKY321H3FLE325Z3FL93I1B2AW37UE3IHF348P37UE2CF321H373A37SX3DY72AW32ZK3IVI3IIK2AW35VS3GCJ327R35VS2CF325Z373A3IYR37UE3GMR35VS3HVZ2AV3IQF3J923IYL3IIJ37UG32BM37UQ32NP37UW376L21G3J4B34GN3J4D371F3J2H32Q721F3J2Z34HV3JA7153J2Q37V33IIO326437VA3IX534TL328A1C3IW537VA328D3JAO32ZA1D3J4G3J3G3IXG32OT37VK37UE328A32GF37VK37VK326Y382E35VS37VA3213382E382E32GP3J3A326Y35VS38UC31L626M38NC387P21L3J3Q26N37UE103JAC37YP3JA7113IYO37UE3J4S33482BX28Z3IWT32A33JBY32Q3328A3IIO33Q31R3IW5328A328D3JC732ZA1O3JAV2XF3JAX32I037VA3JB032XX37VA37VA32I73JBD32IG37UE37VA33RM3JBT329137SS3J3L32IG321H328A3EPQ1H3J5137SS373A3GGZ329K36723IXW32TL373F2293IYO3HSU32T83DLR32IN3D43335X3J8M32KI322S3CFU36SG3AGQ21D39Q33AGQ32LK3JDN34RI1F39Q33BE23J6Q389V325M3BGL3BH23I3P392339I938AB3CCC38AD3BY032IG3E8Y31ZE3A11358X37EU3HME3IL93C4A1C3DJ13E6M3EB03DT63CYH33LS361F32SK3BT232SN367232SK3BZ532SS3FG431CW326C33M33J993FLH34EM326C25I3JDJ3HQ23CNX3I2P3H2632203GL234913F773EOC2YS3F7D3H7L322E326C25O3JDJ32D3326C34273J0T32LS3IK433923J8F32U0373A23K3JDJ32U437AK3J7S33G13EUA32MA3EUA323L3IVM2DK3J1L3IV23GKY37SS3D973GMK2AW3FLY3IXI325Z2CF325I36HE3HKV37SS3GL0321H3H7A3HPJ3J9C3I0D27537SS32ZK2CF37SS36HE3I2X3HP03JGT3GMT2AV3HVM3JGG3HJQ3JH7327N32C937UE32NP35VS376L24M3JDJ3II7312N3JDJ36043JDJ32HQ2523JDJ3IY83I6I3JFZ325Z37UQ3HJM32Q337UW3HVT34TL37UQ24H3JDJ37UW33CE3JHK32A325A3JF7326J3J4N3ID4326P328A3JHT35HS328A328A326Y37VA32ZK37UW32133JCL33IC3IYH352K3JCR3HPI37V335NV24R3JDJ345C325Z2513JHP32HU3JIZ3291325Z3I1I39Y83JHH378I3JI527J3JHS3JAX3JHV32HQ23W3JDJ37UQ379G3JI826N3JIA32OT37UW3JIE34IL3JAW32I73JIP321V325Z3JCW328D3JJ232IG2IE3JBW321V325I3J3N372H23P3JF72782IE36HE37NA329K3IVN3GAU329P373A25F3JF73DVD3C0X3EKV3CJG329A3ATO328D24C3JF732203IL12AJ2663HZE358X3ISE32C9322S1D3J6Z3C5U3HYE3G053GV13JL438WE3CFU31RS358X3AWR3CFY3C3P3AW83IN0322M3BZO3JEK3DOC3DT63DXQ3DJN3JEP34X53JES32C93JEU32ZX3JEW3ESC348M3JF03EZJ367J3J1032KY326C23I3JKH3IYP3D6E3JFA3GLC3JFC367S3JFF330S3JFI3ENN3JFK34D03JFN322J3JFP33113JFR384I3JFT33173JFV3399373A21L3JFZ32383JG134FH3JG43GXV33MR3JG83IBM3J1M3JGC3D953JGF3JIS3HOF325I3JGJ3IVX3CZK3JGN3J8W3HCG3JGS352K3IVQ3I1E3JGY3CZK3JH13HQY39VK3H8F3JH53JH83JIS3IYR327R3JHA31CW3JHC321I3JHE38EN22M3JJ7328D3JNZ35C33JHM32O322L3JJ032FK3JJ927521A3JJB3JHU33353JHX35HH37UQ22E3JI235BJ3JJJ3JJL32I03JID3JAX32GF3JIG32UO3JIJ3JCF3JIM37V832GP3JJS3JNM3JIR2DF3JIT387P21V3JIW32PJ325Z2193JO733LD3JO926M2163JM33JJ434GK21Q3JO03B193JOC3IRH33Q32103JJG36KP3JPB2113JOL37UM3JIB3JCF3JJO321K3JJQ334V3JJS321R3JJU35OU3JPD32913JJZ32J63JK23AV221M3JK63GAU3JK933JZ3JKC3G48322E373A23F3JM33C6R32T83CCZ335N3JKN3B203JDJ33ZL358X3B3H3CFY3B4L358X1B3B4S2663JQW33493AXK3FKD32KS3AJ235EC37N63AOO37N8320N3CG13H612AV3BT23FQC3GL03BT232BM3CZ332BQ3J7I32ZX3CTM32SN373A32SK3CZM32SS3HU931CW3FRD321I373K33M53J8J2CI373F1O3JM33IV132T8325I3FMN32203IH734913G6037NA2YS373C3J8O329P373F1U3JMG3GNO34273J7S32LS37AK3BTG32D33HOJ3399373K25X25J33MZ325I3HUJ339G3GC632MA3GC6323L3JGZ3J1Y3HO2325Z3H7A32ZK3GL03J9F2AK3J9H2DK325Z3J9K3JIS373C3IYR32ZK3H7A37UE3GWP3IX02XP3JNL3I1E37UQ2CF3J9D3I6X31RT3JNP2ZS3JTW2AV3J4N3J9G3IXJ3JTD37UM32BM37UW32NP328A376L26W3JSW37UM32NZ3JUD328D25N3JUD3IXY3JUD3JJH32A33JUI32OD3JAK333537VK3IXC3BSO37VA26R3JUD37VK328D3JUW328G3JOR3J3L326P3JB637V832GF3JBA32UO383437UQ37VK32133834383432GP3JPY3JTZ38V03JU538UC31ZQ2713JUD345C35VS25I3JUL32HU3JVR329135VS3J3N33Q325H3JUD3J3032A33JVZ3AAX3JUD3JAJ37UM3DQ225D3JUD3JAQ32A33JW93JV137V33JV33JBI37UM3JB8321K3JB337FY3JVH321R35VS3JBJ3AA13JUD321V3JCY32J6325Z3JP03G6E25Y3JWS278321H373C32CB329K3JH0348P329P373K1L3JM33JDF3EPN3GQX329A3EMM328D25T3JWS2GL3GJL3HF132B13AOO3HF4337H3AOO3ISP3BNT33ZN3EHV382P3AP0382P39Z529Y3JXL37TG3CRR3IT4322M35KA193J7434AH3J773FWJ3FL93J7A3JLQ35EM3J7E32ZX3J7G3FAX34X53J7K3DFF348M3J7O3JRV367J3JSN32WZ373C24Y3JWS3IJ33G35321R3J7Z34KT3J82330S3J843EUM3J863GRV3J89328E3JUD32D3373C3J8E34L63J8H33923JS03231373F2233JW532383J8O32U73J8Q32BT3J8S3JN93J1O3JNC3J8Y3GFG3J913J9X3J94321H3J963H373JF23JP13FLE3JTV3J9V3J9I37UM3K073JTG32MT3J9M3JTY3J9P2DK3J9R34AH3J9U3J9X3IQJ2LM3J9Y32C93JA0321I3JA238EN2423JUD3JC02BP3JUG32A322R3JUJ32O32413JW032XP3K0W36X13JW5325Z3JC433353JUQ33HR328A22Y3JWA32HU3K1D32ZA22Z3JWS326J3JAW3IXH326P3JAZ37V33JB23JWH3JB53JWI32BT3JV83JBC3JAX3JBE36T62DK37UE3JWQ2AK2473JVO32PJ37UE23I3K123J5G3K1427523J3JYV3JBN3JU433Q323E3K0T32HU3K2I32ZA2343K163JAH3AO823A3JUD3JC939823K2B3DHG3K1J26N3K1L32OT3JCI3K1P321K3JIN3JCN3K1X3JCP37V833RM3K2D3JCU3JCF32T83JWU3EPQ2243JX03G4Y3JD433JZ3JD73G4Y3JSH3CPS3K2E3JDD3DLQ3ET4329A3JDH34VH3JZ93IAE37GX3JTA348C3JRE3GKY3JRF3FFO361F3JRJ35EM3JRM33S43JRO32C93JRQ32ZX3JRS3HTT348M3JRW3J7R367J3JS03G4X2283K2E3JS532IG3JS734KT3JSA330S3JSC3K4T3HPC3JD935BG3K3W3JSL33113JYR34RI3JSP33113JSS342E373K26J32R734Y83JSY34FH3JT13IIP3GC23JT43I5H321H3FAU3JT82DK3K3Z3K063K0F3H4J3J9J3K0B3F153JTK3HCG3JTN3K5P3HKV34P33JTR32ZK3JTT352K373C3IYT3K0G2AW37UQ3I1I3JU13JU431ML3K6B3JTX35VS3JU734GI3JUA38EN21C3K2932A33K6K32ZA103JUJ32FN3K6P28Z3JUM2793K6S32Q33K1A32Q33JUS3ASZ37VA1B3JUX34IE3K2V183K2X3JV232OT3JV53JB8326V3K1V2AK3JVA3JWH3JVD2Z733IC3JVH3K5Z3JVJ3K6C3JVL2AK21H3JVO31EM35VS1V3JVS37YY3K2E3JVW38EN1Q3K6L2793K8132ZA1G3K2O3K6Y33Q31M3K1E328D3K8A32ZA1N3K783JWF3JAY3K1T34IL3JWL32I73JWN3JJK3JWH33RM3K7V32913K3E32IG3JWW3AV226K3K5A32AY3JX234EK3JX53G4Y3HV9322E373K2193K2E3JXC3F1W3G353JXF34IZ26F3K8Y37MR3EMM389V35W33BHR39PV3AC03JXY33Y43CBN3JY232Z6366Z3JY53DQV3JY834E03JYA3FAM3J793BZ33J7B3JYF34X53JYI3JEZ3JYK3D503J7L34KG3JYO3G4X33M53JYR2CI373C25M3K8Y3JYW32J63JYZ33FE3JZ134943JZ33JZ23JZ6322E373C26O3K5A3JZA35QY3JMO384I3JZE33173JZG3EU823P3K5A32U43JZM339G3JZO3FSE3GAU3J8T3HO23JGO3JT63JZU3J903IP937UG3JZY37UG3J97382Z3J9A3I5H3K053J9X3K073JTE3JH73JTH3JP13J9N3J9X3J9Q3JNP3J9T3J9W3JBH3K0K3ICY33U93K0O32BQ3K0Q35BF24Q3K5A3K0U2F03K5A328D2563K5A33Q324P3K5A3JW12QD3KCE32A33KCG32OD3K18344H3K6Y32G0328A24I3K5A3JWB3ID23K8Y3K1K3JCF3K1M3JWH3JCJ3K1Q3JB42AK3K7B3K1U3K1Z3K1W3JUT3K7O3K203K8P387P24V3K5A33C73JCQ3KCK36EC3KCN31FT3KAH3K2F3JBW33Q32513KCB3JJ13KDO3DGW3KB43K1737UG3DQ224X3K5A3K2T313P3KD03K2Y3KD23K3037UG3JB13K333JOW334V3JCO321V3JCQ35OU2523KDQ3JCV32J63K8T372H23Q3K8Y2783JD33GB93JD63GC23HJ6322E373F25J3KDQ3K3Q3DV733DF3K3U27923L3KAU3IAE3FDV3CBS32KA3K413JRH3K423CBS3K4633LS3K483IGM3D503JRP34X53K4E3G3E3K4G35373JRY321I3K4K3EU822Y3KDQ3K4O3JK13IBR3JS9367S3K4U34943JSF3I1Q3KEY26M2403KF83K5033923K52322S3K5433923K5633T6373K31463JSX3KBA3JT03GC23JT23K5G2AK3JT53J1Q3JT73HCG3K5N3KBQ3K5P3K0937UM3J9L3K5T352K3JTM3IHB37UM3K5Y3JAX3KH73K6132MT3JTV3K653JTY3K5Z3K693K6E3K5P3JK03KHH3K6G3JU93E6S2223KDM328D3KHO34UY3KCH37DT3K5A3K6U2752213KDX3DKW3KDZ37V83JAL32643K7033HR37VA21U3K5A3JUY34UW3KHZ21V3KE73K7932I03KD93JV73KDB3K7F3JAX3JVC2V73K7J3JVG3JCF3IX63K7J3JU33K7P35PI3KDJ3K7T35BG3KHV35BJ3KDQ3K7Z33PV2193KHP33LD3KI13K8832FN2283KCX32HU3KJA3JWE328A3JWG37VK3JB732XX3K8L334V3K8N3JWP35OU22E3KDQ3KEO3JQ13K383FDE2153KER348P3JX333JZ3JX63K943EVP22V3KDQ3K99320N3K9B3FAP3HJ73K8Y3JXK3CRX39Q33F3W36HC320N173FAG3KFC3HBW3KFE3KKL33U93JRK3JYJ3J7J3KFL3K4B3KFN382Z3JRT34KG3K4H32C93KFS32BQ3KFU373F1B3KFX3DPI3IYK3JS83GAU32LA3KG33JSE3K4W3K3N21D3KGA373F3JSM34L63KGF33173KGH3231373K25G340G3K5B3KGM33G13K5E32133JT33KGR3K5I3KGU3JT93GKY3JTC3K6C3KGZ3KBU327R3JTJ3KH33KDF3JTO3JTR37UQ3KH93JAX3JTU3F153KHD3JNR3JAX3KHG37UM3KHJ3KMK3KHI33U93JU8321I3K6I33PV26Y3KLP3KCL338C3KLP32HQ3KMT3K6T32HU3KMZ3K6X3JW73K6Z3K3633B837VA26D3KLP3KIA34893KLP328D26A3KLP344R3KIF3JV43K8J3K7D3KIJ3DGA3KIL32BT3JVE3K7K3KIQ36FE3KIS3JVK37KW3KLP33C73IX53KLP3KHW32863KND3FM63KNG3JWO3JCG334825P3KMU3FMW3KLP3JW63JAL32HQ26O3KLP3KCY32FA3KNG326J3KNI3JWH3KJI3K8K3K1R3KJL3KNS321V3KJN33RM26U3KO526N3KJR26N3K8V3EPQ25L3KNG3JX13F153JX43FIG3J4032TL373K143KK43ET43JXD3KK73JXG32A325C3KLP3HH326M14352K36723FAR3FAV3FY33FWY3BTD3FX033LS3K4C33S43CZM32SN373C32SK3EVF32SS3GR131CW373K33M33I803HOI34EM3ENU3KOX3J1D32IG37SS3GCJ32203IV634KV3GNJ37SP2YS3GTC3JQG3EVP25V3KPK322J373K34273J8J34RI37AN3CJ932D33JSZ339937AK22S3KOC323837SS3IHK33G13GAW32MA3GAW323L3JGQ3JTF3KBO3DUD37UG3FAU3JTP3K673K603KMD352K373F3IYT37UE3DA935VS3HOF3J372AW37UW3I2X3K0L37UW2CF3K5W3IQJ3K682DK37UW3IIS2AV3J3A3KRL3JK33K5Z37UQ32BM328A32NP37VA376L23X3KO03I763KO32IF3KMX32O323S3KLP3JI332A33KSQ3CO83KOC325Z3KI532Q3382E3J3H3BSO37VK23P3KLP382E328D3KT4328G3JIN3JCZ326P3K7G3JVC326V3KNQ326Y327Y37UW382E3213327Y327Y32GP3JOR326Y37UW38AN3KNT3JVJ31ZQ23Y3KNX31EM3JA03KSR395V3KOX37UQ3JCW3COJ3KSK328D2473KSM2752313KSW3JWH3JUT33Q32433KNA34C53KU93KG83KOK31HF37V83KTB3K1Z3JVB32XX3K7E346A3KTP32IG37UQ3JVL388J3KOX3KP132IG32ZK3JBJ372H22X3KP43HJQ373F3HPQ329K326C321H3ICI322E37AK24M3KOX3KK63GE83CZR329A3ESY328D22O3KLP36SB35W336KH2653FEL35W331ZJ3ANN31ZJ3HSC371F3DJ134WI3ANF3BNT3FZU3KW335KA1232BT320N35KA2GB32133BYZ133DFJ3KWB3BHE361F31GP3JXV3I4039PV32KA33ZL35W33KWF3BMC37MR3KVV33EJ35VS361F37M032AX3672103EJF3FY8367237TX389V36HE38D33JE23HBW39233C0X3JQY3FWG3BGU3KPU3KWV3CZK34JR31ZV326C3KX1347K3CTM3KX53IV131Z73KWL3EMN39233CNX3JQY3FFV320K340G326C38ZZ31CW3JKF3K4D382Z34Q03KQ626M1U3IH33IP73IPA3FMF3J943FH63IBU35EM37SS32SK3GAW32SN321H32SK3H3A32SS3JNR31CW3J2A321I3K0E32BQ35VS362132ZK2163KOX3J3C32J6328A3JK332203KS034KV3JIE3J3L2YS3JQ23JJH322E32ZK2283KQS3J4H35QY3JNV32LS35VS3FHA32D33KC6342E37UE26C25E33MZ3KJF34FH3JOR32MA3JOR323L37VA3KH737VK3K07382E3KRY3K7J3J943KTI2DK37UY3JCW279382E37UY2CF382E325Z3JBG38343L05327Y3IYT27537UY3JCZ2AK38MF3L0P3KNN38MF2CF3834325Z3K7N37UY3JBG27538MF3JVJ2AV37UY38GA2AK3L153L093D2R33U938MK32NP31SA376L1A3KLP37UY3BZS3KUJ1Q3KMX32FN3L1L28Z38MF328D3L1O32Q338MS37UY344H31WC38MF33HR38MS153KLP31WC328D3L21371K3KUL31SA31SA38MK32I0323437UY38MS32GF32343234326Y325F38MF31WC3213325F325F32GP38MK38MK326Y38MF325F2AW37UY3987387P1F3KTX3L1A1P3KLP3L1Q371R3KOX37UY3EID334826L3KZS3L1A3F703L3B32643L1U3AO831Y628Z38MS3AOC3KUJ1G3L2738MM36EQ32OT31WC3L2D32XX31WC31WC32I73L2Q346C37UY392M3I123KOX37VK39PN321V382E38MS3EPQ26H3L3B32AY37VK3KSX33JZ325I37VA3JUY322E37UE2133KOX3H4D32IG3HKO33DF3HID32OO3L4B37MR3HOH36MQ3F1G3HOF3G393F4J37MX3KA53J5T3FAZ3AXZ3ESZ3J5X38Z23H7A3H2331RS34WN1V3D503FBZ3L5C32UJ3F1G38MU37UD3GI7348L373A31BT373C31RS326C1S382Z3DKM3L5R3FRA35QU321I3HC53G9C3KVW3G4X3HOF3FNV3ETZ3CDW33ZV2IE31ZY3GC23J943K4S31CW3HJ63KRF3JH43JNS3KRF3KMH3HVM32BM37UE33LS35VS32SK3J4N32SN37UQ32SK3J3A32SS3L0B32C93KMR32C937VA33M537VK3621328A25U3L4B321R3K7G32T8327Y3JBG3220383432LA3KTJ3KIS2YS37UW38343KT6322E328A2603L3B32D3328A342737VA33943L4D3311382E38OV37VA2313L3E3238327Y383432U73KTM3E1J3L85323L37UY3KC338MF3L0M3L3Q3KML31SA3KMH38MS3K7N27531WC3L8I3L3Q31WC2CF38MK37UW3L2A27531SA3KML38MS3L0S3L8J26M3KTS27932343L8Z3L8S398632MT31SA37UW3L4531WC3L8R3L903L3P34E03L3V2DK3L9E2AW3L9E32BM325F32NP39EG35SL23M3L3B3L2332A33L9O36P724W3L3B323433DH3L3B328D3L9S32Q323V3CPS333532A53L2H34TL3LA223X3L3B32A5361A3L9Y32A323U3L4B326J39EG39EG3L2U326P3A1331WC3LA232GF3A133A13326Y3A18323432A532133A183A1832GP3L2N32UO32343HY12AK31WC3ACS31ZQ2533L3B33C731WC23L3L9V388Y3LAD3GLW3L7626N31WC3L2X33Q324D3L9P37QF3LBF2752423L3E325Z3LA23L3W33482493L3B3LA236FU3LAG26N3LAI3GDG32I032A53LAN32XX32A532A532I73LB037G031WC39Q8357H3LBH38MF39EG32T838MK3LA23EPQ2323L4B27838MF37UW3EID329K37UE3L3732TL37VA24V3LBH325I3IQJ3J4Q3K6B329A3KRY35N23LB9320N37NA32M03IW635013LDB32AX2IE32AI3I7Q3KL73K4S37TK3LDA31ZJ328D34DR3L6733XC2AJ3G621T3JN93L6B3I3I311H34X53GC61R3GGU3GAU1O37AL325Z1P3KDF3J9S3K0L3KC33K0I3KC23KC535EM37UW32SK3JAW32SN328A32SK3JOR32SS3JP032C937VK33M3382E33M53L8332PF37VK21W3LBH3L0O32J638MF3L8Z32203L0E34KV37VA327Y38GA2YS37VA37UY327Y329P37VK2223L7O322J37VK34273L7W38WE38343IIS32D3327Y38OV382E1U3L803EIC3L1A32U738MF38MF32MA3LFX33MR38MK3KSB3L3P3L8U3K3C3LB43KC12753L2C2DK325F3L1627938MS325F2CF38MS37VA3L483L8X3L6W3L943KV32EO3LFU2AW39EG3L3827931WC39EG2CF31WC37VA3L413GDG3LGK28M3LA334E03LB02AW3LH62AK3LB032BM3LA232NP32A5376L2103L3B325F3DYD3LBP26M21J3L3B32HQ3LHM28Z39EG328D3LHP32Q33A133L2O32Q33A1839EG33OS3A1321R3L3B3A18328D3LI2328G3LC939K432I03A6F325F3A1332GF3A6F3A6F326Y3ACX39EG3A1832133ACX3ACX32GP3LA23LA2326Y39EG3ACX3LH727A34NR2153LB931EM325F31AD3LHQ38ER3LBH325F3LCJ345L21D3LHH3HKD3LHK173LBS2FE3GDG390B1D3L3B3A13328D3LJH32ZA1A3LC13LI83LCM326P3A183LIC32XX3LAX37FY3LIP346C325F3LB335T63LBH31SA3LCF321V38MS3ACS372H133LCP3L3P37VA38MN329K37UQ38MK31SA329P382E21T3LBH321H3JK33KJS3L0B329A3JNR3L1R3L4B37SO3J1T31ZW33E5325I1M3L3B32ZA3LKZ3DAT3LDB32AY3KET325I32Z537SS1I3LL032HU3LLA3LL3329F3K3I3GML32B13J1Z3ECU39Q33GYJ1N330S3KP937TJ316Q3KAF3L3B33ZS3FNR3L7O31ZV373C32JM32XN3EVF2NU3213373F3L5N32BT3F1M1K3KKY33MR3GFR3JFD35VS373F38XF389V373K32383J5O3EVW32AX37AK3KXM39Q33EUA3KXP3FMI32B53IST3G3D382P3GLC382P3FTV3JQY3HTS31ZD23M3INR3HU531ZD31ZJ31Z63L5J32ED2B83LNA34AH32ED31W43LNE3FUM2DK3LNF2763LNG26M3LNI3LNL3LNK3LNM3LNP3LNO3LNR3LNJ3LNT3LNN3LNU3LNQ3LNW3LNS3LNV3LO03LNX3LO13LNZ3LO231ZM2XK3LO53LO43LO93LNY3LOB3LO33LOC3LO83LOE3LOA3LOD3LOI3LOF37363LOL3LO23LOL3LO73LOH3LO22FD3LOS3DPK356V3LOT3LOV33C33LOW35I53LOZ3LP13LOY3LP33LOX3LP53LP03LP43LP73LP63LP23LPA3LP83LPB3LOL3LPE3LPG3LPD3LPI3LPC3LPK3LP93LPM3LPE32IP3LPJ3LPN3LPQ3LOO2DK3LPO3LPT3LPP2752XE3LPZ27932023LQ13LQ33LPY3LQ433XH3LQ03LQ53LQ93LQ73LQ63LQ83LQB3LQA3LQD3LQG3LQC3LQI3LQF3LQJ3LQE3LQM3LQH3LQK3LQP3LOL3LQO3LQN2XK3LQD2AK3LQS3LQX3LQL3LQY3LQQ3LQW3LQZ3LQL3LR23LQQ3LR03LPW2AW3LQS3LR83LQ62RB347C32033LRF389U3LRG336I3LRD3LRI3LRK3LRH3LRN3LRJ3LRL3LRQ3LRO3LRM3LRP3LRS3LRR3LRU3LRX3LRT3LRZ3LRW3LS03LOO3LS23LRY3LS13LS63LRV3LS83LS53LS93LS43LSC3LS73LSA3LRX3LRB3LSB3LSH2AK3LRT3LSK3LRI3LSM3LSI3LSP3LSF3LSD3LSQ3LSS3LSR3LSE3LSU3LSX3LSW3LPT3LSY3LST3LSE3LSO3LSV3LT23LT63LT52AW3LT13LSG3LSH3LS43LSJ3LRT31DE3LTG2793LTH27531DE2RO3LTM33XV33723LTP34842LX3LTS33Z53IWF3LTU34DZ3LTX2AK2FI3LU0320G3LU233693LU43LTX3LU13LU53LU73LU63LU33LUA3LU83LUB3LU93LUF3LUE3LUH3LUD3LUJ3LUC3LUL3LUG3LOO3LUN3LUM3LUI3LUQ3LU53LTZ3LUR3LUP3LUW3LUB3LUU3LUK3LUX3LV03LUV3LSJ3LV33LV43LUL3LUZ3LTY3LV53LUS3LVB3LV13LVC3LVA3LVD3LVG3LVF3LVI3LV23LUT2XK3LVH3LVK3LVE320I3LVJ3LVP3LVS342U3LVB3LV83LVN3LV93LRB3LUP3LSJ3LU931FI3LW334893LW532BH37N03LW8359331P53LWB37A7337R32MH3LWE33OD3LWH337O3LWJ3LWG3LWK323U3LWN3LWI3LWL3LWQ3LWO3LWM3LWP3LWS3LWR3LWU3LWX3LWT3LWZ3LWW3LX03LWF33LP3LX23LWY337U3LX53LX83LX13LXA3LWV3LWV3LX43LXB3LWP3LXE3LXC3LX63LX33LPT3LXI3LV63LXM34K33LXF3LX93LXO3LXS3LXJ3LXU3LXR3LXV3LXQ3LXY3LXT3LX037363LY03LWQ3LXH3LXX3LY33LY73LY63LY93LXW3LYB3LV43LXO3LSJ3LWV31M53LYH37AA32UG31M52ZY3LYM382N33033LYP33NB324G3LYS361L32KI38M732EL3LYX2793LYY32BQ32N033883LZ3321I35WT2Z63LZ72793LZ834XA3LZB34YU32403LZE3LNC32MO324X3LZI39E434G932MW32503LZN324T332232MX3LZR345K3LZO3LZS3LZU3LZT3LZP3LZX3LZV3LZY3LZW3M023M013M043M003M063LZZ3M083M033M073LZW37363M0A3M092XK3M0E3M0H3M053M0F3M0B3M0J3M0E38MT3M0K3M0P3M0N3LSH3M0R3LRB3M0I32V33M0W33AF33H23M0Y331U3M0X32F43M133M113M103M123M153M143M173M1A3M163M1C3M193M1D3M183M1G3M1B3M1E3M1J3M1H3LOL3M1K3M1I3M1L3M1N3M1F3M1O3M1S3M1R32GV3M1B32EM3M1T3M1Q3M1Q3LSJ3M203LSH3M1Z3M1L3M1X3M1U3M243M1Y3M1P3M2A3M293M2C3M273M2B3M2E3M2D37363M283M2G3M2K3M263M2J3M2N3M153M2M3M2P3M2F3M2O3M1W3M233M253M2V3M2D3M0Z3M2T3M2K3M303M323M2S3M343M2Y3M353M2L2XK3M3332MZ3M0X3M2Q3M2U3M363M3F3M383M1T3M3D3M313LV63M1U3M213M1532PV3M3P33AK34G332UY3M3T33NZ3M3Q3M3U3M3W3M3V3M3R3M3Z3M3X3M403M3Y3M443M433M463M423M483M413M4A3M453M493M3Y37363M4C3M4B3M4732UN3M4D2XK3M4G3M4M3M4I3M4E3M4O3M4L3M4Q3M4K3M4T3LV43M4G3LSJ3M4G32XC35B833WI3M4Z34SX33NW3M543M513M533M563M553M523M593M573M5A3M583M5E3M5D3M5G3M5C3M5I3M5B3M5K3M5F3M5J3LOL3M5H3M5L3M503M5P3M5M3M5Q3M5N3M5S3M5S38B13M5E3M5Y3M5W3M5V3M5N3LSJ3M5X3LSH3M5R3M623M5U3M693M5T3M6B3M613M6A3M6D3M6C3M683M6G3M6A37363M6F3M5D3M603M6H3M6L3M6O3M6Q3M6E3M573M6N3M6S3M553M643M633M6635GH35MI35RN3M71334Z32ID3M753M703M743M773M763M733M7A3M783M7B3M793M7F3M7E3M7H3M7D3M7J3M7C3M7L3M7G3M7K3LPT3M7M3M7I36E43M7O3M7R2XK3M7Q3M7T3M7X3M7C36533M7I3M803M7Y3M7N3M7W3LSJ3M853LSH3M7S3M7W3M8A3M843M8C3M7U3M8E3M833M8F3M8B3M8H3M8D3M8G3LOL3M8I3M8L3M823M8N3M8Q3M8K3M8R3M8F3M8P3M8S3M773M863M7N3M8Y398D3M9138V13M9232Y53M953BHK33VG3M963M943M973M993M983M9B3M9E3M9A3M9G3M9D3M9H3M9C3M9K3M9F3M9I3M9N3M9C37363M9L3M9J3M9M33V93M9S3M9V3M9O3M9M3M9R3M933M9X3M9W3M9Z3M9Z3LSJ3MA43LSH34BL3MA13MA93MA33M9Y3MAC3MA23MAD3MAA3MAF3MAB3MAE3M9W3M9Q3MAH3MAM3MAK3MAN3MAG3MAJ3M9N3M9U3MAS3MAP3MA63LRB3MAW3LR833C032Y535I23A8B3AL93MB23BB438C53MB73MB43MB63MB93MB83MB53MBC3MBA3MBD3MBB3MBH3MBG3MBJ3MBF3MBL3MBE3MBN3MBI3MBM3LOL3MBK3MBO3MB33MBG39QL3MBS3MBP3MBT3MBQ3MBX3MBW3MBA3MC23MBZ3MC53MBH3LSJ3MC13LSH3MBU3MC03MCC3MC63MBX3MCF3MCD3MBY3MCI3MCG3MCE3MCH3MCK3MBR3MCM3MCH3MC43MCJ3MCP3MCL3MCU3AJE3MCT3MCS3MB83MC83MBQ3LSJ36Q935I237EU3ARW38D13MD53BPD3MD93AQD3MDB3MD73MDA3MDD3MDC3MD83MDG3MDE3MDH3MDF3MDL3MDK3MDN3MDJ3MDP3MDI3MDR3MDM3MDE37363MDO3MDS3MD63MDK38D03MDX3MDQ3MDT3ME13ME43ME33ME63MDW3ME73M3L3ME83LSJ3MDY3ME23ME83MEF3MEE3MEH3ME53MEG3MEJ3MEI3ME93MEL3ME53MDV3MEM3MDZ3MER3ME23ME03MEN3MEW3MES3MEO3MDL3MEV3MEK3MF03LSH3MEB3MF43EIY3EIK385T3MF839GO347V3MFC3MF73MFB3MFE3MFD3MFA3MFH3MFF3MFI3MFG3MFM3MFL3MFO3MFK3MFQ3MFJ3MFS3MFN3MFR3LPT3MFT3MFP3MFX3MFV3MFY3MFU3MFZ3MG33MG22XK3MFZ3CDY3MG53MG13LV63MG73LSH394U3MG03MGF3MG43MGA3MGG3MG93MGJ3MGI3MGH3MGL3MGO3MFJ37363MGN3MGN3MG83MGM3MGK3MGS3MFU3MGU3MGP3MG63MGW3MGY3MGD3MH33LRB381N347V388X39MF38L93MH93HAF3MHC3GDA3MHB3MHD3MHH3MHF3MHE3MHG3MHJ3MHI3MHL3MHO3MHK3MHQ3MHN3MHR3MHM3MHU3ALB39RR3MHV3MHT3MHX3MHP3MHN3C8S3MI13MHY3MHS3HAF3MI33MHZ3MHK3MI83MI63MHV3LSJ3MHZ3MIE2XK3MI93MIC3MI43MIK3MII3MI53MIN3MIL3MIJ3MIM3MIP3MIO37363MIR3MIR3MIB3MIO3MIV3MIQ3MI73MJ03MIY3MJ23MHW3LPW3MIF3LSH3956388X38ZZ39UY390X3MJD3JE33D8X39D63MJE3J5Y3MJH3MJF3MJI3MJK3MJJ3MJM3MJP3MJL3MJR3MJO3MJS3MJN3MJV3MJQ3MJT3MJY3MJW3MJU37363MJX3MK02DK3MJM3HY63MJZ3MK33MK93MJU3MKA3MK83MK13MKB3MKF3MJJ3LSJ3MK33LSJ3BES3MKL3MJF3BES3BUK3FL93EMO3MKP3K9Y3EB23MKU3MKR3MKT3MKW3MKV3MKS3MKZ3MKX3ML03MKY3ML43ML33ML63ML23ML83ML13MLA3ML53ML93LOL3ML73MLB3MKQ3ML33FWJ3MLG2XK3MLF3MLC3MLK3MLB3MLJ3ML43MLQ3MLM3MLT3MLD3LSJ3MLM3MLW3MLL3MLD3MLU3MLO3MLN3MM33MM13MM43MM03MM73MM23MM53MM537363MMA3MM83J783MM23MLS3MME3MMD3MKV3MMH3MMK3MMI3MMN3MLP3LSH3MLX3MMQ3F0K3C5J3MKV3CHZ3MMW2XK3MMX3ESZ3MN03FR73MMZ3MN23FFS3MN13MN33MN73MN53MN43MN63MN93MN83MNB3MNE3MNA3MNG3MND3MNH3MNC3LPT3MNI3MNI3F4J3MN13MNO3MNJ3MNF3MNM3MNK3MNS3MMY3MNU3MNR3MNY3MNT3LV63MNN3LSH3CHZ3FNV3MO53KFP3FIL3FNV3EVW3F7E3MOB3GB63G9C3FXY3MOF3I1W3GMT32KV32KV3HVZ3HVZ3I1I3I1I3IIS3IIS3JBW3JBW3J3N3J3N3JCW3JCW3L0P3L0P38UC3MOZ3L0C2XK3MP02753MP33K1Z3MP43MP13MP73MP93MP63MPB3MP53MPD3MP83MPC3MPF3MPE3MPA3MPI3MPG3MPJ3MPH3MPN3MPM3MPP3MPL3LOL3MPK3MPK3KD83MPF3MPV3MPQ3L103MPY3MPO3MPR3MPT3MP23MQ13MPX3MQ23MQ13MQ33LV63MPU3LSH38UC3L413MQE3LGU3MQ13L413L2U3LC43MQK3MQJ3LH939YP3MQO3LGP3MQQ3MQL3MQP3MQS3MQR3MQJ3MQW3MQT3MQX3MQV3MQY3MR13MR03MR33MQU3MR53MQZ3MR63MR23MR83LOO3MR73MRC3MQT3MQN3MQR3MRF3MRA3LIU3MR43MRD3MRK3MR93MRH3MR73MRO3MR93MRL3MRI3LSJ3MRS3MRU3KF63MRX2753AW83MRZ3MRY26M3MS03MS33MR93MS432C83J5V2793MS83MSA3MSC2753MSB3MSE3MSD33F33MSF3MSI3MSH3MSJ3MSM3MSL3MSO3MSG3MSQ3MSK3MSR3MSN3MST3MSP3MSS3MSX3MSJ37363MSU3MSY3MSW3MT13MT43MT33MT63MSV2DK3MT12AK3MTA3MT73MT23MSR3LSJ3MTC3LRB3MS93MT83MTE3MTL3MT53MTK3MTN3MTM3MTD3MTP3MTS3MTR3MTD3MT03MTU3MTO3MTX3MTQ3MTY3MU13L553MU23MTB3MSW3MU53MU23MTH3LR83MU93LPW32C83ILU3ILU32C83AXE2753MUH26M3MUJ33ZZ3LBQ27Z2793AY83FRJ2793B4L3J4E3CP72793B4Y2753MUX26M3MUZ2AK3MUZ3MV33MUW3MV53MUY3MV63MV03MV83MV43MV73MVC3MV93MVD3MVB3MVE3MVH3MVG3MVJ3MVA3MVL3MVF3MVM3MVI3MVO3MVK3MVN3LOO3MVR3MVP3MVD3MV23MV83MVX3MVS3MVV3MW13MVU3MW33MVY3MVQ2XK3MVU3MVZ3MW23MW63LV63MW83LSH3MUZ3C1V2753MWG26M3MWI3MWI3MVG3MWI3C8C2753CDR3CDQ2793MWQ2AK3MWQ3MWV3MWS3MWX3MWP3MWY3MWR3MWZ3MX23MX13MX43MWW3MX33MX63MX53MX03MX83MXB3MXA3MXD3MX73MXE3MX93MXF3MXI3MXH3LOL3MXC3MXJ3MWT3MXG3MXM3MX43MWU3MXP3MXT3MXN3MX03MXS3MXJ3MXX3MXK3MXZ3MXQ3MXQ3LSJ3MY33LSH3MWQ3DMJ3GA92793MY83DMI3MYA3MYD3MY93MXJ3MYB3DR83H2J2XK3MYI26M3MYL3MYN2793MYO3MYJ3MYR3MYM3MYP3MYU3MYS3MYQ3MYT3MYW3MYV3MYY3MZ13MYX3MZ33MZ03MZ43MYZ3MZ73MZ23MZ53MZA3MZ837363MZ63MZ93MYS2AK3MZE3MZI3MZB3MZF3MZL3MZJ3MZ83MZN2AW3MZP3MZE3LSJ3MZS3LSH3MYL3MZH3MZK3MZR3MZY3N003MZO3N013MZM3N033MZZ3N023N073N043MZG3MYK3N053N033MZX3N083N0E3N093N0H3N063MZL3N0G3MYX3N0L3N0C3N0A3LRB3MZU3N0Q2793E9B2753N0U26M3N0W3N0Y3MZ03EDH3DKD2XK3N1126M3N143N162793N173N123N1A3N153N183N1D3N1B3N193N1C3N1F3N1E3N1H3N1K3N1G3N1M3N1J3N1N3N1I3N1Q3N1L3N1O3N1T3N1R37363N1P3N1S3N1B2AK3N1X3N213N1U3N1Y3N243N223N1R3N262AW3N283N1X3LSJ3N2B3LSH3N143N203N233N2A3N2H3N2J3N273N2K3N253N2M3N2I3N2L3N2Q3N2N3N1Z3N133N2O3N2M3N2G3N2R3N2X3N2S3N303N2P3N243N2Z3N323N283N2C3N233N373N1B3EJ22753N3B3L5X3N3C33JM3N1J3EJE2753N3I2AW3N3K3N3M3BFH3N3O3N3J3N3P26M3N3N3N3Q3N3U3N3S3N3R3N3T3N3W3N3V3N3Y3N413N3X3N433N403N443N3Z3N473N423N453N4A3N483LPT3N493N4C3N3V2AK3N3Y3N4H3N463N3K3N4J3N4B3N4E3N4O3N3R3N4M3N4F3N4S3N4L3N4K3N4V3N4G3LSH3N4E3LSJ3N4U3N4N3N4W3N4T3N533N4P3N523N573N543N583N563N593N5C3N4Z2XK3N5B3N5B3N4R3N5G3N553N5K3N5A3N5F3N463N5I3N5L3N473N503N5O3N4Y3DJU3N5V2753EJI2DK3N5Y26M3N603N623N5W3N613N643N633N5X3N663N693N683N6B3N653N6C3N673N6D3N6G3N6F3N6I3N6A3N6H3N6K3N6J3N6E3N6M3LPT3N6N3N6L3N6C2AK3N6F3N6U3N6P3N5Z3N6X3N6S3N703N6R3N723N6K3N6W3N6O3N763N703LSJ3N6R3N79335N33QT3N7D2AW3EK132IN3N7E3N7G3N7J3N7C3N7H3N7M3N7K3N7I3N7L3N7O3N7N3N7Q3N7T3N7P3N7V3N7S3N7W3N7R3N7Z3N7U3N7X3N8237363N803N7Y2XK3N853N823N883N8A3N813N8833DF3N863N7W3N8E3N893N8C3M3L3N8D3LSH3N7G3EQC3EQB31Z82XK3N8O3N8S3N8Q2753N8T3N8V3N8U3N8P3N8X3N903N8Z3N923N8W3N933N8Y3N943N973N963N993N913N983N9B3N9A3N953N9D3N9G3LOL3N9C3N9F3N9K3N8O2AK3N9J3N9O3N9E3N9P3N9H3N9R3N9K3N9N3N9Q3N9W3LV63N9J3LSJ3N8O3EX035QF2793NA22AK3NA23NA73NA43NA92753NA83NAB3NAA3NA33NAD3NAG3NAF3NAI3NAC3NAJ3NAE3NAK3NAN3NAM3NAP3NAH3NAO3NAR3NAQ3NAL3NAT3NAH37363NAS3NAV3NB03NAZ3NAK3NA63NAU3NB23NB53NB73NAX3NB82AW3NB63NAW3NAI3LSJ3NAZ3NBF3NAE3F2J2DK3NBJ3F2I2793NBL3NBO3NBN3NBQ2753NBP3NBS3NBR3NBM3NBU3NBX3NBW3NBZ3NBT3NC03NBV3NC13NC43NC33NC63NBY3NC53NC83NC73NC23NBY37363NC93NCC3NBZ2AK3NCF3NCF3NCI3NCB3NCJ3NCM3NBV3NCL3NCA3NBK3NCO3NCR3NCG3NC13LSJ3NCK3LSH3NBL3FJC36YG2793ND13ND43ND33ND62753ND13FOI3GBQ2793NDA3IR33NDC3NDF3NDB3NDH3FUR2793FUS2753NDL3NDJ3NDM3NDK3NDQ2753G0132HV2753G043JOA3FHL3NDY3NDX3NE0319Y3NDZ3NE22753G712AW3NE63NE833JU3NEA3NE53NEB3F3I3NED3NE93NEC3NEH3NEE3NEI3NEG3NEJ3NEM3NEL3NEO3NEF3NEQ3NEK3NER3NEN3NET3NEP3NES3LOO3NEW3NEU3NEI2AK3NEZ3NEZ3NF23NEV3NF63NEX3NF03NF93NF33NF73NFA3NED3LSJ3NF43LSH3NE63GDJ31ZR32AV3NFL2753GIZ3NFK3NFN3NFM3JPC2793GOF2753NFU3NFS3NFV3NFT3NFZ2753GU62753HA82753HM53HM42XK3NG63NG93FI53NGB3NG53NGC3NG73NGD3NGG3NGF3NGI3NGA3NGH3NGK3NGJ3NGE3NGM3NGP3NGO3NGR3NGL3NGS3NGN3NGT3NGW3NGV3LOL3NGQ3NGX3NH02AW3NH23NH43NGU3NH53NGX2AK3NH23NH93NH63NHC3NH13M3L3NHA3LSH3NG63NHB3NHE3NHK3NGY3NH73NHM3NHD3NHO3NHL3NHN3NHS3NHP3NHN37363NHT3NHL3NHJ3NHQ3NH33NHU3NI23NHR3NI33NI13NI43NH83NHH3NGU3LSJ3NG63I8V3GRS3NGE3IKV3IKY3A4X3NII3DAC27932LK2753NIM34J03K6V3NIQ2753LMN3LMN3NIO3GGK3H8Q3H8Q33I831ZD3NIX3NJ03NJ237J63NJ332OU3NJ53NJ13NJ43NJ93NJ63NJA3NJ83NJB3NJE3NJD3NJG3NJ73NJI3NJC3NJJ3NJF3NJL3NJH3NJK3LOO3NJO3NJM3NJA3NIZ3NJP3NJS3NJW3NJR3NJY3NJN3NK036OP3NJL3NJU3NJX3NK13LV43NJR3MA53NK63NJR3JF73H8Q3K8Y3K8Y3AQB31ZD3NKE3NKH3NKJ385M3NKK35I93NKM3NKI3NKL3NKQ3NKN3NKR3NKP3NKS3NKV3NKU3NKX3NKO3NKZ3NKT3NL03NKW3NL23NKY3NL13LOO3NL53NL33NL63NKV3NKG3NLA3NL83NLE3NL43NLG3NLA3NLC3NL93BI43NLH3NLK3NKF3LSH3NL83LSJ3NLO3NLD3NLM3NLF3NLT3NLW3NLN3NLU3NLZ3NLX3NLV3NLY3NM13L613NLL3NM43NM73NM33NM63NM93NM23NLQ2AL3NL23NLJ3NKU3NMG3NM03NLB3NLP3NMF3NML37KP31ZD3L4B3KDQ32IG3CPY32913NMS321V3NMV321R3NMX3NMU3NMW3NN13NMY3NN23NN03NN33NN63NN53NN83NMZ3NNA3NN43NNB3NN73NND3NN93NNC3NNH37363NNE3NNH3NNK3NNM3NNG3NNN3NNF3NNQ3NNL3NNO3NNT3NMT3NNR3NNP3LV43NNX3LSJ3NNX3NO131ZD3KVT3NMV3AVQ2BD3NM53NO638T331ZD3NO93NOC3NOB3NOE3NO73NOG3NOA3NOH3NOD3NOJ3NOF3NOI3NON3NOK3NOO3NOM3NOP3NOS3NOR3NOU3NOL3NOW3NOQ3NOX3NO937363NOT3NOZ3NO83NOV3NOY3NP63NP23NP73NP53NOP35ZL3NPA3NPD3NP33NPF3LV43NP83LSJ3NP029D3NPE3NP93NPG3NP83NPP3NPM3NPQ3NPO3NPR3NPU3NPT3NOH3NP13NPV3NON3NPC3NPX3NPL3NPG3NQ13NPN3NQ63NPS3A363NPZ3NPK3NPW3NQ63NPJ3NP53NQE34N731ZD2613NOM25Z3NM53NQL33C431ZD3NQN34WP3NQP3NQS3NQO3NQU3NQR3NQV3NQQ3NQY3NQT3NQW3NR13NQZ3NQX3NR03NR33NR23NR53NR83NR43NRA3NR73NRB3NR63NR63MK23NR93NRC3NRI3NRE3NRH3NRK3NRD3NRL3NRH3BRB3NRO3NRB3NRQ3NRN3NRU3LV43NRM3NRW31ZD25X31ZD25U3NM53NS232TU3NS13NS63NS53NS833MS3NS73NSA3NS93NS43NSC3NSF3NSE3NSH3NSB3NSI3NSD3NSJ3NSM3NSL3NSO3NSG3NSN3NSQ3NSP3NSK3NSS3LOL3NSU3NSX3NSR3NSE33143NSZ3NT23NST3NT33NSV3NSY3NT43BTE3NT53NT73LV43NTB3LSJ3NSE25V3NM53NTG3B1M31ZD3NTI36BU3NTK3NTN3NTJ3NTP3NTM3NTQ3NTL3NTT3NTO3NTR3NTW3NTU3NTS3NTV3NTY3NTX3NU03NU33NTZ3NU53NU23NU63NU13NU137363NU93NU43NTW3B1J3NTV3NUF3NU83NUD3NUC3NUI3NUL3BRK3NUD3NUH3NU73NUN3NUM3NUK3LV43NUT3LSJ3NTL322J3BXY31ZD3NUY36SI3NV03NV33FKM3NV43NV23NV53NV83NV73NVA3NV13NVC3NV63NVD3NV93NVF3NVB3NVE3NVJ3NVG3NVK3NVI3NVL3NVO3NVN3NVQ37363NVH3NVT3NVM3NVU3NVP3B8N3NVV3NVZ3NVP3NVH3NVY3NW13NW03NVQ3NVW3NVA3LSJ3NW73NW931ZD37T93D3P3NWC3NWF3BEN3NWG376M3NWI3NWD3NWJ3NWH3NWN3NWM3NWP3NWL3NWR3NWK3NWT3NWO3NWS3NWV3NWU3NWQ3NWY3NWW3NWZ3NWX3NX33NX23LOL3NX13NX73NX03NX93NX43NX83NXB3NXA3NWP3CSM3NWY3NXG3NX43NXI3NX53NXC3NXF3LSH3NXM3MKK31ZD3EIA3CS63NXR3NXU3CZP3NXV32BO3NXX3NXS3NXY3NXW3NY23NY13NY43NY03NY63NXZ3NY83NY33NY73NYA3NY93NY53NYD3NYB3NYE3NYC3NYI3NYH3LOL3NYG3NYM3NXX2CG3NYF3NYD3NYP3NYJ3NYN3NYT3NYQ3NYV3NYJ3NYS3NYK3NYU3NY43LSJ3NZ13NZ331ZD3AJ23EZ33NZ63NZ93DUB3NZA35W23NZC3NZ73NZD3NZB3NZH3NZG3NZJ3NZF3NZL3NZE3NZN3NZI3NZM3NZP3NZO3NZK3NZS3NZQ3NZT3NZR3NZX3NZW3MLE3NZU3NZS3ESG3NZC3O033NZY3NZF3O053NZZ3NZV3O0A3O013NZ83NZY3O083O0B3O063O0C3LV43O0G3O0J31ZD24S3NM53O0N3BM63O0M3O0R3O0Q3O0T32TN3O0U3O0P3O0V3O0Y3O0X3O103O0S3O0Z3O123O113O0W3O143O173O163O193O133O1A3O153O1B3O1E3O0X37363O1D3O1I3O183O0Y3ATR3O1K3O1J3O1C3O1N3O1Q3EYQ3O1R3O1F3O1T3O1O3LV43O1W3LSJ3O0X24T3NM53O212QP31ZD3O232AP3O253O283O243O2A3O273O2B3O263O2E3O293O2C3O2H3O2F3O2D3O2G3O2J3O2I3O2L3O2O3O2K3O2Q3O2N3O2R3O2M3O2M37363O2U3O2P3O2H3C5G3O2G3O303O2T3O223O2Y3O2X3O333O2R3O323O2S3O3A3O363O3B3O2Y3LSJ3O3C3O3F31ZD24Q3NM53O3J2F03O3I3O3N3O3M3O3P3CUT3O3O3O3R3O3Q3O3L3O3T3O3W3O3V3O3Y3O3S3O3Z3O3U3O403O433O423O453O3X3O443O473O463O413O493LOL3O4B3O4E3O483O3V3CBQ3O4G3O4J3O4A3O4K3O4C3O4F3F4H3O483O4I3O4L3O4S3LV43O4O3O4U31ZD24R3NM53O4Y326G3O4X3O523O513O5437OA3O533O563O553O503O583O5B3O5A3O5D3O573O5E3O593O5F3O5I3O5H3O5K3O5C3O5J3O5M3O5L3O5G3O5O3LOL3O5Q3O5T3O573EUK3O5V3ASM3O5N3O5A3O5W3O5P3O5Z3O633O623O553O613O5R3O673O5U3O653LV43O6A3O6C31ZD24O3NM53O6G2CJ3O6F3O6K3O6J3O6M2RC3O6L3O6O3O6N3O6I3O6Q3O6T3O6S3O6V3O6P3O6W3O6R3O6X3O703O6Z3O723O6U3O713O743O733O6Y3O763LOL3O783O7B3O6P3DA13O7D2CB3O753O7C3O773O7H3O7K3O7J3FR13O7L3O793O7I3O6T3LSJ3O7Q3O7S31ZD24P3NM53O7W31CX3O7V3O803O7Z3O822FJ3O813O843O833O7Y3O863O893O883O8B3O853O8C3O873O8D3O8G3O8F3O8I3O8A3O8H3O8K3O8J3O8E3O8M3LOL3O8O3O8R3O853GFL3O8L3O8S3G4Z3O8V3O8Y3O8N3O8Z3O893O8U3O903O943O8P3O883LSJ3O8W3LV43O8832T43G8Z31ZD3O9C2I63O9E3O9H310I3O9I3O9G3O9J3O9M3O9L3O9O3O9F3O9Q3O9K3O9R3O9N3O9T3O9P3O9S3O9X3O9U3O9Y3O9W3O9Z3OA23OA13OA437363O9V3OA73OA03OA83OA33OAA3OA43OAC3OAC3G9R3OA03OAG3OAB3OA93OAK3LV63OAF3LSH3O9F25B31ZD3OAQ3FH531ZD32B13L8J3OAU31ZD23O3OAY3OB02753OAZ2753LN23OB43LN13OB73OB63OB92HX3OB83OBB29Q31ZD32AQ3MRZ3OBF3OBI3HEG31ZD24E3OBL3OBN3OBK3OBH3OBP31W531ZD24D3NM53OBU2753OBW3OBS3OBX3OBT3OC13OC03OC33OBZ3OC53OBY3OC73OC23OC63OC93OC83OC43OCC3OCA3OCD3OCB3OCH3OCG3OCJ3OCF3OCL3OCE3OBY37363OCN3OCI3OC52AK3OCE3OCT3OCR3OCQ3OCK3OCX3OCM3OCW3OC93OCV3OCK3OD33OD03OCY3NM53LPW3OCZ3LSJ3OCO2IF3OD13OD73ODF3OD63ODH3OCZ3ODJ3ODE3ODI3ODL3ODK3ODG3ODC2DK3ODO3OCL3OD53ODQ3ODM3ODP3ODN3ODY3ODX3OE03ODW3LV43ODA3LSH3OBY24631ZD3OE72753OE93OC524431ZD3OED2DK3OEF3MUK3OEE3OEJ3MUI3OEK3OEI3OEL3OEO3OEN3OEQ3OEH3OES3OEM3OET3OEP3OEV3OER3OEU3OEZ3OEW3OF03OEY3OF13OF43OF33OF63OEH37363OEX3OFA3OF23OFB3OF53OFD3OF73OFC3OF22AK3OFF3OFJ3OFI2793OFF3OFO3OD83LPT3OFK3LSH3OF83OFN3OFH3OFE3OFW3OFG3OFX3OG03OFZ3OG23OFP3OG13OG43OG33OEM3OF93OFY3OEX3OFL3OEP3OGC3OG73OG53OGA3OFM3OG13OGE3OGB3OFV3OGG3OF53LSJ3OFS3LRB3OEH32XN3FRJ31ZD3OGT3B3W3OEM23231ZD3OGZ2DK3OH126M3OH33OH53OH03OH73J4E3OH83OH43OHA3OH63OH93OHE3OHB3OHF3OHD3OHG3OHJ3OHI3OHL3OHC3OHN3OHH3OHO3OHK3OHQ3OHM3OHF37363OHT3OHR3OHP3OHY3OHX3OHJ2AK3OHW3OI33OHS3OHA3OI23OI53OHZ3OI73OHZ3OI43LV63OHW3LSJ3OH33OIA3OI03OIC3OII3OI83OIK3OIB3OIL3OIJ3OIP3OIO3OIR3OI92XK3OIQ3OIN3OIW3OI13MUS3OIS3OIM3OJ13OIH3OHI3OJ33OI63OIZ3OIX3OIE3LSH3OJ93LRB3OH333LA26M3OJE2AK3OJE3OJI31ZD3OJJ2753OJL3OJF3OJK3OJP3OJM3OJQ3OJO3OJR3OJU3OJT3OJW3OJN3OJY3OJS3OJZ3OJV3OK13OJX3OK03OK53OK23OK63OJW37363OK33OK33OJH3OK83OKC2793OKB3OKE3OKI3OJV3OKD3OK73OKM3OK93OKG3OKJ3OK43OKK3LSH3OKF3LRB3OJG3OKP3OKN3OKH3OKY3OKQ3OKZ3OKR3OL33OL23OL53OL13OL73OL03LOO3OL63OKS3OL93OL43OL83OLE3OLD3OKW3OLH3OK83OKL3OLG3OLM3LSJ3OKU3LR822531ZD3OLR3OJV2223NM53OLV36XL31ZD3OLX26M3OM03OM23OLZ3OM43OLY3OM63OM13OM53OM83OM73OM33OMB3OM93OMC3OMA3OMG3OMF3OMI3OME3OMK3OMD3OMM3OMH3OML3OMG37363OMJ3OMN3OM02AK3OMS3OMO3OM73OMV3OMP3OMW3ON13OM93OMZ3OMN3ON43OMX3ON73ON23OMY3LSH3OMW3LSJ22331ZD2213ONF31ZD330G3N0V31ZD21Z3ONL31ZD21W31ZD21U3ONQ3NM53ONR2753ONU3BWM3ONS3ONV3ONY3ONX3ONZ3OO23OO13OO43ONW3OO63OO03OO73OO33OO93OO53OO83OOD3OOA3OOE3OOC3OOF3OOI3OOH3OOK3ONW37363OOB3OOO3OO02AK3OOP3OOJ3OOM2793OOS3OOL3OOG3OOW3OOR3OOG3OP03OOT3OOY3OP43LV63OOZ3LSH3OOU3OP33OPA3OOX3OPB3OOW3OPE3OP53OPC3OPH3OPF3OPD3OPG3OOB3OON3OPL3OOQ3OOV3OPP3OPK3OPS3OPI3OPO3OOJ3OP23OPU3OPT3OP93LR83OP73LRB3ONW21S31ZD3OQ53OO322M31ZD3OQ92DK3OQB35QU3OQA3OQF3N3C3OQG3OQE3OQH3OQK3OQJ3OQM3OQD3OQO3OQI3OQP3OQL3OQR3OQN3OQQ3OQV3OQS3OQW3OQU3OQX3OR03OQZ3OR23OQD37363OQT3OR63OQY3OR433JM3OR83ORB3OR13OR73ORD3NM53ORE2AW3ORH2AK3ORH3ORL3OFQ3LOO3ORJ3LSH3OR93ORF3ORS3OR33ORC3ORU3ORT3ORM3ORX3ORV3ORY3ORW3OS23OQT3OR53OS03OQI3ORK3OS73ORA3ORT3OS83ORZ3OSD3OS33OS63OSE3ORP3LRB3OSI3LR83OQT22K3OQI22I31ZD3OSP3N8V3NM53OSR3EQB3OSQ3OSW3OSS3OSY3OSV3OSZ3OSU3OT23OSX3OT03OT53OT33OT13OT43OT73OT63OT93OTC3OT83OTE3OTB3OTF3OTA3OTI3OT437363OTJ3OTH3OTD3OTG3OTP3N9N3OTO3OTM3OTP3OTT3OTR3OTF3OTW3OTQ31Z83OTS3OU13N9Y3OTO3NA03OTO22F3OT422D31ZD3OU93NDM3NM53OUB3FUR3OUA3OUG3OUC3OUI3OUF3OUJ3OUE3OUM3OUH3OUK3OUP3OUN3OUL3OUO3OUR3OUQ3OUT3OUW3OUS3OUY3OUV3OUZ3OUU3OV23OUO37363OV33OV13OUX3OV03OV93A4K3OV83OV63OV93OVD3OVD3OVB3OUZ3OVH3OVE3OVC3ORN3LOL3OVG3LSH3OVD2293OUO21B31ZD3OVT3NE53NM53OVV3F3I3OVU3OW03OVW3OW23OVZ3OW33OVY3OW63OW13OW43OW93OW73OW53OW83OWB3OWA3OWD3OWG3OWC3OWI3OWF3OWJ3OWE3OWM3OW837363OWN3OWL3OVX3OWH3OWK3OWU3OWQ3OWV3OWT3OWW3OWE3NF23OWT3OX13OWR3OX43LV43OWW3NFF3OWT333Y3OW321531ZD3OXC3NG33NM53OXE3HA73OXD3OXJ3OXF3OXL3OXI3OXM3OXH3OXP3OXK3OXN3OXS3OXQ3OXO3OXR3OXU3OXT3OXW3OXZ3OXV3OY13OXY3OY23OXX3OY53OXR37363OY63OY43OY03OY33OYC3OY93OYD3OYB3OYE2AK3OYH2793OYE3OYL3OYG3OVM3OY83OYB3LSJ3OYE1Z31ZD3OYT32JD3OXR333F2753OYY3IMZ3NM53OZ03OZ331ZD3OZ43OYZ3OZ53OZ83OZ73OZA3OZ13OZB3OZ63OZC3OZF3OZE3OZH3OZ93OZG3OZJ3OZI3OZD3OZL3OZO3OZN3OZQ3OZK3OZB37363OZM3OZS3OZW3OZ02AK3OZV3P003OZP3OZX3P023P013OZR3P053P033OZT3LSH3OZV3LSJ3OZV334A2753P0E334931ZD3P0G3P0G3OZ01631ZD173P0N3P0P2DK3P0O3A623P0Q26M3P0S3P0V3P0U3P0W3P0Z3P0Y3P113P0T3P133P0X3P143P103P163P123P153P1A3P173P1B3P193P1C3P1F3P1E3P1937363P1G3P183P1L3P1A2AK3P1K3P1D3P1M3P1P3P1S3P1H3P1R3P1U3P1Q3P1X3P0W3LSJ3P1P3P203P191M31ZD3P243EC63P253P0U1N31ZD3P2A35V83NM53P2C26M3P2F3P2H3P2B3P2J3P2D3P2L3P2G3P2K3P2N3P2M3P2I3P2Q3P2O3P2R3P2P3P2V3P2U3P2X3P2T3P2Z3P2S3P313P2W3P303P333P2M37363P2Y3P323P2F2AK3P383P353P3D3P3C3P3F3P343P3G2DK3P3I3P3E3P3H3OYO2XK3P3C3LSJ3P2F1K31ZD3P3S2753P3U2AW3P3W3P3Y3P3T3P403P3V3P4126M3P3Z3P423P463P443P433P453P483P473P4A3P4D3P493P4F3P4C3P4G3P4B3P4J3P4E3P4H3P4M3P4K3OVM3P4L3P4O3P472AK3P4Q3P4Q3P4T3P4I3P4U3P4X3P4Z3P4S2793P4Y3P4N3P533LV43P4V3LSH3P3W1I31ZD3P5A2753P5C2AW3P5E3P5G3P5B3P5I3P5D3P5J34KE3P5L3P5H3P5K3P5P3P5M3P5Q3P5O3P5R3P5U3P5T3P5W3P5N3P5Y3P5S3P5Z3P5V3P613P5X3P603LOO3P643P623P653P683P6A3P673P6C3P633P613GH23P6F369G3P6H3P693P6D3P5Q3LSJ3P673P6N31ZD1J3NM53P6R3H803P6Q3P6V3P6U3P6X32LN3P6W3P6Z3P6Y3P6T3P713P743P733P763P703P773P723P783P7B3P7A3P7D3P753P7C3P7F3P7E3P793P7H3LOL3P7J3P7M3P7G3P732AK3P7N3P7I3P7O3P7T3P7S3P7V2AW3P7R3P7X3P7U3P7K3P7P3LSH3P7Y3LSJ3P731G31ZD1H3LN52AV26N3P8B2DB3P8C369S3P8D3P8G3P8I321P3P8H3P8K3P8J3P8F3P8M3P8P3P8O3P8R3P8L3P8S3P8N3P8T3P8W3P8V3P8Y3P8Q3P8X3P903P8Z3P8U3P923P8P37363P943P983P913P8O2AK3P993P8J3P9C3P9A3P9G3P933P8L3P9F3P8Z3P9K3P953P9M3P9D3P953P9B3LSH3P9P3LSJ3P8O26K2DB3P9W32F12AV3P9Y2XL3PA03PA33P9Z3PA53PA23PA63PA13PA93PA43PA73PAC3PAA3PA83PAB3PAE3PAD3PAG3PAJ3PAF3PAL3PAI3PAM3PAH3PAH37363PAP3PAK3PAC31ZK3PAT3PAS34083PAW3PAZ3PAO3PB03PAN3PB33PAV3PB13PB63LV43PAX3PB82AV31HX2763PBB3PBE3PBD3PBG3LNL3PBF322Z2AV26I3PBL3PBN327G3PBO3PBK3PBP3LPY2AV26J3PBU3PBW3PBT3PBY32AK2AV32ZE389U3PC13PC43PC33PC631ZW2AV26H3PC93PCB3LTK2AV26E340W2DB26F3PCG3IWF3PCJ32O43PCL3PCI3PCK3PCP3PCM3PCQ3PCO3PCR3PCU3PCT3PCW3PCN3PCY3PCS3PCZ3PCV3PD13PCX3PD03PD53PD23PD63PD43LOL3PD93PDB3PD33PCH3PDD2DK3PDC3PD83PDF3PD7340T3PD1336M3PDJ3PDH3PDK3PCT3LSJ3PDP3PDS320D32BE32S9352N3PDY32UJ32F23PE13PE032KE32VD3PE532VF3PE6328I3PE826O3PEA3PEC32FA3PED3PE93PEE3PEH3PEG3PEJ3PEB3PEI3PEL3PEK3PEF3PEN3PEQ3PEP3PES3PEM3PET3PEO3PEI3M4F3PEV3PER3PE73PEX32NE3PEZ3PF43PEU3PF63PEW32N33PF53PF83PF03PFB3PE83M4X3PEF3PFF3PF13PFD3PF73PFC3PFL3PFA3PFM3PFK3PFN3PFQ3PFP3PFS3PFJ3PEJ3PEY3PFT3PFC33AI3PFE3PF33PFX3PFR3PFU3PFY3PG13PG43PG03PG23PFT3PFH3PF83PGB25Q35593PE825O38NF3PGI37J638V33A6I2AV25K3PGN3PGP36A13AJC2AV25I3PGT3BI237YB3PGX38CY3PGY37XW3PH025H3PH23PH43PGZ3PH637KH3PH53PH83PH73PH33PHB3PH93PHC3PHA3PHG3PHF3PHI3PHE3PHK3PHD3PHM3PHH3PHL3PHG3MDV3PHP3PHJ37XK3PH038CT3PHP3PHW3PHN3PHT3PHO3PHZ3PHV3BPD3PHS3PI33PI23PI73PHQ3MF43PH93MEC3PI539GI2AV2673PIF3PH93PIG38JV38Q93PIL38QD3PIM38Q43PIO2DS3PIK3PIS3PIP3PIT3PIR3PIU3PIX3PIW3PIZ3PIQ3PJ13PIV3PJ23PIY3PJ43PJ03PJ33PJ83PJ53PJ93PJ73PJA3LOL3PJC3PJF3PIO2B93PJ63PJ43PJI3PJB3PJJ3PJM3PJO3PIX3PJL3PJD3PJG3PJP3PIW3LSJ3PJT3LV43PIW2623A923PK12BD3PK238T33PK42EB34N72DB2EH3PK83PKB38K73B7J3PKE3PKC3PKA3PKD3PKG3PKF3PKI3PKL3PKH3PKN3PKK3PKO3PKJ3PKR3PKM3PKP3PKU3PKS3PKQ3PKT3PKW3PKV3LOL3PKX3PL23PKK3AH03PL433RD3PL03PL33PKZ3PLA3PKY3PKL3PL53PLB3PKX3PLE3PLC3PL93PLD3LSH3PLJ3LSJ3PKH25Y3HY43BKR3BRW3PLS32TU2EC3PLT33MS3PLW25U3PLY3PM03PLU3PM23PLX3PM33PLZ3PM53PM13PM43PM93PM63PMA3PM83PMB3PME3PMD3PMG3PM73PMI3PMC3PM337363PMF3PMJ3PMN3BKE3PMH3PMK3PMS3PMP3PMU3PMR3PMV3PML322R3PMW3PN03PMY3LRB3PMX3NTC3PM82Y43BEN3CSI3PLW24V3J762DB3PNB3DUB3PNC3PNF3PNH35W23PNG3PNJ3PNI3PNE3PNL3PNO3PNN3PNQ3PNK3PNR3PNM3PNS3PNV3PNU3PNX3PNP3PNW3PNZ3PNY3PNT3PO13PNO3MMC3PO03PO33PNN3ESG3PNK3POA3PO23PND3PO73POF3POD3PNI3POC3PO43POJ3PO33POL3POG3POK3MMQ3PO03MLW3POE3POH3PO43PO83POO3POW3POU3POY3POV3POX3PP23POZ3PP33PO53MLL3PP53PO93FAM3PP83POT3PP13PP43PPE3POP3POU3PON3PPF3PP93LRB3PP03POS2F03ET13PPP3PNI24R3FR42DB3PPS326G3PPT3PPW3PPY37OA3PPX3PQ03PPZ3PPV3PQ23PQ53PQ43PQ73PQ13PQ83PQ33PQ93PQC3PQB3PQE3PQ63PQD3PQG3PQF3PQA3PQI3PQ537363PQK3PQO3PQ13EUK3PQQ3ASM3PQH3PQP3PQJ3PQU3PQX3F4R3PQH3PQR3PQW3PR23PQL3PQ43LSJ3PQV3O6C3PPU3PQY3PR43PRA3PR73PRD3PRC3PRF3PR33PRE3PRH3PRG3PQM3MMY3PRK3PR53PQT3PPZ3PR13PRB3PQZ3PRJ3PRU3PRS3PRW3PRI3PRX3PQS3LRB3PR73PR63G3A3PS43G4Z3PS52FJ3PS724P3PS93PSB31CX3PSC3PS83PSD3PSG3PSF3PSI3PSA3PSH3PSK3PSJ3PSE3PSM3PSP3PSO3PSR3PSL3PSS3PSN3PSH37363PSQ3PST3PSZ3PSV3PT13PSY3G2K3PSU3PT33PT63PSE3GFL3PT53PTA3PT03PT33O983PT83LSH3PSM3PT93PTC3PTB3PT23PTK3PT73PTJ3PTO3PTL3PTP3PTN3PTQ3PTT3PTD2XK3PTS3PTS3PTI3PSI3PTZ3PTX3PTM3PU33PTP3PU13PS73PU63PTR3PU73PTG3PTF3LRB24N3PS733AS2FT2AV24I3PUI3PUK311H3IVT2AV33CF2752ZO3PUQ2AV3PUR328E2AV2522AV33DI33DN2AV23Y2AV2B72753PV43H113PV12AV23N2AV24D2AV24B3PVD2AV2333PVG3PVI2753PVE3KUA2AV33K53PVM3PVP2AW3PVO33K43PVN3PVU3PVQ3PVS3PVX3PVV3PVT3PVW3PVZ3PVY3PW13PW43PW03PW63PW33PW73PW23PWA3PW53PW83PWD3PWB3PW93PVQ37363PWE3PWC2DB3PWJ3PWG3PW62AK3PWM3PWQ3PWF3PWR3PWK3PWH3CP73PWS3PWX3LV63PWM3LSJ3PWT32CG2AV22Z3PX43PX627522W2AV3PX927522X2AV22U3PXE3PXG2753PXF27522V2AV22Q3PXM3PXO3MWH3PXP3MWJ2AV22R3PXT3PXV2753PXU2DK3PXY26M3PY03PY23PXW3PY13PY43PY33PXX3PY63PY93PY83PYB3PY53PYC3PY73PYD3PYG3PYF3PYI3PYA3PYH3PYK3PYJ3PYE3PYM2DB2AK3PYN3PYL3PYO3PYC3PYR3PYP3PXZ3PYX3PYT3PZ03PYS3PYW3PYU2AW3PYS3PZ63PYZ3LSJ3PZ23LSH3PZ73PZ43PY022O2AV3PZF2753PZH26M3PZJ22P2AV3PZM3MWP3PZN2DB3PZO3CDQ3PZQ3PZP3PZV3PZT3PZW3PZS3PZZ3PZU3PZX3Q023Q003PZY3Q013Q043Q033Q063Q093Q053Q0B3Q083Q0C3Q073Q0F3Q0A3MXL3Q0H3Q0G2DK3Q0K3Q0D3Q0N3Q0M3Q0P3Q0J3Q0R3Q0L3Q0H3MWU3Q0S3Q0O3PYQ3LPT3Q0M3MY42AV23I2DB3Q132753Q1526M3Q172AK3Q173Q1B3Q123Q1D3PXQ3K2C2AV23E3Q1H3Q1J2753Q1I3Q1L3Q1K3E752AV23C3Q1Q2AV23D3Q1T2AV33IW33KA3Q1W3Q1Z2753Q1U275313G3Q233PIF3LYJ2HW2HY2I031V331OE2WU31UR31PC310I2I82IA27L26L3JVJ2IG2II2IK2IM2IO2IQ2IS2IU2IW2IY2J02J22J42J62J82JA2JC31ST31SV31SX31SZ31T126B24421B21N1931AL23223425H22X24W21Z1Q24221D2542K52K72K923024J22925X23724G22B26H2201P22B23321426N22T21Y2171P25L26X3OSP21Y31ZM31V231RX28R31W431W62WU31W924C3Q0Y2PU2PW2DB2Y331WB31WD31WF31WH31WJ31WL31WN31WP31WR31WT31WV31WX31WZ31X131X331X531X731X931XB31XD31XF31XH31XJ31XL31XN31XP31XR31XT31XV31XX31XZ31Y131Y331Y531Y731Y931YB31YD31YF31YH31YJ31YL31YN31YP31YR31YT31YV31YX31YZ31Z131Z331LU35Z33LCF2703KNG3KVY38MU2B8321337MX2CA31CW347M3LT935I53PC1336I3LRF3LRE32AY382I32C932JT34PW33L134112B033Y633L1320H32A132BG320L3484348B322U32ZV31FI2CI31L53EWN321V35JZ32J636M734KT2GL32LA29C2CR31RS2YS33DX2CR329P31L53C1M331734E3331732S738WE2NU2RB32D337AI32U02GB38MF33MZ2HE36H6339G34KD3KWC32CF2HE323R313O32BA32TM347634XA340Y2SN3Q6O34EQ2AW315732UV2MQ32TD35WJ337M36HT340Y323N2DK34KQ324736XU2SN34XM345H32BK331T315733LJ316Q32L62AV34FL3Q8L33NE34FL32BM312M32DD32E52LX32Q63ISZ3235329O32A33BDI32HU3GFU32PW29Y3Q9P32J032A33Q9P3264344J3LM2325Z3143343H32G031BT3DJM34AS3DJM344R354A324S326P328U328X326V32NI321U34S632I2334W3LM232EE33GA324436DZ315732HA31ZQ3HLY345C31573HUH33K23GYG32CI34R833J229Y325S34XS32A33QB13G5U32HN3Q9X3Q9Q3I1E344A32HU32ZK328G3QA832OT32FV328X321K32F83LM231AR34RY2QO32L433AF328D3QAU321V2BO32ND341P363I3G6E38343LLF33FS2U6329K33KZ322C322E2GB34GG32IG2CA32A1321R28T32JB329A345A32A331WC3KXF28T3KVW347A3BHH38E33KVW3IP838MU3O9K31ZJ3LCF32WY3QCU37P737OZ37DG3QCY35DM3QCV3QCZ3QD13QD03QCW3QD43QD23QD53QD33QD93QD83QDB3QD73QDD3QD63QDF3QDA3QDE3QD337363QDH3QDG2XK3QDL3QDO3QDC3QDM3QDI3QDQ3QDL37EV3QDS3QDW3QDR3LV43QDU3LSH3QDP376F2XK31M53Q282KM3Q2A3Q4F3Q2D2WX31DE2I72I92IB26L38UC3Q2M31SD3Q2P31SG3Q2S31SJ3Q2V31SM3Q2Y31SP3Q3131SS31SU31SW31SY31T031T231T431T631T831TA31TC31TE31TG31TI31TK31TM31TO31TQ31TS31TU31TW31TY31U031U231U41M1326626Y21T33OG2AK3Q4E2I43Q4H24B31W739YP2A13Q4L3PAR2AW2PV3Q663KY825T3Q4R32MK3Q4T31WI31WK31WM31WO31WQ31WS31WU31WW31WY31X031X231X431X631X831XA31XC31XE31XG31XI31XK31XM31XO31XQ31XS31XU31XW31XY31Y031Y231Y431Y631Y831YA31YC31YE31YG31YI31YK31YM31YO31YQ31YS31YU31YW31YY31Z031Z23D3R31Z43PYQ24U3LCM347P3LN831ZB32ED3Q6E32353Q6G32GX320932AY2FD3Q6L3Q6O347X2DK3QHZ32BM3Q6S32BQ29Y3Q6U335O3Q6W33693Q6Y33RH3Q7034KG31L5342B337O3Q75329B3Q7737N03Q7A321R3Q7C32T83Q7E33FE3Q7G34KV3Q7I337B3Q7L322F3Q7N322E3Q7P32LL358H34F933WS323R322S3Q7W33113Q7Z33992GB37UY3Q83322F29C33G13Q8732BT34KD3Q8B32Z637AT32B637NB3Q8H3Q6M35QE32UV3Q8M37NG3Q8P37H33Q8R3Q913Q8T359339E734A6316Q34A63Q8Z32MT342R331V3Q94343E3Q9736YF339V3Q9933G631573Q9D33163745348432883Q9R3Q9K3Q9O325O325F3QKL28Z3Q9T3G3E32OD3QB732643QA0329B33B831BT3CGK358C32A33QL13JXH32HW346D35FV32I03QAB35HS3QAE33C137BQ33VD32GQ3QAJ324B3QAL33LB3QAN33473QAQ32H032MB3QAU3QKS3FXY382331BA3QKK3JCF28Z3Q9L2OZ3QB632Q53QB83JHA345G329033W43QBE32I03QBG32XX3QBJ334V3QBM32IG38G135OU3QBR321R3QBT32J62MQ32523G6E382E3QBZ32BK3QC1337I341W32TL3QC632CI3QC932J63QCC33DF3QCF3LGE327S37MR3QCJ2AK3QCL387P347E31ZK3HUA3QCQ3O9N31ZJ3QHL36523QNG3F8A39W13QNH37XN3QNL39GL3QNK3QNN3F8A3QNO3QNR3QNQ3QNT3QNM3QNS3QNV3QNU3QNP3QNX3QO03QNZ3QO23QNW3LOL3QO43QO63QNY3QO43QNJ3QO83QOB3QO13QO73QOD3QOC3QO33QNI3LSH3QO93QOJ3QOG39XK32ZV2762FI3Q2931OJ2I42FD3Q2E2I53QED3Q2I2IC3L0P3QEI3Q2O31SF3Q2R31SI3Q2U31SL3Q2X31SO3Q3031SR3Q333QEV3Q363QEY31T531T731T931TB31TD31TF31TH31TJ31TL31TN31TP31TR31TT31TV31TX31TZ31U131U31F1R1P2DZ3QFO2RB3QOS3Q2C3QFR3QFT2EO3QFV3Q4M3QFY3Q4O2DK3Q4Q3L4131WE31WG3QG63Q4W3QG93Q4Z3QGC3Q523QGF3Q553QGI3Q583QGL3Q5B3QGO3Q5E3QGR3Q5H3QGU3Q5K3QGX3Q5N3QH03Q5Q3QH33Q5T3QH63Q5W3QH93Q5Z3QHC3Q623QHF3Q653QHJ3Q683Q6A321I3EHV32BT3Q6F32C93Q6I3LSM3QHW3LRH3QHY3QJP3Q6P33U93QI332C93QI534PY3QI733XI33YD33RH358V3LW6321I3QIE321I2GB3QIH2NU3QIJ32ZI3QIL330T320F37GP321932203QIR34913QIT3Q7K26N3Q7M32TL3QIZ32ZG3Q7S352H331R3QJ5336I3Q7Y331633T63Q8132DK329Q3Q853QJF329Q3Q8836XV331R3Q8C37AO3QJM35WJ3QJO3Q8J35AJ3QJS37NB3QJU34XA3QJW35EX3QJY32K33Q8W32443QK3359V36HT346U33G63Q9532E83Q983Q9B3QTX3QKF32C93Q9E321I31EM3Q9H32HC3Q9J3QLX35YJ3235328D3H293Q9I39BY3QKR38KK3QU932A33H293Q9W3QM13QKW324U3Q7W325731BT320N33VU3DPH3QBD36IA3QL932MB3QAC32GK34YK3QLD33W83QAI35AG324B321U316Q3QLL3QAP38XG32X232MB3IHI3QLR3FMI3QLT33CJ29Y328F3QB22793QVI3QUJ34363QLV3QBC32453DEN3QL63QM7326P3QM934IL3QMB346A3QMD338K3QBP33AV32CI3QMJ32T83QML3AV23QBY3LRH3QC033JZ3QC33QMU32GK32913QMX32T83QMZ335N3QN13L8X3QCI327S2753QN739IC3QCO3QNB34003QND29639G33A2I3QWX3C9Y38XH38XF3QX13QWW3QX03QX33QX23QWY3QX63QX43QX73QX53QXB3QXA3QXD3QX93QXF3QX83QXH3QXC3QXG3QXJ3NNJ3QXJ3QXI3D1X3QWY39RN3QXE3QXO3QXK3QXS3QXN3QXW3QXV3QXY3QXU3QWZ3LPW3QXT3NO03QXX3AZV3QOO3LNL3QOQ3QE73QQ428R3QOU3QEB312N3Q2H3QEF3L8R3QP131SE3Q2Q31SH3Q2T31SK3Q2W31SN3Q2Z31SQ3Q323QEU3Q353QEX31T33QPG3QF13QPJ3QF43QPM3QF73QPP3QFA3QPS3QFD3QPV3QFG3QPY3QQ02591S25621T26R24S23S31NX3QQ22IF3Q2B3Q4G2IF3QFS3Q4J3QQ93QFX2AK3QFZ3Q4P3QG23QQF3QG53Q4V3QG83Q4Y3QGB3Q513QGE3Q543QGH3Q573QGK3Q5A3QGN3Q5D3QGQ3Q5G3QGT3Q5J3QGW3Q5M3QGZ3Q5P3QH23Q5S3QH53Q5V3QH83Q5Y3QHB3Q613QHE3Q643QHH3QG032BO3ACS3Q693LN53QRH3QHP3QNC3QHS32T13QHU2783QRO3QRS3Q6J3QRQ3Q6Q336H33L43QRW33S43Q6V3QRZ3QIA3QS23LW73QS43Q733QIG33ER3QSX3QIK32CI3QIN32IG3QIP338P3QSI330S3QSK3R1X3QIW3QSO320Y3QSQ35933QSS3QJ43QKY3QJ73QSX32312GB38MK3QJC3QT2323E3QJG32133QJI33M03Q8D2BO3Q8F322A3QTC2DK3Q8K33G63Q8N34KU3QJV36TA2SN3QTL3Q8V36XU3QK22DK3QK42CF3QK63Q9337H4324U3QKA34FI3R2Y3QKC3EI13QU03QKH3Q9G3QVG3G3F3QVJ3GFR35H629Y3IT13QVD3IT1377D3QM034363QUL3QA13QUO3BNT3QUR3R3V3QM63QUU3QAA3QUW3QLB32GK3QAF324U3QAH32VE3QLH3QVZ3QLK3R2Y3QV838XP3GH43QAT32353QVD3QAU3ACL3QAX343I3QLV37VA3QU7328D3R4N32Q33QB73QUC3QVP3QM43QB9378A3QVS3R3Z33J13QBH346B3QBK3QLI32IO3QBO32F43R4J32913QW432IG3QW63EPQ32823QW93QMQ3QWB320Y3QC432BN3QC7321V3QWG32IG3QWI33QT3QWK3L943QWM3QCK3QU934JL3QWR3I1W38M53O9F31ZJ3ACS387O3R633A2V39GK39AG3R6738XQ3R643R683R6A3R693R653R6D3R6B3R6E3R6C3R6I3R6H3R6K3R6G3R6M3R6F3R6O3R6J3R6N3R6C37363R6Q3R6P3R6L3AEQ3R6R3R6W3R6U3R703R6W38XI3R6Y3R6N3R733R6V3R743LV43R6U3LSJ3R713EDT3LR93LNC2792Y331273QHJ2XM3QG01U229324A37TS2DB255347F32183P9B37TG2CA340933Q42SN3QHS34WI38Y83GDD3R7W3LNN25K3R7Z3R223R14344C327S3J733LO637TK3R8035OU3Q7Q36BJ3LNN3KVW3BH9320931CW27I33L43Q6Q2AW2CA3Q6O3LO63R8I31ZI33YY347L37363LQ23LNK3R8R3LOO31ZJ31BA38ZJ3R963A4B3C3P3R993B2P39C23R9C3R983B2P3AAK3R9G3GP93C4D3AAK3QL33KWM3R9L3CGD2DK3R5X2753LGO312N3R0Z382U3BTG3FAU321P31ZO31FI31V831Q823P23X2AF2OX24C384K31ZV3R7X35IK3P8F34WI37TK2AJ38UG35OU3RAG3R8I2DB321R3R8U3QCB3QWN3NDE33ZS33203P9R3NIK3RAA3BSO337O3R8132A33BGO3DPQ3R8B34EU3LRH3205327J33E532JJ3QWT3R8237JY3RB13L5732AN3RAA3LN23L573J732DB3IUN3R8U32GX3NM53RAQ2AW3Q0Y3LN832503JVJ3RBS3KNN34PL32813RBW3RBV3RBY3LGQ3RC03L0Q2793L383RC42XK3L383L8R3RC83QN233DN3RCA34P83RCC3LH033EJ2B82S03RA12ER3RA423M3RA62SF2SH2SJ2SL37VH31ZV3R8W3RAB3R8W32Z433E52CA37MW3QUG3LQ332ZA33RZ3NIK3R8U3DMG3QHU3LQ53NM532AN3R923R8T2DK3R8C3QWN33B834U7382J36PD3RB13R8432X0340H3RAD3L6834033GD93QWN32D328T2CF32203R8432Z43QC73QTZ31ZP39UH3RD13RDI3RD535I532Z52CA3GD836BA3RE433AL3RE62XE3RE834SY3REC35BA3R5M32MT37VK2CA31ZM3B3H3RBK387P3LR23RDA3LO03FUM3RDD2AW3RDF3PVR3R8Y3LQU3RAO3RB33LNH3QRR3REQ3LN8347V3LJ63RF92XK3LJ63QHL3RFD32X03RFF32TH27J3RFI31UQ2903RFL316328A3RFO3RFN3RFQ2AW3I973EEE2793LIT2AW3RFW3RFY3RFV3RG03OB23DHC3RG33PV53RG43I8Y3RG529Q2CS3RGA3RG93RGC2LY3MS231ZJ2LX3Q4D3QQ63QZQ2A23QQA3QZT3QQC2Y23QZW3Q4S3QQH3QZZ3Q4X3QGA3Q503QGD3Q533QGG3Q563QGJ3Q593QGM3Q5C3QGP3Q5F3QGS3Q5I3QGV3Q5L3QGY3Q5O3QH13Q5R3QH43Q5U3QH73Q5X3QHA3Q603QHD3Q633QHG2CG3QHI2XK24U3KTS26K3MS43M3L33U93RAU3R9132BT3REN32MT32093213347M31ZM3LQ231CW3R16321I3201321I33Y132WZ27837N432IG28931ZQ34PH3484341S337A349127I29Y2BC2YS27I32JW32TL2783RAZ32D327831DE32D332JL38WE32BA32D33R1E342E2B03QMO34Y835K432AY33G132S537TV33EM347C35K1337U3NM52NU3R8U33N832KI342U2HE342U2NU37SL34QB32B7321U2CR3R8U32JG2DK3Q8A3EHM33RX37AC32MT2CR27I32192HE32EJ313O36M83Q893RJZ36XU36XX34EJ3Q7X34XA2FD32Q628T39H02HE328D39H0328D3FAW3RKK395Z3255328D3B0I3RKQ32HN2SN342A32Q331AR313O3QI536LQ3BKW32EN328D3RL6344R342P2U6326P33MB2SN32GF34FL32JB359R36ZW339H29Y361Q32TM32JB313O33A52HE318K31ZQ3LMS31ZW31EM2HE373A3RKU32A33RLZ3R1T32N03RKS3HOH3RKN3DF63REC37UE32OD3RKZ335O328828T3QB12SN3EWG3QL63RLB32OT31AR34EW32XX32DU3RLM31AR35ET2FS37GP32MO328D3RM236BN36TA37AF331T3G6E3QVI32AY2GB27I31DT329K2AJ31L52GB329P2B03Q7A3RBF3I053R9U3L8Y3RFP3LIV3RFR3RFT3RNM3RNJ3RNN3RNL3RNO3RNR3RNQ3RNT3RNK3RNV3RNP3RNW3RNS3RNY3RNU3RNX3RO23RNZ3RO33LOO3RO53RO03RNV2AK3RNX3ROA3RO43ROD3RO13ROE3RO83RO73ROC3ROF3ROK3ROH3M3L3RO73ROB31ZN31K03LNL2XE31RW2982IC2B82562302OC3IXG22S2213Q4D3QQ33QZM3RP03Q4I31W83QZR2XK3Q4N3R7L3RGQ3QG43RGS3QG73RGU3QQL3R033RGY3QQP3R073RH23QQT3R0B3RH63QQX3R0F3RHA3QR13R0J3RHE3QR53R0N3RHI3QR93R0R3RHM3QRD3RHQ3NIG37TK2753A183LDN32A33RQ939PO3QWT3OIZ3L613QHO3Q6B3LNN2DB27I31W43PBU33XH3LQ33R903R8O33U932AC3RIB33XH321333XF27834803RQV3LTV340U3LV832BQ29C2RO3Q723QIF32BN2FI2CI29C38MB321V2CR32JB3QIM331P32202CR32LA2892NU2V62YS32YS2NU329P3Q8R32ZG348632D332JZ38WE3RN533112NU3RRA323131L5323433MZ37SJ33RH33G133LV31L5321333LV320F2HE3R2M313O3Q6O2BO3Q8D2MQ3R90348W36MQ35W82BO32L937AV337735WJ3Q8D3QK62AW3R2Q39E73R2S3QTH322A28932433RMR3R2Y32402AV32DU3RSX37IN32DU32BM316Q3QIH312M2RO32Q627Y3IT1338W32A33R3O3QW235H627Y3BY63R3I3IZN35ZS32HN38MQ32BN3QVM32BN33B831EM3K453QVQ33BD3REC3FAW344R34RY317E3QVU38MA35HS32F8324D3QLA321332NI3QT533N3324D3QAO3R2P3QBP3ALA3GH431AR3J263RTS3RUR33CE32L132P0328827Y3R5E3RTL3RBW32OD3RTW2GB3RTI3QLW32YN33CV3REC3RN3326J3RU832OT31BT36YO34IL35RE3KWC31AR3RUJ348X32503RUU3291313O32EG3QMI35GG3G6E329E3LRH313O32S333JZ2B02HE34213QIY3REH321V2AJ34763RAL3QJK33QT3LO63G6W327S3JQY34WI35CU3QN33RF23OHB3RQG3QNC32BQ3RI03R7E3RQM3LQ53RQQ3RQO3RWP3RQS35I53R1C33ZD33KO3RQZ2XE32133R1G3LUY34JW3RW83RR73QS63LTX3RRB3OH432CI3RRF32J636HG33FE3RRK34KV3RRM336A3RRP32MY3RRR322E29C3AXE3RRU3QKH322J3RRX32LS3RRZ33923RS132U031L53HA83RS632MY2893RS9322F3RSB34K93RSE3QTA321E3RSI3RW837H33RSM35W831AR33N83RSQ32MT2BO3RST37H33RSV33RX3RSY36YF3RT032MT2MQ3RT32AK3RT53Q9A3RT735QE33GR3RT93RYU32EN3RTD3LTX37B93RW83RUX3L5X28Z3RV03N3F3RTP26M32GZ3R4O3HX33REC3EJ23RV232EN3KWC325Z344J2GB3RU0399C327Z36433REC3E9B328G3RVC3QM83RUB32GF3RUD32N13157328X327732573RUI324U3RUK38CJ31AR3R572AK33E53QVA31AR32FL3QLY33QT329132TG34I127Y32IF3RZA3NA335C33RTV3RZK33J227Y3FOI344132HU3S0V32HU3FUS3RZV35AD32I03RVE32EW3RVG32453RVI339H31DT32CM345K32FR3RVO35AX3RVR32ND3G6E3GOF3LLF3RVW32C9329K3RVZ320Y3Q7O32CG32CI3RW532J63R5N32IN3RWA35CS3RWC34043QCR36KW2793AVZ2753S2431W52IF27Q3S292DK3AWR2753S2C3INZ3S2A3S2F3S2D3S2G3S2E3S2K3S2J3S2M3S2I3S2O3S2H3S2Q3S2L3S2P3S2S3S2R3S2N3S2V3S2T3S2W3S2U3S303S2Z3LPT3S313S2Y3S2P2AK3S2U3S373S323S2B3S3A3S2X3S3D3S342AW3S3F3S3F3S393S353S3E3S2G3LSJ3S3I3LSH3S2U322Y322Y3AWN26M3S3T2AK3S3T3S3X2G43S3Z3DV93S403S3U3S423S3Y3S413S463S433S473S453S483S4B3S4A3S4D3S443S4F3S493S4G3S4C3S4I3S4E3S4H3LOO3S4L3S4J3S4M3S4B3S3W3S4K2XK3S4O3S4V3S4T3S4Q3S4A3S4S3S4Q3S503S4P3S533S4Z3LSH3S4O3LSJ3S3T3ILY31ZN3R9Z3QFU3RA23RCL3RA638N43RA93RAO34WG3R7X3RCX32463RD032ZA3RD038103RBB3NMT3RAM3R8Y3KVW3FOI3RBN323Y3RAS3RAJ3RDG33IR340432OO3REC3EHU3RAT32MT3RBD32A63RB637AW3REC3RIF32NZ3S5S2CF3S6A3OB73RBG32MT36A13R7S329C3RWH3S5Y3R7F3R9P3M153BAZ3S1R2753S6V2AK3S6V3BH93PX83A0U3S733S723PXI2793BHZ2DK3S7826M3S7A3S7C2XK3S7A3C7X3C7W2793S7G3BVF2753S7K35OV2793S7M3S7M3MWI31ZK31P53RCI23Q3S5E3RA531QN31FI24Z22Z22221R23Z21525V3KJ421W2X83QZK3OBX3RP63RGJ3RP93RGL3QZS3NIL3RGO2AK3QQE3RGR3Q4U3RPH3QQK3R023RGX3QQO3R063RH13QQS3R0A3RH53QQW3R0E3RH93QR03R0I3RHD3QR43R0M3RHH3QR83R0Q3RHL3QRC3R0U3QHJ3S7M32AX3RCU34WF3RDO33E43LNN3S5O32HU3S5Q350T3RDL2DK3RD73R8Z3RWH3RDB3QFO3RF53RDE3R8J320332KA3B4Y3RDJ32XH3S9N2CF163S9W3RB732T12DB3RI834E03QHZ3R193QI032AY3QI23LO03RQZ2FD3RX0335O27I33Y63SAI3369289347C3Q7137N03RIZ337O3RR632ZV2LX3Q7837PN3Q7B3LTY3QSF3Q7F367S3R1Y34943QSN3S1Q35BA3RRW3RZ4322J2GB32JB3QSU3Q7X36XO34843QSY3F273QT03Q84335O3QT33RK03R2H329Q3RLP3RYB330C3R2M2MQ3R2O3RTA3QJR35AJ3Q8O3RYR33LI3Q8S3RUM3QTM3R2Z3Q8Y3QTQ3Q913QTS39E73QTU3R383QKD39E73R3B3QTZ3RZ53RR831EM31DE32Q62B03FR93S0H3D503FBK325O32HC2B03H293QVD3H293QB53QKU342V32Q33QKX31L53QKZ3GC23R3W3QB439J03R4Y3QL83R403S023R423257323O3QAG3QLF325B3RY53R54323O3QV63R4B3EG032A632PJ31573RJ83QVD3RJ8328D3QW83QW03QLU325F2B032A53RZF3QWV3SD0315731L53SCN3RCD3QBA328D38MS32ZA3QCH3R3Y3SDB3R503QMA32713RSB3QBL324B31LG3R5635OU3SDX3S1G3QMK3QBW3DLX3ACX3QMP29C3QMR3QWC329P2GB34073QWF3RYB3RAN3QCD3RER39ZK32A63QUQ3MV93SA03MV531ZD3RDF31W43REG326V37MX36FU3REC3AY83SFE3REU321B3RF02DK3RD03Q6J3QHU3R8S3RF43LPX3MV73SFN3R8U23W3SFQ3R7E3RET3R903SFV3R923REX3SFO33K43SG23RES3SAD31ZH3S9U3LOL31ZJ3S7M3CKF3Q182793SGJ3Q1A34DF3SGO3K2C3SGP26M3CVW3SGQ3QWO279347A3SGV3Q1L2793CW03E752XK3D703E6X37SG3SH63SH53SH83SH23SH93SH43SHA3SHD3SHC3SHF3SH73SHE3SHH3SHG3SHB3SHJ3SHM3SHL3SHO3SHI3SHP3SHK3SHQ3SHT3SHC37363SHS3SHX3SHH2AK3SHS3SI03SHN3SHD3SI23SHR3SI33SHY3SHP3SI53SHU3SI33SIA3SI83SIB3LV63SIE3LSJ3SHS3D1W2753SIK2AW3SIM2JH3Q212793SIP26M3SIS3SIU3SIR2793DHH2753SIY3DHG3SIX3SJ23SIZ27933E52753SJ626M3SJ83SJA3SJ53MYE3R8R3S5C2TP31082TS23S2TU2OE32193R9S3LKW32CE3SFJ3BEU3REC3RD43R8I3QRI25Q34KO37MX3KVW38M53P9C3S6M324631W431RS37MX3S6R366T3SJU32MT3RBH3QWN33ZL3SK63QWU3LYQ322E3HW82XK3DVX3H3K39N23SKM36XL33HW3SKP3SKO2753E4X3SKS2793SKT3N0X2XK32PS3LNL31FI31PX3SJH2TT2TV32JB3J733L613SKD3RAO3SL73RDG3S0D32Z63SJQ33XV31ZD3JBJ2CF3SLB3SK4336V3SK03O9O3RGG3GA23SLQ3ONV3OOV3SLT33HE3HWI3SLW3N3F3R9P31ZO31DE310B310D2Z02AK3SLB33SA3SLM3RAO3R603LNK3I3L3DYA2793NID2AW3QSM2MH2RO31A727S31UL3PVC2AW21A2573QG026631LX3S2D31O82ES2FD24927D24A26K23823B3SN33SN321Z3PN72AK21A25A3QG02EJ2HW3SMK28J2OX31O82TG3QFY2Y42653SNL3SNM1T25T385R3J733QI03SJ83QN53ECE3REC3KWK3NIK3LN83RQ73SLE35OU38M436QJ32D231ZV3QHN3NTG3QRI3RBO33U93QHN38MU3REQ3R7X341R3SAN3R7E3QHO3Q6O33RU32BM3SOC32353R2M3SOL32ST3RQI33KJ3QFX3SOM3R1M32353Q8D3SOQ3SOG32ZX3LR23QHO3LVU32463SOV3RR833ZQ3RPB3SOB3SOW38UH34083SPA33L428Z32BJ3SOQ3QHU3S213A7434H527921R2XK3SPO3DY33DXW3SPS3SPR2753IMY3SPV2793SPW3IN23SQ0326P3DZ138DC3SQ43SQ32753A113SQ72793SQ833KH332V3SQD3DZ72793J613SQF3BYW2793J6C3SQJ3SQM38UI382P382P3J6K2753SQR39QR2793J6G38EO3SQV3SQY3SNY3QT92762FD31MH2U5312N23A21S1Z2ZA2ZC2ZE2ZG2ZI2ZK2ZM2542WU31S431S62IF31S83SND23V2473SNF31B6311L2Y53SMQ2DB3SMS2Y53SNA3SR531MX2Z92ZB2ZD2ZF2ZH2ZJ2ZL2ZN3RP43QZL3QE93S8D3QFU3S8F3SP93RGN3RPD3QG32JI3QZY3S8N3R013RGW3QQN3R053RH03QQR3R093RH43QQV3R0D3RH83QQZ3R0H3RHC3QR33R0L3RHG3QR73R0P3RHK3QRB3R0T3RHO3R0V24U3NIO3R8I3QI03OBG32T13RQA3SJP357H3RWG3LN826M3LDU3RHV3OFQ2B831ZF3SK23RDV34AH3QRM32CE3QHU347M32BM32S23RI9331634DT32B63QIZ32Z631FI3RQW32Z6324D32JX33Y6373832BK2ZY3Q72324G2CI28933O3366L3SF4372U324D32202NU32LA29Y3RV4330S32RL3RNB322E2893EWN32D333YJ339234W2322S31L52FD3QSS3SUG323129C3SE234Y82CR2NU2GL33G132KF313O348J3Q7J33ZJ3Q6O2HE3R90313O3R2M322C37NG32EJ2SN3RK933FF33M029Y341R3R2L37NG342U3RSN35QE3RYG32EN2CF2BO29Y321Y2SN354T3RYV324Y382X36HT382W3EHK32C93QTF37HC3LYK325F2NU3RUR3RMH3SD935H635PM3RZ93AB63REC3RUR3264312M321X32Q33RTW2BO33B8312M3FR9345O3ESZ32ZA3RMX326J33N33162326P36N132IL326V35RE321Y32MN3S1533H02BO321334FL321Y3S0A3R313S1C39NO3GH42SN3QVP3S0O3QVP328D3RMA32IG34EX34I12NU37UW28Z3SWP3QLZ32ZA3RVU3SWX323F2BO32Q62NU3RJ832RG378S3REC3SDX3SXA33N032I031EM362B34IL354A3SXM32TG31572U638AG32MW3SXZ32CI2HE324A321R3RVP3AV2325F3LLF3RL0311G329K2782GL3RKN3RXM39Q2321V391Y32T83S1T335N2CN328D3SEV3IMS3QNC2703EHQ3LO035YB31ZQ3SPC3SOA3QCM26M3JDP3KXF2XK3EDF3LPT3OFQ3RQI3LQA3SOJ3SOU32ST3SPF3RY83QNA3SOV3T093SOY3SP53SPD32BQ3RAF3LPU3LN93QHT3T0J3STW3STF32C93STZ32BQ2B03SU63LTK3SU33Q6R3SU134JU3SU934KG3RXH3RR4368437N03SUG33693QN73SUK3QCA3SUM34KT3SUP34KV3SUR32IO2YS3SUU32TL28938AB32ZG3SV033173SV232ZI3SV53SBC33NB33T629C37A933MZ3SVC322F3SVF32MY3SVH35KF32C53RJY36MB3RWR320Y3SVP3RER322A3SVS33TK313O33SP321E3SVX37AV3SBV3LVY3SW232EN3SW43RSR3LZ9335O3SW936DD3SWC2AV3SWE3Q913SWG2SN32BM3SWJ37NM3SWL329B32HM3SY632HU3T3332PW2NU3T363S0O3T363SYB3SWZ32643SX134TL312M32HJ3RV73ND632ZA3S0Y344R3SXB3RVD323F3SXF324Z36XJ3SXJ31EM321332F83SXM3QKB36XJ3SXQ2AW2SN3RVM3ORK3SDQ32CJ3GU63SWT3GD13REC32IR33SK338O3SYE3NG73T343IEC3REC3IMY32OD3SWY32TM3T4F32JE28Z3SYH3S223FHW3QL63T3O3SYN3T3Q32XX3SYR334V3SXO3SY134G932IQ3SYZ374G34KW32EG3G6E3J5T3SZ6335O3SZ832B23SZB32TL29C322032913SZG32IG3SZI33QT3SZK3K6M323533ZL3RWK3SMA3NIN38F33T5V2DK3JDV2753JEJ3T5Z39CJ3T622751A3HK72XK3T653T643T663T693T6B3GSS3T6A3T6D3T6C3T683T6F3T6I3T6H3T6K3T6E3T6L3T6G3T6M3T6P3T6O3T6R3T6J3T6Q3T6T3T6S3T6N3T6V3T6I37363T6X3T713T6U3T6H2AK3T723T6C3T753T733T793T6W3T6E3T783T6S3T7D3T6Y3T7F3T763T6Y3T743LSH3T7I3LSJ3T6H3JQY2753T7P35SM35SP3T7T2753JY73T7V370J3T7Y3A622793KKH3T802753KPN3T842793T853KW035UA27932RJ2753KW83T8D2XK3T8E26M3T8H3T8J372B3T8L3T8F3T8N3T8I3T8M3T8P3T8O3T8K3T8S3T8Q3T8T3T8R3T8X3T8W3T8Z3T8V3T913T8U3T933T8Y3T923T953T8O37363T903T943T9A3T973T9D2AK3T9C3T9G3T963T8W3T9F3T963T9K3T943T9M3T9D3T9H3LV63T9C3LSJ3T8H3LMN3MCW2762VR2VT2O031P228K31W42LA31K72VZ2W1182W32W52FI31Q52WA2WC2WE2WL2GE31M027J3QYE2QP31DC24P31D12WU31D63TA227924Y23B3Q4C31P531L727L31LA31LC23Z31FG310G2FD31MJ2NN2XG2XI3RGM3KD83QG025S2XR2DF2XU2XW31DZ324G2YB2ER2YE311J2YH2R22PM31QK3TBO2ZW31DE2PO2PQ2PS2DB2XQ2HW31MH2ZV3QZV2Z12Z32IC3SM128B3SM331MK31JM31JW31JQ31JS311U2M3311X2IC31P531JV2M12A02O827K29A2FI2IB31Q02FO2G9324G24G2GN2GP2GR2GT2GV2GX2GZ2H132EL311I311K311M2M124A2M3311Q311S2ES3S8A31W53S8C3QZO3QQ739EC3RPA3S8H2AN3QZX3RPG3QQJ3SSM3QQM3R043RGZ3QQQ3R083RH33QQU3R0C3RH73QQY3R0G3RHB3QR23R0K3RHF3QR63R0O3RHJ3QRA3R0S3RHN35Z33RHP3CS63OVY3HXV3S9E32133RI03SA63RQL2DK3RIA34E032JQ2AW3TEP2AK32JQ32BM3RLM33XT32ID3213320H3B4532BK3TEX33EM33IF32E1348B3SUC2NU3A7S33033RLT337O3QTZ321V3RK0379W33XM32203RJS349131L53T5F3494352B37TD3QC5329Q32ZG2GB3AEB35PL32UO322S2CR3RIZ322J2GL3RLT32312NU3Q8234Y8313O3RLS339G352Y35TL352Y326Y3SW737NG3RYM342U31AR3R2M3QTN33LB3QTP3Q9035EX31L5331T342T3R2Y349R36DD312M3SWB35WW3RZ1329M3Q8X33GG312M32MO2AV33N32AW3TH53Q8X3SUY343J37HJ3T312NU3RM23QVD3RM232883THD32353T4R3D5532OD3QKX36Q1325Z32PL35HX33B831433RTR33HJ3RTR328D3QL1344R35RE32F0326P3SDH32GF32VE35NT354L34B335B9371237VN35NT312M35B83SDN35NV39MM33C7316Q3HOH3THK3EVP32ZA3QMH32T9324X3THH37V33QUE3SCZ3SD2324U33ZI3T4F3JHA34AS3JHA3QVR328G3TI032OT32573QLE34IL32NI36Q136YO31EM356S38G333RM3TIO3R5C3T5232F63QBX32IS32LT348Y329K3SW83496322E2NU33H4321V3R5P321V3RIS33DF3LQ2328D3SEE341S3RDY32063A113QN5340M3SA73T0P3T293RIC3PCE3SBT33KQ336B3SO133Y6328Y32S4334Z321332S53TF031L53TF234E1358032DY31CW34QA33EW3TF9322F3TFB329B3AX03S1E329W37TT34S3322037AD34KV2GB3RW0330S35JT3SZC329B3AW332ZG2NU3TFU372U326Y322S33RG33923TG833992CR3G0J33MZ342032QP323E35ET35TL35ET326Y3RYS3SXR3QJY32BJ31573Q8D359R34393TGW35F93RSO2GB3325323Q343E32MF36ZC32EW343236TD39E733K133TR34FV32P02AV34RY343933L734RY32BM344J37NU3THC3GTS3THJ38SA3SCT36XI3DMG3S0W3E843REC3EHH32OD3THQ3THO32GQ3TJC34TL32573DR834GS3H2P3REC322E328G32F831CF326P3TI735HS32HY35NT35RM3A0Y35MM36Q132MX31BT35NT3T3V331O32XC31ZQ3D1W3GH4312M3EIG3TN334UW3REC31ZV35WS32MW3T4F3RZI324B3JO13REC3T3I32643TN83T373N8P33UO328D31Z93TNJ36Z532OT325B37HX34IL3TI5334V35RE3TJD35L033NZ328D3TO93TJI33FC34SO3G6E32HS3LLF32TW324I329K3RYT3RMH322E2CR3SFM32IG3TJX32T8347133DF3LRE328D3S1J338P3STS3PGT32B73SAV335O3QI63RR231RS3RCZ3RIK3SUA32BH340Y3Q7U34E033LO3LWH34K23RIW33033TKI32KI3TKP33LV3TF02HE3TKP34KD33IF354I34EJ3SUC2MQ3TKW2SN3TKY2BO3SZY3QME358I32T933ME34KU349133MI338T34KW33ML34J83LHL3QJ02BO3TLH3SC132LS3TP933923S0K34LA3NJ633MZ34LF3263323E33N335TL3T4V32EE34LL33TK31BT339Q34K332UM33C1343K37HV32UR363I35G232PD34LY33NO34YM33A834YP33AB34GA33AE34M9334W32VH34MD33U934TK34MH3TMW37X23TNF328D3TSF3TOK3TSI33PN3TSI33OO3712351938FT32G032703SJX37WL32A33TST34NC34OM33C233QF33BN33C235NT350633P93BHQ32BT32OR3TI638I532PB34NR32173QVA325B39F533OK32HU3TTG374F34O13SWM3HFK3TSG32A337TS33Q135HX3T4F32OC36P43L4W32ZA3CFB33QC32XT33QE33D133IB3TJA3TNT374F34OU32C432T534IX36TB32YC3G6E32QC3LRH33DL33RQ34P936YS322A3T65329134JE3RIJ32YV33EL35H432PS3TJO335O2893TTG3QMX29Y347J2CA28933RA28T3TEL3RQZ323U3SAJ32RW3QRZ3SUC3QIT32BQ3SE73RX632UV3T1E33YX32T13QS531RS28T2HE3TEU35WT3TV7322A33Y632L63TKJ3TVS37N033GG36SE3TVH28T3RL33QRV3TVO3RR13A0Z3369318K3TKJ3TW637N0339V3TVX337B28T31AR29Y3TVK343I347J28T3QU13SAJ28T3TNY340Z3245389V31FI3HF93LQ63EHW3HLT32A1382P31ZQ34113RD436SG29Y28T32GD337H341131BT3TWQ3QWT3RDS347C37N235VU33U93RJ53TVP35LZ37N036DZ34Q534AH359532ZY3592366T35993TQA329Q3TQG329Q3TF0313O3TKP352Y33IF34X93T2A359K3TKW3TRB34QW3J2M335136LY359T34XL367S34XO317E34XQ359Z33R43986330Y33183TLH3TQO38WE35A633173QKD33T62SN335I33MZ353R3TRG3R5435TL34RY326Y34YG324T35AL32NJ34YL3TS035AQ34SA327135AT36DE34G335AW35XR32PD35XT34LX34SO34Z3356T38UQ34SU34NO35B832HY34ZC3TW832GG3LYH3TTM23C32X632HU3TZU33AX2NU3TZX35H33BUS32VY32PE38FT369K320T33ZI32G032GJ22O32M136AR3U0B35DC327035DE3TT435083TT635CB35NI39EU381Y3ACT3B38320T38WY32WV34NR22Z32PH35CO23B334J38QW32ZC27923832T535CX3T4F2373TZV3BVA3U113SKS3U0333B63TIX3TTM22732W837T632WC35C6329S35DG33P43712351N326W3TOY397X3FUF32T534VK357Z351W34CZ3ONP3LLF35DW34VU330T36N935LB3F2732T535E43615352C34IZ22N32Z03TXD36H934113TX432ZH29Y3TX72IE29C3R7X2VK382P347C382P3202382P3EHX34NR382P32A125932ZH3TX03LTV28T350Z3TX634873SK23TXD3KVW3STS3SKY33JU31ZD3L5D39DD335Q2XK3U3D34FD3U3F3U3E3U3K3U3I3U3L3U3H3U3O3U3J3U3M3U3R3U3P3U3N3U3Q3U3T3U3S3U3V3U3Y3U3U3U403U3X3U413U3W3U443U3Z3LOL3U453U433U463U483U3R2AK3U4B3U4E3U4A3U3Q3U4D3U4G3U413U4I3U493U4M3LV43U4B3LSJ3U3H3L5S2753U4S35FH2XK3U4U3U4X2793U4Y3U4T3U4Z3U523U513U543U4V3U553U503U563U593U583U5B3U533U5A3U5D3U5C3U573U5F3U5I3U5H3U5K3U5E3U5537363U5G3U5M3U5Q3U4U2AK3U5P3U5S3U5J3U5R3U5W3U5U3U4W3U5W3U5T3U5Y3U633U5L3U5V3LRB3U5P3LSJ3U4U3STM26M3LE12753U6D3U6C2793LE43DAR2XK3U6I26M3U6L3U6N3U6H3U6P3U6J3U6R3U6M3U6Q3U6T3U6S3U6O3U6W3U6U3U6X3U6V3U713U703U733U6Z3U753U6Y3U773U723U763U793U6S37363U743U783U7E3U7B3U7H3U7G3U7J3U7A3U7K3U7F3U6U350M3U7L3U7Q3LV63U7G3LSJ3U703LE735V83P523U7Y3P3V3U7Z3P443U813LM83U80275320X3P5D369G3U893U883U8B3DMV32KN32LO3U8F2793U8G3H803U8H3AOF2791H3S5B369S31ZD37KD3U8R3U8Q3U8T3U8P320Z31ZD38JK3AAZ3AAZ38JK3B993U923NM53U93338C31ZD3U9532213U973U9A3U963U9C3U993U9D3U983U9G3U9B3U9E3U9J3U9H3U9F3U9I3U9L3U9K3U9N3U9Q3U9M3U9S3U9P3LOO3U9O3U9W3U9R3U9U3U9Z3U9X3U9T3UA1373P3U9Y35EV3U9Y3UA33U9O3LSJ3UA93LSH3U9O3ED13UAE31ZD3UAF3L5H3U9D3F723UAK31ZD3F723G4D3GGK3SFG2MH323U25731E93TCJ24A25627S28K31M123K31M331UP325H311J311L311N3TD9311P311Z2XT310C3TBG2M431DE3TCL31OE31I83UBF3TCF31Q824A324025Q2533SKZ32BM3J5X32133RB432BT32053SG628Z3RIF3LLU3T2O3KXF3SLN32YQ3L613QHQ35NV3SLN3SOD32ZX3SFJ3SK13Q6D3LN827I3QHQ391Y389V31W43KXS2DK3QHL340T3QHR327S3T5T34YU338J3UCS31ZD3UCT32F131ZD32AT32AT344Q344Q34NB3UD2329F3UD4320A31ZD36QN36RR3U8U3QWN3LNE31M53UAT2A73UAV2RK31B73UAZ3ASM3UB12OB31W431JY323R2403NM535YB32BM3SJV3QNC33W13QWT3SG633723SLF3UDZ32HU391X3RQD2XK3JBJ3KVW3UCQ31FI35HN3UEA31ZD3UEB3LTK3NM535HN35Z535Z536QN3SMG3LNE3UAS3UAU31JN2M13UAX27T2WU31M22OB323U3TD5311L311I2YR2AS2GF2RO3UBO3UBQ34053R1133MG3UDW3UBW32AZ33ZQ3RAX3LTI327S3SJN3SLO3LTO32CK31ZD38YV3UFK3UFJ3UFM3SFP31ZE3NM534JP3SMI3TBE3UBC31OQ3TB62XH23N2WT3TA32OE32AT3JBI316L3RCL28K2RB2Q823S31L83UG225334SW3SM63S9X33AK3UE03RED3SK931ZJ37TK3TNF3STG32UY37TG31ZJ31ZD25W3P8F3P8E37A533RU31W431CW3RDM3RHZ3LNN31ZM3QRM3RI33R1432BT347M320227I3SOH3RQR28T32133RQR27832133Q6Q31ZQ3UHE3QRN32ZX3QHZ2B03UHG32AY32023RQT33S432JQ3UHN3T0U3RJ13SU73SP83UHV3RYB2CA2B03TVH3R7X2MG3UCQ32XC3BMO3UI831ZD3UI934XC31ZD3C5Z3UIE31ZD3CHG3UIH31ZD3D033UIK3UIJ3UIM32DZ3UIN2DL31ZD3DBM3UIS3UIR3UIU32E23UIV3DAU36Y931ZD3DP53ED13P9C31FS382U3R7G3SN738XU3SMT2FE2WX3TCP2FL2FN2FP3Q2F3F6231PF31PH2S031PK3RCL31PN31FI31PP31PR31PT2WN2FI31PX28J3TCR2DA3BOT3UJ93SMY2XV26K22E26O22Z1525B22E2343QG23TDE3QYB3RP73QZP3S8E3QFW3SSF3TDL3SSI3QQG3S8M3TDP3RGV3TDR3RPL3S8S3SSR3TDW3RPQ3S8X3SSW3TE13RPV3S923ST13TE63RQ03S973ST63TEB3CZP3TED3D3R3AW333923QHN322J3QRI32D33RAU33T63S253SO532T131W432RY3R8Y347M31CW3TEN33Y434PS3TWO3UCN3410335O32BM29C32LU37N03TV637N03TVD348B3ULZ34K43219341D3303324G359932EL33F23LDN330338GH3QBS33G73QBV341R322037SZ34KV341V33NM341Y32TM3RW132MY3T2X33173RK3339236SR32LS3RL033923R8H342E2GL3RS534Y8342J326D323E3RMK37UI37H63SCA3RUM342U3SE6343E342Y3TMF34313R2Y35QM39E72NU326Y349S33TR3TRM343C3R36316Q36N63Q8X32RE339N3TRT38AP354A332837VP32EW37VR3RQI3257324G32Q62GL3RL63SX63QUD32HU3QAU32882GL3QAU3R4V3QAU345U32EW37UA328432452MQ32G0325B3RU233PN3RU2344R346432OT3TNR35HS32OR324336O5350Z32WE37V632F832433457332834593BDA3GH431EM3QB13R4V3SD83IXF345J32503UO83R4W3UOB3SXY3G5L32HN345V321T32HC2GL3SY5372O3RV83SCS328G3UOW32I0321O346734IL32HY37UA3SXQ37I936T93TO03SWQ348X34GE3QBO33O13RVT3TJL34Y1346S3SMH34EX329P3SVE32CI3TPK32T83733335N3Q8F3RWB33E228T32AN25Q23S3ULL3RJB3T0L3UHU3UH533XO278340Y2B03R8U3SO33S6P3SO33Q6H3RZ43LQ532BJ3STS32HK3SKH3T0O3UFG3OBX34HG31ZD3HQ13URO31ZD3I1U3URR3NM53URS33BT3URQ3URW3URV3URY33BZ3URX3US03URZ3URU3US23US53US43US73US13US83US33US93USC3USB3USE3US63USD3USG3URZ37363USA3USI3US533P63USH3USL3USQ3USP3USS3USJ37803USH3USO3USF3USX3USM3USR3LV63USL3LSJ3UT13UT03US13IIC3UT83URN31ZD3JF73SMG2MH3TC6310C31E63SM53RF23SL93UE73RNH31W43KNG3KNG3L4B3P9C3RYX3RGP2DB31LW3QEA31D73UJC31MI3UJE2G931DE31PE22631PG1K31PI3ID231PL23M3UJN31L623V31PQ2A63UJR31PV3UJT31PY3UJW3UKG364U3UJZ3SMZ3UK23UK43UK63UK83UKA2MH3RP53SSB3TDH3RGK3UUL3SOA3SSG3UKJ3SSK3UKM3RPJ3S8Q3SSP3TDU3RPO3S8V3SSU3TDZ3RPT3S903SSZ3TE43RPY3S953ST43TE93RQ33S9A3RHQ32KS3NV13KVY3ULB32ED3ULD3QWN3ULF3AXQ3ULH28T3ULJ32RZ347M3TVZ3T0U3R903RR234E034113ULS3PDG3ULU3RX33ULX32ZI3UM332K53UMM34K433S432SA3UM534KG3SVJ32BQ3TFM35KI3UMC32MY3UME3RVR341O33183UMI341T3UML3R5I330S35VN3UMQ2CR3UMS3QSW3LZ33TG03RAO322S3UMY33173UN033T62GL3SEC3UN43S6D342L322A3T3Y34PC3RAO3RSW3RZ13UND3QJZ33LB3UNG34303TMF343332MT34363UNN3UXQ324B3UNQ33223QTU3UNU32443UNW331Q3UNY34AH3UO0339N3UO238MB31CW3TJT38GI33NB3UPK3UOA3QUF34OI3QKO322F3IHI3R4V3IHI3UOK35QI326432853UOP320N3UOR328B3EV43RU53QL63UPZ344V3UQ2326V3UP03653345132133UP436Z937OH324536E43TWN387P3Q9N345C31EM3RUR3R4V3RUR34IW345K3UOF3K1Z3TO63MP132OD3UPQ32PW2GL3KSD3UPV3JTZ3UPY344T32OT3UQ132GQ3UQ332OS3UQ5346B310Z3UQ835OU3UZM3S1B3UQC32T63UQE3DLX3TG532AY3UQH33JZ3QTS346W3T1Y3UQN331R347333DF3UQS3LAE32JF347B3HF13UQY347M3UHF3UR13UH632T13UR43RIK3T0U3UR8373628T3URB32GX3QIH27I3URF3T0F329P3RBL3SKF33F325D31ZD3V1K2753V1M38FA3C1R3V1Q32JR3NM52663V1R38773V1V3V1U3V1S3V1Z3V1W3V203V1Y3V213V243V233V263V1X3V283V223V293V253V2B3V273V2A3V2F3V2C3V2G3V2E3V2H3LOL3V2J3V2M3V1V39GF3V2D3V2B3V2P3V2I3V2Q3V2T3V2V3V2K3V2N3V2W3V2Y3LV43V303LSJ3V303V343V1V32RS39GI31ZD3V373V1P38JV3OD83SM03QVK3TC73UTH3NII3SL83SM83UTL3LN831W434WG3S9F3NQH3R9P3LNE31W42CK2ZX2QD27L31CZ31D131K5317W24N2A62OB2B82US323R23T3UDR3S6T35YB3UGU32Z42AK3UR932HU3SO336SG31ZO3OB63SO938N23SLN3LN23SO93UE83ID231ZD32RZ2FT3V4S31ZD32YQ311H31ZD24G3V4Z31ZD25A3V523OAR3OD832MW31IO31CX3V3X31D031D2317W3TAN23K3TAQ2T93V423UUD25923P31E826L31M531PX2993UJU2I131DM31MF338825023021Y21Q23U1I25S1V27222222E1926V23B24325221033VM31DE28J3V5B2S6338824V315531V62A623U3V5K29825A28J23S2LD2AO25322R2OJ23P173R7J3QQD3QG22RB25422R22L31EQ33M924526Y21S24P1F24422Y3SNK3SNM3SNL21P3QG2323U2EP2F931VW3UBD3UB324V31K523M2472QX31W131082T92TB2G62G83UG62HF31DA31DC2I52CK31DH31DJ31K72O823U3V7W31093UKB3TDG3OBX3UKE3SSD3UUZ3QNA3UV13TDN3UKL3R003UKN3RPK3S8R3SSQ3TDV3RPP3S8W3SSV3TE03RPU3S913ST03TE53RPZ3S963ST53TEA3Q6538N231ZE3TP23KVW34WG3SKE3UGL32ZI3UGN3V9F3S68355D24B3UGT3HF1340C3REU3TK63QNA3STS2O63RN93UVU37K93REC3RAZ3URK3V9I320S3AVS32052CF3UBU3TEI3SK33TK93QHU3TKB34JU3TKF3Q8D33XF32BM3RYK3RX33UBN33EM3SWA37N03VAH3TKQ33253TKS32ZV3TZQ324934K73SAX32ZV3JXU37ML3QJZ3RVR336Q3TL5367S3TL832C92YS3TLB32TL3QAJ3TLF34YX3QSW3SBE322F3RR6330Z3SAX32312CR3APS3TLR320Y3RLM3TLU32TM3TWN3RMS35WJ3SW13V1532EN3TM23TKD3TM533GJ3TM732MT31AR3TMA33G632BJ34FN33GJ3UXT3TMH3UNK36YF3TMK32EE3TMM318K3TMO35G73R543TMQ33U931BT3RR832FV327W31573UZX3TIL3UZX32883VCN32353UOB3UZX3TOI324B37TV325Z345V32S132NI2IE3TTO3ID23QL63TNK3V02324B33UW326V32HY32A13UOY321332OR3RJE3T3S32A13UZF33TR3TO03EYS3QVA312M3R4Q3UOB3R4Q34CW34G932Q631573QW83TIL3QW8328D39EG3TN73VCX33J231573R2C333032A33VE6329D3VD63TOQ32I03TOS32GK3TOU32GQ37TV36YR31BT2F632QZ32PV3R4P32CI2SN38G235QX38263DLX3RQC32AY3TP9324L3TPB322A3TPD32MY38D33TJW3SB132B2323R329A3TPM33UH3V0V3TPY32Z432AQ2CA3AWJ3V9G3VFG33KN3TPY347K3V9R338P3TK33R8I3V9P3QHV3RE73RCY3MUK3RB834BW3SYJ32PH33E528T3B3H3UGH3VG133CN3TYI3RIY352K3VA93TKE3V4E3TKD3VAD3QRZ2Z63TKJ3VAL32S53VAJ32ZI3VAL32K53VAN34KG3UNM321I3VAR3UWN3SBI32ZV3CPX3TL132J637AP34KT3TL634913VB231CW3VB4320Y3TLC2NU3C1V3VB8324X3VBA38WE3TLL33173UXA33T62CR3J6K3VBJ3TW033G135ET3VBO3RLO3VBQ3TM03RUM3VBU3TM43TGU3T2R3TGX3TM934A93TMC3TH633TK367P331Q3VC73UXW32BN326Y3TH232UF3VCD3QAK331O3TMR3F8832C93VCJ37HL3RUW32HC31573EJI3T4Q32HU3VIK3CT03TN031573EWX3UZR3Q233REC31ZZ3VE23RTG344E38M33TNC3NDE3VD43NDB32ZA3S1033W43VD73UQ03VD93TNO32OS3VDD344W3TT732653VDH35RE3VDJ35ML3TID34NR3EIS3TO33A3Y3VCT3A413REC3RXZ33WJ3TOB3VII3SMD3VIL3DYD3REC326P3VIW33733VJV3IKZ3TOM32A33VK439B73VEB36NS3TOR3VJ93VEG325B3VEI3VDI33WJ3VEN36JN3VEP38243VES3AV23J613TP832BN3VEY34PF330R34223SIT32CI3TPI32IG3UQO33QT3VF92793TQR32G03T6128Z3UH936M23REC32L032ZG27I2RO37TK27I3VLA35OU3VLG39CS3QJ03RIO33112B0320F32ZK3UW5324Y3UW733Y43ULT3RAG3TKJ3VGE3VAK32ZX32K53VGI2GB3VAL32SA33253UM632MY3TZQ33JY32C63VGS348K3R593UMG3UWV34KT3UMK34913UMM341X36XI3TLS3VKU3LE432ZG32YM3UMV3RIK3UX93Q7332LM3VBF322F3O0N342I3VHN3UXI2MQ3TWN342P32JB3UXN3RSO3UXP342W3VBS3VI132E53VI33435329B3UXY33TJ3UY132E73UY332MT343H324A344G33223UNZ35MB3UYA331Q3UYD32V33RR83TRR3VCR37KH32M13UOB340G35H6329332M13R4V337H32ZA3VO23VIY31EM3VCY344I3370344L3H6K3TTH3BN632WC3UZ235XZ3V043UZ53VJF3UZ732OS3UZ9326W3VDH32F832A13UP8339N3UPA331W3U0W346D321R3SEA3KPI3U1A3V1P3UPI33CJ31573NS03VIS358W3U033VD03VE43NOA3VJ23VPG3IJ73VOJ3V013VJ83UQ2321K3VDC334V3VOU32Y83UQ939X532T5346I32T8346K3EPQ37T93LLF3V0K36BF3V0M32TL35PV32T53VKZ321V3UQQ33QT3V0T3O7G327J32HA24N32PH32HU3VQG3AT63VG5331637TK2783UC435OU3VQP328D3V5032ZG27832LU31ZV2B03TV63KWF27Y2CA321U3UI232MT27Y3SAT335O2ZY3TVP3UQM3TWO2HE3TVP341R3RIH34833R903SD42DK27Y39PT3V1I3V983IXG31ZD25631ZD2573VRS3VRU356W3VRV2XF3VRX3VRT3KS53VRX3R7R2753VS32TA3SLH3VS72DK2523VS83JBI3VSB3VSA3R9R3VSD3VSG3VSF3VSI3VSC3VSJ3VSE3VSK3VSN3VSM3VSP3VSH3VSO3VSR3VSQ3VSL3VST3VSW3VSV3VSY3VSN37363VSU3VSS3VSZ3VT23VT53VSX3VT33VT83VT63VT43VSR2AK3VTA2AW3VTE3VTG3P3N3VS93VTC3LSH3VTH3VSZ3UBP3MP431ZD3VRO2AK3VRO3VTR328131ZD24Y3NM53VTX3L0N3VTW3VU13VU03VU33D2R3VU23VU53VU43VTZ3VU73VUA3VU93VUC3VU63VUD3VU83VUE3VUH3VUG3VUJ3VUB3VUI3VUL3VUK3VUF3VUN3LOL3VUP3VUS3VU63L173VUU3TAS3VUM3VU93VUV3VUO3VUY3VV23VU43VV03VUQ3VV53VUP3VV73VV33VV63LSH3VUT3LV63VUZ3VUX3VUK3VV93L113NM524Z31ZD3VVL3VVJ3VVO3EIC3VVM3VVR3VVP3VVN3VVQ3VVT3VVS3VVV3VVY3VVU3VW03VVX3VW13VVW3VW43VVZ3VW23VW73VW53VW33VW63VW93VVX37363VWA3VWF3VW83VVY3L0Q3VWH3VWG3VWC3VWM3VWB3VWI3RC33VWK3VWH3VWJ3VWN3VWL3LV43VWV3LSJ3VVU3VWT3VWO3VX03VVU2JT39YC31ZD3VX438MM31ZD24X3VX93VXB3L8S3VXC3VX83VXD3VXG3CPS3UFQ324G3V7Y2TC2TE2G92RB31D931DB2S631DE3V8731DI27G31P5317A2XV2RD24C3V5T29A2LX2593V6W21J24M1925T1U25D2DB2CP3SS93S8B3UUW3V8H3TDI3Q4K3TB93NIN3S8I3UJ63UV23TDO3V8P3UV53SSO3TDT3RPN3S8U3SST3TDY3RPS3S8Z3SSY3TE33RPX3S943ST33TE83RQ23S993ST83QHJ3AXR3STC3LT93SNT3VFV3STH3CN63ULH3LN825Q3A8O340B3R923SZS32C93VFK3LR23RWO32B73RWQ3VZU3RWT3VR733XF33Y227Y3T2G335O3UF23TW3320F323X3TKJ3Q9F3TKQ32BQ33LO3RX83R5L36S33RIK3RRH321U3RRJ367S3RXH3RRO34PF3T1X3RRS3R3C32D3366V33923RNA3RRY33Y53TFV323U33T631L53SZ534Y83RS73KWC3J6A3RS73RSC322F324D3RSF3RK13RYA3RSK3T263T2K3RYF3QT93T2N330C3VAF322A3RYM342S3QTE3SC03R2T34XA3RYT3RSO3TMH3UTS3RZ03RSO3RYZ3RZ23SWK32TX32EE31FI32Q629C3RTR3S0O3THW3QB33UYM29C3QB13SCQ3QB13T3E32EN3SVE3RZM32MB32JG320N31EM3F4Z3RU33ET538KM3QL63RZW3RUA3RVF326V32F832C53RUF3S043V0O339H32C53RUL3RTA3S0B3D3B3S0E3HJQ3SE33QM5321V3TRB3W233JU63RL732A33K6F3AU83S0R34EQ328829C3VDQ36EC3W2Q3S123SXD3RZY321K35RE3SVE3RVJ33WQ3W3A3S1C3JI632CI3SZ332T83R5A372H3UXF32AY3S1L31CW3S1N329Q3UMQ31L5392S3RW43RY83RW732A1329A3S1X3RFI32ZG3UDY33NB3R8432Z53OB43VZF3W4Q387Y3RB13SLN3SKB2CF3RWD3T0F3V9Y3AXR3B4D3DGW3NM53W523494330S3W573W563W592AK2YS3W583W5C3W593W5E3W5G31ZD3W5H3W5D3W5I3W5L3W5K3W5N3W5F3W5M3W5P3W5O3W5J3W5R3W5U3W5T3W5W3W5Q3W5X3W5O37363W5Z3W5V3NM53W623W623W5B3W5Y3W683W5S3W693W633W583W673W6A3W6F3W6C3LV43W663LSH3W5T3UQY2DK3W6M2FE31ZD3V4831UQ3OB13LS33VTD2XK3SO03SFS3S9K3W4U3RAO3IHI3R5Z3RNH2RB24A31ZD3V9K3PVK31ZD32VP33V03OE83UFQ3VGA31FT37363SLB3UGK3SLD3S9J3CHE3REC389X3SK93IVL3TX93V1I2RO24531ZD2423W7V3NM53W7W27524331ZD3W813OGU3R9P31BA2NN2LG21V21O2OF3TBQ2PL3TBS2962PP23N2PR2PT3QQB3Q6624U2503Q6623223S3TBD3PUQ22R22J21I2491F25W1N3UES3UDL311Z318G2A62I32AF31PW2B52FQ3SL231MF2LX3TAC24E2P535T3319431BB31CH31AB316B316D316F316H316J3UTW3UJG2E927G31PJ3UU931PN3V8F3VYH31W53V8I3QQ83SSE3T0G3S8J3RPE3SSJ3VYQ3RPI3S8P3VYT3RPM3S8T3SSS3TDX3RPR3S8Y3SSX3TE23RPW3S933ST23TE73RQ13S983ST73TEC3ST93TZU32F13KML3E523RWJ3S9W3RWN34AH3RQR3R7E3VZV32BM2B03UM8337232EL3SU733KZ3RQZ3WB73TW3321Y3W0632BH32403Q723SV5337O32L63RX83TFD3W0E3RRG330T3W0H36SC3RXG329B3W0L3RRQ3T5G3TFR3T1N338O3SBA331T322S3RXU33172NU3WBK3RS33L3Q3RY03UX3339G33LV32GP33LV331T3W1933M13W1B37NG3RYD33N83W1F3QJL3W1H32TM3W1J2MQ3W1L3RUM3SBZ3RYQ2CF3TLZ3RT43UXU3UCR3RYY3RUM3W1X3S673T303TVU324B324032Q62MQ3GJ63S0O3GJ63QUA3TN02MQ3IT13SCQ3RTN3GB83RZJ3W3V3RTY316Q3RZP3DJM3R4V3DJM328D3SFA3RU73W3P34A73S153W2U3271324A3W2X3QUY324U321333N3324A3W323RZ13W3438Q73W363IHI3SCQ3IHI3W3X318K3WD93G4Y3T493UQA3VEO3WDL3QUM325F2MQ3SY03UOB3SY03WDV353R3S133W3R3T3S37GE3W3V3TH53S1B3RVM3RTO3VAW3RVQ3TL33S1H3DLX3R5E3W4633RH3W483UFR3TL93S1Q3TJT321R3T5M3REK3W4H3SFO379G3ULH3UGZ25Q3W7U3RI03R133QRM3R8N33Z63R183S9T3Q6O3UGQ3SK1348M3UI13SFR3LO03RQN3VZV3WB13RWT3WB532Z63WBB33KQ352Y3T5C3QRX3TJP3RX23VGF3R1L3WBI3VKQ32PF29C32D132913RXB32T83RXD338P3RXF34913W0K330S3WBV3W0O3TL03WBY32MO3WC03W0U32JU3TFV3WC632ZI3T483W113UMR3WCB3TKX32BT3WCE36MD3T0A320Y3WCI37NB3WCK3RUM3T2M3RYI33RH321Y3WCR3SXR3W1M3WCU3QJT3SC23W1R35QE3W1T34AH3W1V3WD13RTA3WD433LB3WD6312M3WD832HC2MQ3DVV3WEK3HUY3REC3EIM33AX2MQ3WIG3RTS3WIJ3W2E3WDM3W2H34D632G031EM3E4X3VP33SKV3W3O3WEV3W2S3WDY346B3WE13R413RUG32GK37GE33LB3TH732MB37CQ3T41387P3DHK3W363EJE3W383N3W3S0J3VIH33183TOO3W3E3N8Q32ZA3G043WEN32ME3WIA35BG3VJP328D3F8L37F63WIV32UZ3W3Q3RVF3W3S32453WEZ339H317E3WF23CD03W403S1F3WF73AV23T363WFB3RVX36BF3S1O3W4B3SFB3T5L3W4F340H3WFL3W4J3NGD33ZV3R5N25Q3EJE3RI03TEV3UH13LTY382J3SJZ34KG2CA32BJ3TEL34E03WB03LR23WB234DQ3WGA27Y3WGC33XF3WGE29Y3WGC34113WBD34KG3QTJ3WBH3RX63WBK32BH3JL03WGQ3W0F3WBP34KT3WGV3WGY3WBT3WLS3W0N3SZD3J6Q3RXP3WH33RXR331V3WC23W0V36XI3WH831L53VO932U43RS73RLF3W1433IC3WHG3LYZ3WHI3RSH3QT93W1C3WHM3RTA3WHO3SW63WHQ3RSU3WHT3WCT3R2Y3WCV3VHO3WCY3WI034E03WI233G23WD233U93Q9636YD34YU3WEI28Y3WID2763VP53B5Q35H63UOP32M13SCQ32NU32ZA3WN93SX032EN37GE3WIO324U3RZP372Z3WIT32BB3VP537IF3S113WIW3WDX3T3V3WDZ3QKX33VF3SDD3WJ23TJ633N5339H39E73WJ83RUN3P9C3RUP32863WNC36AK3VP53CWP3WJG3WEH3WJQ3E1F3WN62JI3VP53HMR3WJO32PW2MQ3FKH3VPB3WOP33W43W2R32453WJZ3WEY334V3WE63RVL35OU3WOD3WF53VGW3RVS3DLX3J8M3S1K3WFC3RVY3W4A3R213SA432913WFJ3W4G33DF3WKM3VP6331728T323O32ZK3SA9324Y3SAB3LSM3R1A3QRT36IH3LTV3WLD335O3WGE3T1M3TEY3WMN3QS33TVC34YU348B3WGL3WC532PF31L53O3J32913R1S3TFE343A3QSH3SB432MY3QSL3SB73RW23UVR3SBA3WLZ33WS3WC13R2733923WCA3QJ93S7B331D3QT1323F3SBO33IC34KD331T3QT83QJL3T2I3SBX3RZ13WHV3QTG3SC23QTJ323F3R2X3Q9A3QK13SC83TGN323F3SCB36YF3SCD34AH3SCF3T3Z3Q9A3SCI32EE3WD636I232882MQ3OBU3WJE3WRU33J22MQ3UQY3TIT3KST3VP53WRW3WDN3TIV33N33QA23H11334B3KT732WC3QVT33HQ324532GF32NI324A3TI334MC3WJ43R54324A3TIF33G63R4C3OAW3QVA32U632M13QVD32VV3SDY33CJ2MQ3SM83SCQ3SM83WS43WRS3AXI3VO532HU3W7W3QUT3SEG3QVV3QBI3WE03QMC3S123SEO33RM3WSV3SER3QW53SET34CZ3U0V3SEW33NM3QC23UWZ3SF033SW32T53S1V3SF53QN034IZ22Q32PS3RAG3R8W389V3SJY327S3UCM320O23R3P8F3UM332053QLH320532193S9E32CE3SGE3RHX3LN83WAS26M22X31ZD22V3WUM3NM53WUN3PXK3WUO3WUR3WUT3C7W3WUS3WUV3WUU3WUQ3WUX3WV03WUZ3WV23WUW3WV33WUY3WV43WV73WV63WV93WV13WV83WVB3WVA3WV53WVD3WV037363WVF3WVJ3WUW2AK3WVF3WVM3WVC3WUZ3WVO3WVE3WVP3WVT3WVS3WUU3WVR3WVG3WVK3WVV3WVH3LSH3WVZ3LV43WW33WW531ZD22S3WW73NM53WW82753WWB34D03WW93WWC3WWF3WWE3WWG3WWJ3WWI3WWL3WWD3WWN3WWH3WWO3WWK3WWQ3WWM3WWP3WWU3WWR3WWV3WWT3WWW3WWZ3WWY3WX13WWD37363WWS3WX53WWH2AK3WX63WX03WX93WX23WWX3WXB3WXE3WWA3WWX3WX83WXD3WXJ3LV63WXB3LSJ3WXF3S7L31ZD32U22DK3WXR35OV3WXQ3WXV3WXP3WXX3WXU3WXY3WXT3WY13WXW3WXZ3WY43WY23WY03WY33WY63WY53WY83WYB3WY73WYD3WYA3WYE3WY93WYH3WY337363WYI3WYG3NM53WY92AK3WYL3WY43WYP3WYC3WYF3WYU3WYQ3WXT3WYS3WYE3WYY3WYV3WYT3WYW3VTI2AW3WYQ3LSJ3WYX3S7O3WZ23WZA3WYM3WZC3WZ13WZD3WZ33WZF3WZB3WZE3WZJ3WZG3WYR2XK3WZL3WZL3WZ03WZO3WZI3WZR3WZH3WZU3WZK3WYT3WZ73WZX3LSH3WXT23531ZD3X022753U1G3X0531ZD3X063RZD31ZD330X3HW83OLS3UCU3RSO2763VXX2L321325A1M25H1U26722O2251A3UB32553X0J24N1925E3X0O3X0Q3X0S2RO3X0U22121324J172SC3ROR24N2PC2PE21F25H31IK22B23I1L25M3X193X1B24F2162621C2BM3X1H3X1J2LX3X1A2PD24F21A25W2BX31E731E127F3W9Q2HW3TCQ3UU02OY2FT2FV2FX2FZ2G131D83V843VXS2CB31DG3VXV3VYF3TDF3W9Y3RP83V8J3VYL39VA3VYN2753S8K3RPF3V8O3WA83SSN3TDS3WAB3UKR3V8V3UVB3VYZ3WAH3UKX3V913UVH3VZ53WAN3UL33RQ43CS621U2B83L8N3QSV3V1H3SFT34AH3WPP3Q6N3SAD3R1B33723W203RMD3WGG3T20336931M53WPZ3TUV3U35348M35PD348B3LZ4329B2Z63SAY3S673SB03QSE32LB3QSG322F3Q7H3WQG3R1Z3RS73S1Q36SR3SBA3WBG3T1R321Y3SBF3R283X423R2A3L1A3R2D32TM3WQX3RLF3RKC321Y3WR13T2H37NG3WR43RSO3WR635WJ3RT12MQ3WR93R2W3SC53R2Y3WRD3TGM3QK53Q923QTT3QK93WRK3QTY3R3A33U9367P3QKI32EL32Q62HE3B0I3SCQ3RKW3RM13UYM3RLY3R4G34O53R3Q32EN3R3S32EN3SD53RTR34AS3W273CFR3WT833GX3SDC3WSE3QAD32GK33253WSI334W3RLK34RY33253WSN3WO434NR39H033C731573HOH3QVD3HOH3QBQ3R4K3SDZ329Q3UPU3SCQ3UPU3RTY346Q325F2HE3QM332HU3JHA3QA73R4Z3WTA346B32Y13SEL3VI73QW03R573QAW3VMD3QBU33183QMM3DLX3RJ832AY3QWA36BF3SEZ3TFQ3UWS3WKK3QMY3RIK3QCE34IZ3UXF32D327I3KME3ULO3PC93WHI3TER3UFD389X3TV533XT3X3T3SAO3X3R32BK3X8633RY33XM3TF5337O3UMA32ZV3X40322632PF2GB3VFI3WQC347234KW32C53TFI367S3TFL32T72YS3TFO3QWD3AW83TFS3WQ33TFV3X4J32MY3TFZ330T3X4M329B3FZU33MZ3TG73X4Q3FZY320Y3X4S34X636XJ3TGE37NB3TGG3RUM3TGJ3SC73X593R3332ZI3TGQ3LVY331L3VHZ354T3TGV3RUM3TM835QE3TGZ32443TH1338O3TH434YM3WJ63WJ533U93UNI32BQ354F33J22HE3D703WS03SH633HY3TN02HE3T5I3TOE39823REC3E993THM324U32Y13THP324B31AR32G031433SLD33HJ3SLD3THZ36IN3VED3R4535HS32VE33253TNN37OS36ZL368D3RTW3VDL343E3VEN2AK3VGU3RLW324U3RZU3XAJ3N0T32CI382S3X5L26M32G63QAV3SLQ34UY32HN3QKX346Q32HC2HE3VJM3QL22793XBX3TOF3TJ33XAZ3R403TJ7321K32NI3X7738AQ32EQ3TJE32HU3XBH321V3TJH321V3VEQ3AV23T3I32AY34F83TJN32ZH32273VB63VFU32913TJV321R3VKX32IN3TJZ32A33TLQ331731ZX3VG7336I3TKC3VAC3VGB3TKG33693X3O3W0R32BT32S53UMU3TVD33S432K5336E3VGN332333EW3X402GL3X4232ZV21N3WK73TL23VGX33FE3VGZ3TLA3WPA34943VB5329P2NU3ILE3VB83X4H37N33VHB3RX4330Z3X952CR3TTQ34Y83TLS3SXM3VBM2BO3X9D35ET3WHR3T2J3VBS38AJ3R2Y3VHS3X9T3VHU3X9W3S0S3TMB33RX3VC433TR3VC63UNJ3VI43VCA3XAR3VI834AH3TMP33GJ3VIC38M131CW37C332C931433X5K3X6Y322Z32M13TIL342H35H62HE3LE73VPB3XFI32HU3XFF32Q33THQ3XAP3TNA3X5Y32NI3TTD3UZY3U883TOP3VKA3VJ83TOT3VDB3XB732KD3UQ235GV3RLK35RE33253VDK32EE3VDM3U523VJN35FT3VPB3XGD3V4G32T535QP34I13Q8A3XFD32HU3WNN3DPQ3U033XFO3XAA3UFI3VK535EJ3VP53TTJ344R3VJ73TI23VKC321K3XB33TOW3WOU3VKH3SO2330H3VKL3VPW3H9N32YH3VEX33JZ3TPC32TL2CR3T1V3TPH3VF53VQ83VF83HA13TYI3UHR3JNM3VLQ340W3VBS3VLS33Z53VLV32BH3X3O3XDD32BT32K53UMU3SUS3UWI32BN32C53VM637SK34K73X402HE3XDM32MY3AVQ3VMD3UWU37H0338P3VMH3UX03UWZ34943UX13XHF3WPI3QSW3XE23XDL38WE3UXA342C35WT3UXD26M3W813VMZ35ET3VN13WQW37NF3T2Q3W1M3VN83UNF331O3XEV3Q9A3VC83QM13VNG331O3VNI324H3VNK343G329B3VNN34G4343I343N3VNR3XJO3VNU3TZ8321I32573XFA329Q32X13T3J330S3XFG3VS63WNO3XK032HU3XJW3UYR3X5W3UON3S1433B8325B3VTX3VOH32A33XKB32HU3VVL3V0037BU3UOX3VJD344Y326533253UP23U0P3RLK32F833253VOW331Q3VOY2LM3VP031EM23Q3WT5328D3XKZ33E93TU93UZO3XBV3OBB3VPB3V4O395V3VPD32EW3XBU32LB3OBM3VPH3XLF32HU24F3VPK3XKI3VPM3V043VPO3XB7346A3XKR3VPS35OU3WU73WJG3V0E3VPY3FDE3OED3VQ1329B3UQI3VQ43UQL38ZI3VQ73V0Q3UFR34743T0A33WF3TYI3QRU3I1E3R1J320D3LVY320H2AW320J34WO3X3O3XI232BT3UWJ34E63X8A33EU32C532MJ3UM934X03LZ2321A3XIB2GL3U003XCE331P38AG321Y3220322234KV3X8I3228372U3UN53XM423I3TYI33FH3TLM36XJ322S3S1L339237AU33T62HE21E3WQU33FK3XEC323F36MO323I3SYC3TGY3R2Y3VC334K3323W32UF3UNR3XJH3Q8X3VGQ32EE34FP35AJ36YJ32EM3XA034A03UY035AX343L32MZ38363TNV38GG3XOK383C35WT325A332332882HE333Y3XK13XOS32PW3XOR3WS932A33XOU3UYT3XH433333WDX33B8321O22A3U0Z32A33XP632ZA22B32WC32VE326N34CJ326S35HS32WE332533I4355A32QO3RLK3XC733VH332233WE3355333Z32452123XOX2793XPV351T32F43XBM2113XL035CS3VP521N3U0332853XLD2HE333F3XKC2793XQB3CSV3XPC37I03XKJ3UZ8328P36OM346A3XPO36TB345935BR32T53XLX321V34CV3G6E21J32YH353Z329J358H32TG33SV23932T53VQA321V33WY32A034IZ334L33173RJ53I1E33EI34E0348833RV3U353RD43UM23R1O3XMR3WLT33EW3X8A32KF3T2334KG36MC34EH3X403XNM32CF1R3XH7330J33SN341S3490330S33FH32CV349532CY322E2HE113TYI2HE3XE23QMT33T23RXQ33183X95313O25X33FY32EN3T3D33TC32LG321332DU321Y3X9R3Q8X33TJ349U33RX3XOA331U3XOC32MT312M34A2339N33TU34FT32PD3TMM34AB32EW34AD32V334SK33GZ34AI32F533U834AL3VLX32OS3X5K3XL626Z33IU346F33IX3780335V3XBM26U33IN328D3XTV37LF33HL32HO3XK632Q43XAS34B326R33HU32HU3XU634CH333I3XPK35HS3XPM34BE33IA32OZ3RLK3XH233VF34BL327B34NR27033C634BQ35TM3XTW3CZ93XTR39EZ33DT37BR3XOV384B3XTP3ABU3XU033343X6X329Q3VYC35BQ39X533JA33W63XPF334S36E53XC83XUJ33WD35OU25J33DT34CV32QZ32IM3JWY33JW335B34D433K1367X313O3P3S329134DA32ZH32J93V153JXH338J35F93URB3RCT3WKJ3U393GFR3R843VL727921Z338Z33XB3UF232RZ33XF3W013RJA337U34K03TQ533LM32SB3TQ8352L34K73X8A33LV3UMU3RK8359C33XM3TQJ330C3X8F3TVQ359K3XIB2BO25133MA3TQT34KS33FE3Q8P3TQX34KX3494379X3V0N2BO33CW34L33X8Z3XSI38WE3TR933173SWC33T62MQ2263XSM34LF3XNS33N33X9D33N3321Y32UE332833NA3TRP34LP34G33TRT33NH324533NJ35XN32NJ3TRZ34S73TZ63TS334M532UY36J53TS733AJ34MC3TS933AM3XTK326R3XJU2HE22S33CM37RC3XTT3XL624333CA34C53XUU34D03XU032W03XFP33B63XU432GG230335V351E3XZ63TTZ33P13TT03U1N33253TT43AQ03RLK32OR3XB43TTA35DM31ZQ2463XUP328H3PXU3XQC3PY832ZA3PZF36RK3TTL329Q23B3XYR32A33XZY3TTR3XV42HE3Q1I36V432A33Y0533W434ND34ON33QF33QH32GJ3XC83XZI3TU635OU3XZU32Y834OY26N3U1V372H23733JW3TUG33R033R232TL2MQ3PV23TUM34PG3SMH3TUP34PK3OM1338J33RG337A36SG33XF3QJE32B133XF31LG32JH32Z62E12YS2RO3EJP3LNN24Q335V3UC03PPO3SPK3BWM3PVN31ZD2313NM53Y1R3KUA3Y1Q3Y1V3Y1U3Y1X3SGA3Y1Y3Y1T3Y1Z3Y223Y213Y243Y1W3Y233Y263Y253Y203Y283Y2B3Y2A3Y2D3Y273Y2E3Y293Y2F3Y2I3Y213PWI3Y2C3Y2J3Y1S3Y2M3Y2H3Y2K3CP73Y2P3Y2T3Y2G3Y263PWP3Y2U3Y2N3Y2V3Y303LV43Y2Q3WZ43Y2X2DK3Y333Y313Y373Y2Z3Y3A3Y393Y3C3Y2Y3Y3D3Y383Y3E3Y3H3LOO3Y3F3Y2I3Y353Y223Y3M3Y3K3Y3P3Y3I3Y3B3Y2O3Y2E3Y3O3Y3R3Y2R3LRB3Y393PX13Y3T3Y3S3Y3G3Y433Y423Y453Y3Q3Y443Y473Y463Y2W2XK3Y493Y3Z3Y2S3Y483Y3W3Y3R3Y3V3Y1Y3Y4J3Y3N3Y4F3Y4A3Y4K3LSH3Y4E3Y3Y3Y413Y4D3Y4H3Y4G3Y4W3Y4O3Y4Y3Y4U3Y313Y2L3Y4X3Y2H3Y4L3Y543Y4N3Y503Y453Y553Y4T3Y4B3Y533Y5C3LR83Y4R3Y5F3Y5B3Y5D3Y5J3Y4Z3Y4V3Y5L3Y5K3Y3K3Y523Y5N3Y4Y3Y5A3Y5O3Y4I3Y573Y5E3Y583Y3X3Y5H3Y3U3Y4Q3Y5I3Y5R3Y5Y3Y5M3Y653Y5U3Y683LOL3Y583Y4L3Y5T3Y643Y5M3Y6D3Y673Y3A3Y403Y613Y4S3MUY31ZD32XF3Y6M3Y6P32CG31ZD3U0V3S6X3NM53Y6T3Y6R3Y6U3Y6Y3Y6X3Y703Y6W3Y723Y6S3Y743Y6Z3Y733Y763Y753Y713Y793Y773Y7A3Y783Y7E3Y7D3Y7G3Y7C3Y7I3Y7B3Y7K3LOO3Y7J3Y7F3Y7N2AW3Y7P3Y7R3Y7L3Y7H3Y7T3Y6W3S6Z3Y7V3Y7Y3Y7O3Y7Z3LV43Y7P3LSJ3Y7S3Y6Z3Y6O3Y703WUL340832503V5N2CB29823U3V5R2GG23Q31DN2O531L622T21T3W8A29W31DE24Z22A23G1I2491B2NI2FD24Z22R21W21I3X2027D3X2231M524622L22R21I23X1I26X1K26221W22521225X31412ZY3Y9723H21M23W1E25D3LHM31G01L26E23B29431W424N24D24V314R22R22K21I2571725J314Y2RO3W932A723R3W963UB03UB23UJT3W9823V3W9A29A2XE2YI2PI3TBR2PN3W8G3W8I3RPC313K3W8N2CN3W8P2AN3W9X3QFQ3UUX3UKF3X2O3QG13VYP3X2U3S8O3X2W3UKP3V8T3UV93VYX3WAF3UKV3V8Z3UVF3VZ33WAL3UL13V953UVL3VZ93RHQ2AU3CMA3SKZ33S43WU33URC3SA83Q6K3QRP3X3L3YBX3SAF3XTK29Y3VAL34113VGI3WHY3X3U34A93SAR32ZI3TZQ2GB3WGA3UY632WZ31L53WBM3QSD3Q7D3WQD3X493QIS3X4B3SB63R203S1Q3TVM3Q7R3VB93T1R324A3X4K3WQQ343I3SBJ3R5E32U43SBM37GE3R2F329Q3TWN34KD324A3X4V3T2O3WR33SXR3QTD3X5037H33X523SC33QJX3X563WRC343E3X9M3QTR3QK73UNS3QTV3WRM3QKE3X5G3QKG31BA3QKI3WEH3LHW3SCP32HU3FR93VNY3FR93QVD3FR93RTY328X3Q9Z324U3TX73R3U3X6032HU3RTR3X733SEG3RUF3X683R3U33AK3TJ734MC3S033R5432523X6G36YF3WSP3GUF3QAS3GR43XBP3G4X3QVF34I131573WED3RTU32ZA3VCV3WNK31BT3VNY321H3XK13YF73SEF3X653SEH3QVW3TOQ3QVY324B31CF3WTF32HU3H293UMF3X7E3XCF3G6E37VK3WTN3SEY3WTQ3TFQ3WFH3X7P3QWH3X7R3SF73C7G3V0V382J3VFD32M13W103I813REC3VE13V1I3GZV3R7X3CKC32B73R8U3X7Y3UHZ3TEQ3X8032B63TVN3XTK3YC53X873VGI3QTJ3TKL32BK33253X8D3VI53R1O3WGA3XO62CI2GB3RXO3RM33X8N37TQ34KT3TFJ330S3X8S311G3X8U3WQV3WTR3AWR3X8Y3VH93TFV3YCU3X9233113VM9342E2NU3XCY32U43X993YD23X9E3TWN352Y324A3X9G3WMO3T423LVY3TGI3X573YDK3SXR3WRF2SN3TGP3UXO3TGS343E3XEN3VBY2CF3Q8U3X6F35XY3X79324Y3XA43WO33TH83XA6343I3XF63RUW3LHW3TN63YEV3TMX3VO326M3WJB3XBI2753YIS39OD3XBS3YE83XFN3YFG3BSO31433TNI3VE735PI3QL63TJ43XB03TJ7326V32VE32523XB535B63YEM354A32523VJK3VHZ3XBC3SIW3QVA316Q3TO53YIT3BWM3XBK34YX3VDV3EIR3X5T328D3XC032HI3YIX3UNT3VPF32FL34AS32FL3TON3YJ63XC33WJ333V53XC632GK328X3TJB33AD3XCB3AIX32CI3XCF38AG3TJJ3DLX3TP73LRH3XCL310Z3TUT3XCO3XDY3B3Z3XCR3WLO3XCU329A3XCW3NFZ33E23RAQ32RX32RZ3UBU3WFV3QHU3YGE32B63R2M3X813UHZ3YGJ33XT3VAL320H3YGN34YU3YGP29C3YGR34KG3VCA3TKT3WPT32MY31BA3YGX3SQU32913TFF3VAW3X8P329Q32LA3YH63YH53YH93TFQ3XDO3YHC3RS034LZ3TFX3QTA32D33YHI33T62NU3WOR3YHM329Q3YHO352Y3YHQ320Y3YHS3VBS3WHS3YHV3TGH3WHI3TGK324U3YDL3Q913YI33VN73YI53X9S331O3YI83XNX3YIB3XA03TH33XA53VHZ33A533N332BM35L33VIE3YIL32MB32O93YIO3YND3VNY3YND3TIL3YND3X5X3YE632GK312M3YE932712YT3XGT3U8P3XC236NC3YJ833V53YJA32GQ3YJC3VKC3YJE3XB8363I3YJI3Q8X3YJK3EC63QLO32E03XGL3KNE3TY73TIQ3LHW3WP13QVD3WP13YNK3VPF3A763R3W3YOK32HU3AKV3YNT33RQ3XC43YK93WE33YKC38AQ3YFH32T93QAP37K932T53YKI32CJ3YKK34CZ3XE93XCK3VGJ33JZ3TJP3XS8329B32LK3YKU3WBO3YKW3RWR3VOI3YL03TK832Z52AJ3IUN3UGH3YPM3V1I3S9D3RQO3L233UVS3YBW3TKF34JN3VAA3VGA3XD43V1A3WQ03VAG32ZX3VGH34WO3VGK32ZI3VGM348M3VGO32BQ3UWM34WY3YCX32ZV3UVR37SC3VAX3TL33VAZ320Y32LA3VH13XDU3X993YKS33Z13VH83R283YHF3VHC349A3YCX3VBG3SGA3VHI3WE43XED3SXK32TM34XR37H33VBR3TM13XEL3YI63YMY3X9V3VBZ32BN3XER3XNZ3TME3XJ933G63XJB331L3VI637IN3VNO34E03XF233TR3XF43VCI3YIJ32V33WOF32T62JT3VJX3VE83VP532WB3YIQ32B13VPB3YS4387W3XGP3YJ03XK53YNO32573WRZ3XFU32A432WC3XGY32OS3XFZ3TI932523VDE35GV3YEM35RE32523XG8324B3XGA34PL3XPT37BA3VO03XLI3XGH3VDU3LHW3WT73YJP3YT23VCW3YNN32PW3157249334336FU3YSG3VEC3XGZ3TOT3XH13YNY3XH338383VEM35OU3XLJ3T4D3VER3XH9372H3OGZ3VKP2GB3VKR3XHE3VKU3O2132913XCU321R3XHK3QJP35N23XHN3RY83VLP3QTA3XHR3VLU3UW93XHV3R5G3WQ23YQ63YI3348B3VM33YRE3RJT348M329I34K73WGA3SZ0341J3YIR32T5341N3SES3UWW3XII3XIL3XIK3UMO3VMM3TPE26M3U003QSW3YHD330T3YHF3XIT32LM3YLQ32312GL1D3WQU3UN53YHO342P3VN3322A324A3VN635QE3XJ63VHZ3UXS32UF3VND33G63YQA33TI3XJE3XO23UY2343E3UY433LB3YCD32EW3UY834E03VNS37VN3UO133U93WNX3UYG3YRW31573XP93XJX3G003VP51Y32O13VJV3OVR3XK13YWJ35DN3XLB36N93XP035RE3UOQ3JPC3U183FHU3XLK332H3UZ33VOM35MM32523XKO3VOR36O53T3W3VEC32MX3UZE32R031ZQ3OU73UPC3OZ13XK13XQE37GT3XL43UPJ3VJV21P3YSX3CU73VP53XNP3UZT35DZ3YT733KH32XG332V3YWV34653V03344X3XLO32853XLQ3VEC3V0A33RM21Q3VPV34SO3UQD3AV23XRA3V0J3XM13V0L32LC3VQ53IPY3XM63X8N3XR5347534IZ1932PS32RG3SAE3XW73S5N378I33B233LF3W4Z34JD3RY83Y143S9H27Y1U32Z932HU3YZ032ZA33DI325X3TX53WGD358Z3VBS3TXK34WT34WW3YZD3TXP32KI3XTK3XSD3XWV3VGI313O3VAL352Y33253TY03TR736Y33YLO3W3V32KY3UOP3XVJ3TY832UO34R43TYB359X3TYE34RB3TYG2XL32ZG35FE33923QK432LS3TYN34RL3YQX323F33AZ32U4353R3YHO34RY3TWN3RZW34AC33223TZ232PD3TZ43XYB34YO33AA3TZ93XJT3TZB34S73TZD34YY368M372N34SX36OI34Z535B634SV35B733U937CU38B63YDW32MB2E53XZR3PK533AX31573Z1D3U0129D3XU033B63YNL34U63TX7320N32GJ25E335V36AR3Z1S32ZA25F33I035C63U0I37JI325235Z939VW3WSE363V3YSL39A03U0T35NV25P3XZO321O3PLP3XV73C3J3XYY33C532913U153LHW3Y1J3Z1E3Z2M35BT32453VNY2Y433BB32HU3Z2S33W43U1K351K35DH33C23YOU32WE3YOW3U1S32A33Z2I36I3351U34CQ3U1X34IZ24M33JW3U2135233YXP3U2526D33DT3U2836BM35E73E4R3Y1334WB3S9H29Y2CE3UGH3Z3S3YYR33ZV3TXD32123IKZ34113RY23TW33X8S33E33W0133K93TVP3UMU3X3V3T123XWZ3SU433Y435K131RS32J53QI5316Q2CA33593UFC3T8432PS3UCQ3YBO3PZK31ZD3U0B3PZI3NM53Z4S3Z4Q3Z4T3Z4X3Z4W3Z4Z3Z4V3Z513Z4R3Z533Z4Y3Z523Z553Z543Z503Z583Z563Z593Z573Z5D3Z5C3Z5F3Z5B3Z5H3Z5A3Z5J3LOO3Z5I3Z5E3Z5M3Z5G3Z5K3Z5P3Z5N3Z5Q3Z5O3Z5B2AK3Z5U3Z5T3Z5Y3LV63Z5O3LSJ3Z4V32YZ3Q0L31ZD3XNE3QWO31ZD32Z82DK3Z6A32ZB3Z683Z6E3Z6D3Z6G3Z6C3Z6I3Z693Z6K3Z6F3Z6J3Z6M3Z6L3Z6H3Z6P3Z6N3Z6Q3Z6O3Z6U3Z6T3Z6W3Z6S3Z6Y3Z6R3Z703LOO3Z6Z3Z6V3Z732AW3Z753Z773Z713Z6X3Z793Z783Z6B3Z793QN63Z7B3Z7G3LV63Z753LSJ3Z7J3SGW3Z7H3Z7A3Z743Z7N3Z7C3Z7O3Z7S3Z7R3Z7U3Z7Q3Z7W3Z6F37363Z7V3Z7P3Z813Z7T3Z7X3Z833Z823Z7L3Z863Z7N3Z7K3Z7E3LSH3Z6C23E31ZD3Z8E3E6X31ZD23A3Z8I3Z8K2DK3Z8J32L73Z8L321Z3Z8P3Z8N3Z8Q3Z8O3Z8U3Z8T3Z8W3Z8S3Z8Y3Z8R3Z903Z8V3Z8Z3Z923Z913Z8X3Z953Z933Z963Z943Z9A3Z993Z9C37363Z983Z9F3Z8P330M3Z9H32TB3Z973Z9L3Z9B3Z9G3Z9N3Z9M3Z9C3Z9O3Z9R3Z953LSJ3Z9S3Z9V3NM53Z9S3Z9Z3Z9Q3ZA03Z9P3ZA33Z9T3ZA43ZA23ZA53ZA83ZA73Z8S3Z9E3ZA13Z9J3Z9B3Z9I3ZA63ZAD3ZAH3ZAF3Z9K3ZAK3ZAJ3ZA93Z9U3LSH3Z9W3ZAQ3Z953U0Y3SIZ31ZD3ZAU3BDV3NM53U132753ZB03ZAY2DK3ZB23ZB531ZD3ZB63ZB13ZB73ZBA3ZB93ZBC3ZB33ZBE3ZB83ZBF3ZBB3ZBH3ZBD3ZBG3ZBL3ZBI3ZBM3ZBK3ZBN3ZBQ3ZBP3ZBS3ZBJ3LOL3ZBO3ZBU3ZBW3ZBY3ZAZ3ZBR3ZBX3ZC13ZBW2AK3ZBZ3ZBT3ZC63ZC23LV63ZC43LSH3ZBG3ZC531ZD3XR32753ZCG3DMF3ZCF31ZD2363ZCL3ZCN3YIU3ZCO3YUQ3ZCP3Z8V3U172753X043UTD3V8L3R9R3OA63RNH2B8335I3IQU3UFQ3RCH31HY31I031S731I329A320O3V9A32C43SM83LN43V3M3BFH31ZD3U2C3N5X3UFQ2RB2I524L3SRO2PJ28N3W903UB231ZJ2573PBC3L8S31I031DE23Q24X31RW31UW31OA3SRL3ZDA31IC23P3UBN3UBP2B832BM3WFP3LNJ3R8W3VA53RI03V9S3S6D3RE23UC131ZW32AQ28Z3RAI3H9H3S6E3ULH3S5Y27032L031ZP32ZX3RI032023RWM337B2AJ3TV433RU3WGL3ZEX33S43ZEZ3S9T3SK433RU3XD03V9Y324022J31ZD3ZFG3Q233ZFH3ZFK3ZFJ3ZFM2AW3ZFI35QF31ZD22G3ZFR3ZFT3NAB31ZD22H3ZFW3ZFY3NBS3ZFZ36YG3RBM31DE3ZDO3ZDQ2O43UDJ326G3W9131ZJ24T3ZDX38MM31I031OB27T31I431ID31I13ZGH31IB2YT324G3UF33ZEC3VZP3UF63RI03UDW3WFS32AZ2AJ3BHG3LNN380R3ZET35I536SG320527I3RAE373432HU3ZGY3V9E3V9X32HU3RAZ3ZH033ZV3S5Y3JR032AO3QJM3UCQ324G3XP63NDS31ZD3ZHM3YWE3ZHN3ZHR3ZHQ3ZHT3ZHP3ZHV3NM53ZHP3XPB2753ZHZ26M3OVR34083ZDN3UU23ZG63ZDS3YAF2OB3ZGB3ZGD31HZ3ZGK3ZE728Z31P525Q3LLN3ZGQ3UGY3ZGS3S9W3ZEH3LNN3ZEJ389X3ZEL3T0U3RD33S6B32353RD43ZIU3ZHF35I53ZHH3ZF332AZ3UCQ31P521831ZD3ZJ62753ZJ83DL93ZJ73NM53ZJA3ZJE31ZD2193ZJG31ZD3OXA3RBO323U3ZIC31I03QQ33ZGL31I53GLW3Y9427G3QYD31D72LX3V7Z2TD3V813X2D3VXR28K31M53UJL2AF3TCL2A32A53S7Y3V3W3Y8H3Y8J2GE311Z25431082EQ2XV316031QK2FG2GJ31QK24O2A33UTX3UU82NX3ZKG31Q92A83ZD9317W32HA32AX3VZJ3OAV33U53SO03UYF328D3TJT3SNR3LT93STE3ZL53TTP3VZI3SAG3LM83QCM3UCG32B73ZLH3V103QWT3UR237MX32A13SO93SPD31ZQ38MB36SG3UH933RT32J33R8Q347W337J3ZLY3TPK3UHO3VQV34DQ31ZJ3SU23VQY3WPQ3RY83UHJ3TWG336N26G31BA36SR3Y1L36C23V9Y32HA3XPV33KD31ZD3ZMK26M3ZMN3ZMP3ZMM31ZD2133ZMS3ZMU3NG53ZMV3HM43ZMX3ZMT3ZMW39PO3BGU3ZN33ZN23ZN53DYA3ZN43ZN73ZN62103ZMX3ZNB3OYW2XK36Q93ZK13V853ZK43UU93ZK72A43W94318F2US23U2Z02XS3TBF3UFV2RB2R72R92PI3ZKP3UJB3ZKS23P3ZKU3TD931Q32OZ31553SN03VRK2DV3ZO32B52ZW3UG02493YB3319Y3ROR2582D83RA42I125A2A22AR31DK3Y8D23M3W943UEQ3ZG837OA3W9132EL3ZOJ2473ZOL24A31PX3ZOS2A73ZOU2T9319K2YC2UR2I126L32MW3ZP33W9431B524D2FQ2992O824A24D2VS2VU3TA131UX31L63ZOK31O82IC3ZK429831K93ZKG28F23X3ZKJ3UB3318G24624V310724D3VY02G92RO3ZPY3ZKI27R3UGB3SN13SN43SN32133QG23ZGG3ZE73ZGJ2B829R3SRI3SMV2WU3UK03SN03V7H3SNL2193QG231HS31HU21P26K26C21L22524E36NP22H3UUT2763UUV3YB03VYI3UUY3YAT3V713YB53QQI3VYR3WA93X2X3UKQ3V8U3UVA3VYY3WAG3UKW3V903UVG3VZ43WAM3UL23V963UVM3CS6378U3VXF3ISJ3SK13V4B3QRJ3FUM3UBT3R5V3VA53LQ53ZIO3ZLK3RI03UR23RI03VDH3WKS3QRL3LTX3UH428T29C3WFV3UWC3RIV3SU032K328T3VR43FUM3ZEX3URC3X8A347M323R3QN53TEK33NB3UHD32B73VRD3RWS3YH232T13RK53SGC3Q6J3RF13Q6Q33ZL28T37MV3PZI3RWR3ZT227I32433ZSS3VGA3R8U3TX23WG43TV82O63RIS3YZ1381032PS3J733ZLX3VQN33L53SKZ3ZTU37TG3Q6Q3RLF3KPN3QHZ3RL23T0U2FI3ZM632BK336H3UWC36SE33KT32K33VLN3ZHI32AY3FUY32AC32A33FUY3ZU139Q33Q6Q326332B13QHZ316Q25K3D703BNX3TMY328D3WDD38YT3ZTV32AY2B832Z532S23ZTT3ZV13KXF3ZLX3DYY3ZV33SAD3RQI33QY3T0R36DT3XHQ3TW33UW83UW83ULV334Z3Q7232QV321332K532GJ348B3ZVP3XWM35JC3XI63R2432KI3C1T329Q35ZK37UJ3QW33VME3XIG341S3YUV3UMO3XSF3YUY3S1P3YV03QB13QSW35I23YM936RN3VMT342B32LM35UZ3YVA3DC73XIZ35NH3UN7322A38993UXL372G3YVK32EN3YVM3Q8X3YVO33283YVQ3UNL34373UXZ3XXY339N3XO33YVX3VNL3XJJ3UNX3VNP3UY93XJP38AS3XF835I431CW3SDF33CJ31L5323E3VPB3ZXN33J231L53VFI3R4V3VFI328D3ZXP3XK5377L3XK7379E3XK93XCQ33B03OFN3REC33ZZ3XKH3YWW3VOL344X3VON38I93VOP3UP3326W377L33H037193XKT32E53XKV3UVW3YXB3BH93XK13ZYO33W232CI36N934I131L532J33VPB3ZYW32HU3QN73ZXX32PW31L53C8C3VPH3ZZ433W43VOK3YXW346832OS377L3UQ639M43YY23ZYR3XLV34ER3V0G34CZ2JH3XM0346R3YYC3UQK346X3JWH32913VQ83V0R3UQR34IZ3DMJ3SLH32AY3UGX32NU360X33S43QHZ3TXH32B636DZ32AN3WB337J53QRY3UW63XHS4100D3YUB29C32ID3ZVO3VLZ32ZI3ZVS337O3ZVU34K43ZVW3UWL3ZVY322F3ZW02HE3ZW22CR3WJU32IG3YUS3WTJ3YUU367S3VMJ3XIJ3YUZ32MY3VIN3ZWF3YHH3ZWI3SBR349C3ZWM322F322M3ZWP34U43ZWR2MQ3ZWT342P3ZWV3RYN3X9Q3UXZ342X3XJ83YVP3XEW3VNE3YVS324U3VNH3YVV3VNJ3ZX93XJI3YW03YRO324H3VNQ3UYC3ZXG3UYE3ZXI327731P532Q631L53VKO3YWD4102E3VLJ33AX31L53JY73XK14102K3VOA37EO3ZXZ31GP3YWR3TQR33PN3TQR3UOV3VPL3YWX3ZYA35MM37193YX1363V3ZYG346B3ZYI363S3YR3387P3YM33XBF31EM3KPN3XK14103C32Y83YXH358H3KWF3VPB4103I3ANU3UPP32EW31GP328831L53L5D3VPH4103R3ZZ74102W34663XLN3TI93ZZC410343XLS33RM4103E3W3X3XLW38LV34CZ3ZLF3LRH3VQ2346T3YYD3XM43YKM321V3ZZT3XM83V0S34IZ3YNQ3ZCZ3ZFD3W4Q3LRE3RI734G94104P32F43ZM232GK3ULN35ML410083LT43Q6J3ZDG3QWN378U3YY438M831ZD410533H6931ZD21O31ZD3YXJ3SPV4105A4105D4105C4105F26M4105B4105H4105E4105J4105G4105I21M31ZD4105O328K31ZD3XQ63DZ14105S4105V3SQ731ZD21K4105Y41060275332S4106231ZD410633YXR410644106826M21I31ZD4106B3DZ74106C4106F3BYW31ZD3XQW4106H4106K3LHL4106I4106N4106L4106J2AW4106Q4106S4106O4106R3CK74106W37MY31ZD31C13SQS31ZD3XNP2754107326M21F3NM541077275410794107631ZD4107B4107E4107D4107G4107A4107H4107C4107I4107L4107K4107N4107F4107M4107P4107O4107J4107R4107U4107T4107W4107Q4107X4107S4107Y4107M37364107V41081410804107N2AK4108441087279410894108C4107Z4107R410884107Z4108G410854108D4108J3Y344108B4108H3LSH4107B21C3SFE4108S3DAC31ZD21D3NM54108W2754108Y3SZX4108V410924108Z410934109141094410974109641099410904109B410954109C410984109E4109A4109D4109I4109F4109J4109H4109K4109N4109M4109P37364109G4109S410952AK4109T4109O4109W4109P4109Y410A04109L410904109V410A2410A54109X4108M410A73LV641090334I3NIN31ZD334N275410AF26M410AH410AH1C31ZD410AL3P0F3V563UFS3OBX3ZJQ31ID2YT3X233ZJX3VXM3ZK03VXP3X2E3ZK33UU83RCL3ZNL3ZK92A82RB24J3ZNP2OX3TC23ZKO3ZKQ28K3ZQN23631Q73ZKV3ZOD2CS2OE3YB326Y31JL2FJ3UJD31Q13UJF2HW2H421T2H62H82HA2HC323U317V2992A72RK23V3V4031S22PA3SMZ3X2J3UKC3SSC3WA13V8K3QFZ3ZRG3RGT3YB73UKO3V8S3UV83VYW3WAE3UKU3V8Y3UVE3VZ23WAK3UL03V943UVK3VZ83WAQ3QHJ3T6H3ZL03QWN25K3V233ZSZ3XFL3REC3WLM3SR03LSK3SJ83SO334ZL410D63ZLD3ULJ3SQH32CE35YB3UCF3SAD3UC63RY83RAU3VA53ZEP3ZF232Z62CA3ZS6410DP3FUM3STP3LQ5342U3YL73YLA3YL83TEM3YGI3TW13YGK3YLH3YGM3YQ233S432S53YLK348M33LO3YLN3VAQ3RW83YLR3BB73X8M32J63ZT6338P3YH43TFN322F3YH73U293TFP32BN36UP3QSS3YDU3TFV32A13YM73X933VHC3YMB2HX3QT03X9937TV3X9B3SZ33213352Y32A13YHT3RYL3SXR3YMO3X9K3X583YI03X5A3YMU3YVL3YMW3Q8X3YI73YRC3YI93YQ73TH0331O3YN33YIG32443YN6324U3YN83RX432MX323U32882GB3QVI3QVD3QVI32Q62GB3TIK3VQI3RV93YJZ3S153XAQ35QP3XAT3WEJ3YJ43JGV3YK63YNU3XGZ3YJ9334W32ND3YJD3TI93TWN354A32ND3YO43QAM34NR3W2M345C382D3ZUY3SYI34CU3YJS32HC3QJA3YJV3XKD3REC3LA23XAN316Q32EI325F2GB3UXF34AS3W45326J3YJ73YOR32GD3YKA34AG346A410GU33WH3YOY3UZS3R5B363I3YKJ3AV23A6F3LLF3YKO3YP832TM3YPA2NU38IU3TJU3YKV3LTY3YKX34IZ3AVS3VQE3LNN3TLE3R893S283COP3WFO3SU136NQ3RI03SU428T3X3O27I3SUC3ZSO3RDC32MT3UF93SL93TV83J6W340H3ULJ3ZEF3X883SZA3VRK3XD23YPX33XV3YPZ33U93VAF3WGJ410E93X5B3Q723YUE34A93VAO329B3X3O3YUL3VGR2RO2CI2NU3XBE3YQH3XDQ3TL43YQL3TL73XDV3VH33YQP3TJR3MWJ3QJ03YCD3QSW410EY3VBC33112HE410JM3YQY4102E32U43TLS410F63YR4324B3RLN3RSJ3VHO3YHV3YR83Q9A3XEM3YRB3RTA3XEP3VC03VHX3XES3VI03UNH3WCZ3YRK3YGT3TML3XF03YRP3VCF3YRQ3VIA3TMT410G03271410G2410H63N653YRZ3N5V32ZA3T36410G83DKW3WJS32A33VIR3T3532HN3THQ3T3V3VCZ38AQ32G032573S0Y34GT3T3M326J3YSH3XB53XG03V033XG23V0435GV3TWN3YJ73ZYK3TNZ3VJL3T46312M3WHA3UOB3WHA3T543TOA33CJ2GB3SPO410L93SPM3VK1410HE32BN3IF73YNR26M410ML3VJ63YTD32GQ3YTF410GP3YTI33RQ3YTK33RM3T4C3TP333SM3TP53DLX410393VEW3WGM36BF3YTV3YV03ZZL3XHI3X463YU13VL1410743VFB32B732RX3EDH3RI03ZT43WKU341R3R843KVW3TEH410J127Y3SK5335O3UI53RNH3T6H33593Z4M2DK410NX3KPM31ZD410O02AK410O01531ZD410O635UA410O731ZD1231ZD331C3FYT410OD31ZD1031ZD3YZ03X2R3NM5410OK3KY8410OJ410OP410OL410OR410OO410OS410ON410OV410OQ410OT410OY410OW410OU410OX410P0410OZ410P2410P5410P1410P7410P4410P8410P3410PB410OX3736410PC410PA410P62Y2410PH410PF410P9410PL410PK410PN410PD3R7G410PJ410PR410PG3LV6410PK3LSJ410ON3S8J3U3C410PZ39DD410Q034FD410Q2335R2751Q31ZD3XRY3U6E410Q83NM5410Q93U6C410QB410QA410QG410QE410QH410QD410QK410QF410QI410QN410QL410QJ410QM410QP410QO410QR410QU410QQ410QW410QT410QX410QS410R0410QV3LOL410R1410QZ410QC410QM2AK410R4410QY410RA410R9410RC410R73EBE410R2410RD410R5410RI3LV4410R93LSJ410RH3U6M31ZD1O410RP3P282XK324X3TC32Z43X1931FK21I23U315D22J26Y111K21Z33PI3TBI2YC3TBL2YG23U2ZV3YAO3W8D3YAQ3TBV3W8J3GL73Q662Y62AN31P52FM2993ZDP2473UUG3TAI3ZG93UB23ZI62473ZDR28K31ZJ2553X233ZIB2FI31MM31MO31MQ31MS31MU2YK3YAY3UUU3SSA3ZRB3W9Z3VYJ3TDK3UV03TDL3TC23V8N3ZRH3X2V410CJ3UV73VYV3WAD3UKT3V8X3UVD3VZ13WAJ3UKZ3V933UVJ3VZ73WAP3UL53ST932SS3O263RHV3LT03OJH3V9U3OKG3RB13QHN322M3L5732GX3LNB3UH53S6P3T0N3QN54104P3WGA3S1O3UHS32B63WGE3WL83RWW27Y321Y3TQ033RH3WBG32BH3WD63X9Y32WZ33XJ32CI2NU3T1935KC33FE3T1C34913T1E2QO3T1G410JI3T1I3W1Y3SUZ32P03W0Q34A93SV33RWU3T1R3RMV3SV83LA33T1W3YYB3T1Z3VAR3SVI34A93T243WHH3SVN3WHI3SVQ37NB3T2B3SVU3T2E321A3W013SBU3SW03SXR3WCL3RSP3SW537AV3WGH35EX3TGW2Z63T2T35XY3T2U35EX3UX436YF3WH333LB3WD83WEP3I5T34F03X7C3WON410WS3S0O3UOJ325Z3T4M32IL325Z3RTW382H3THQ3RU23UOB3UOU3SYL34LF3WEW3SYP3SXG324532EG3T3U3UZB410KE3T3Z32EG3WJ93Q913T443I3P3SXU3SD63WJK3LDY32ZA3V0C32CJ32MO3WT33QW83SY73KIN3T4L3T4X3WEI3VCO3C653REC3UPU3T3N3SYM326P3SYO410KE321K3QBE346A34FL324S3SYW3V0B3T553SZ13T573AV23VE632AY3SZ733JZ410J33TLC4100G32CI3T5K3W4E3476329A3T5O3RFF28Z3T5R3RQE3T8H3SOS3ZH23QNC3SAL3ZFC321I3WG332BQ3UQV3S6T3STS32C53WUE382U35YB32A13RAU3ZIL2LX3ZIO3Z413WKU3ZSY34KG27I32K33RD93WA3410ZK3T0B410ZB3484410ZP3UH02CA324D3R8M3LQ5410ZV32B73SZW320X3SFN410UC324632EJ3XW63PBL3T293STU3T0L3STY3YLO410UN32BT32JQ410UQ33233WB836XJ410UV3WHY3TVT3R1L3RMV3369410N93T1832J6410V6338P410V83SUT3737411162NU3SUV33RH3CVW3T1L410VH322J3YLJ38WE3SV433113VC1339929C3BOI410VQ3ZZN410VS3WE435KF3325410VW3WME410VY3T283QHU321T3SXR410W332MT3TW03SVY3WHI3TLZ3YHV410WA3WML410WD36XJ3VGI3RZ1410WH410WL3SXR3T2W33U932TK36T43WN33WJQ3F2J3T4H3BF93VJR3UYM2MQ3VJS3S0O3VJS3T3C410KE410X232EN382H320N312M3WJN3YWD4113335C13T4U410Y93245410XC3T3S410XF3RZY33H033JR410YG3WE93SXR410XN3N8X3QVA2SN37MR3WOI4113N3T52410XW410WR41039410XZ3ZVB410Y1362B3WT338M9410MG26M4113Z33W43T4V410YA3T4X3SYQ36IA410YF32MB410YH32CJ3SYX36LH410YK410EK35AX3XQV3TJL410YQ36BF410YS3WBW3YIS3SZF3Q6M3WFI3RY8410YZ3XR93T5Q3OJE38M5344Q410Z63SOH37MX410Z932463SUE3LNJ411543ZT7410ZF3IMH3LNJ3RBM3SP13UFH3S6M410ZN3ZEY3LNN410ZQ3RI0410ZS348M410ZU3S9Q4115B33S43W7F3UJ53ZGR410ZO410J14115I3LNN41105410ZT3UXZ410ZW3V9Y32KN27235PQ41164321F36M94116731ZE2AV3XUO3EHM4116A4116D411694116F32064116E4116H4116G4116B4116J4116M4116L4116O4116I4116P4116K4116Q4116T4116S4116V4116N4116U4116X4116W4116R4116Z4116M373641171411754116Y4117641170411774117A411794116G32KP4117B411724117E4117C411724116L3LSJ411783LV44116L27137AR4117Q32T24117R322B4117T4117P338C37ND4117Y4117X4118032214117Z41182411813XTO34XC3T2T41188411874118A3239411894118C4118B26X3Q982DB4118G36Y94118H4118K4118M32864118L4118O4118N4118J4118Q4118T4118S4118V4118P4118W4118R4118X411904118Z411924118U4119141194411934118Y411964118T3736411984119C4118P32DW411954119D3Q8V4119G4119J411974119K411994119H4119N4119M3LSJ4119O4119R3TH44119U32DZ4119V2DL4119X3XTV4119W32E23TMO411A3411A2411A5322G411A4411A7411A626S343N411AC323Y411AD32EH411AF411AB411AE3PE33S6T2763UTF3TC831ZM3UGE321B3V3K3OAI3UDB34M034ST3PGF3R9P3ULQ3WA431I927L31OD31OF3SRZ39EF31UW2I223L31OL410C531OO3UBD2DB2DD2WU3V6L2912FD23Q28Q3V823PVK31JN2YC327A3S603R7R3RJL3R7U39Q3410NN3R7Y3LNN3ZGY32ZA3ZGY3R8V355B32B13TEJ411BV3WKU3REG3VRM350V3REC3ZGY3YPQ3RWZ411C43ZIP3IMS3RAQ2MG3RDF3U383RER3WFV3R2M3S9S3LQ33REW3SFW3P9739E737KP38IP411CW38IF3CDU411CZ411CY411D134DR411D03CDW37AE411D6328V2AV266411D9411DB32JR411DC3877411DE3PIJ3SMG34DL3V713YAW2482AN3YAM3TBO410SE3ZOC410SG23N24M259254321U3SQL3ZS134033ZS33LRB4114Z3UCA323532022CN3ZS63IF44115A340J3RWH39PU3TVH411EA3ZCX32UG25V3BY1411EJ3B1M3CGF411EM3FKM411EN36SI411EP25S411ER3PN93LOP3T9X2IF411B22F431OG28M411B731OK31UK411BB2FP31OP31DZ411AN318I347C32M03UC53UDV337B3ZLP3RQE411FF3SG93SNZ2YA3JRE411FM2QP3EZC3PPQ3SMG3QE53QY92HZ3UKC3ZJV3UJG3QOX3QEF39PN3QYJ3QEK3QP43QYN3QEO3QP83QYR3QES3QPC3QYV31T13QYX3QF03QPI3QF33QPL3QF63QPO3QF93QPR3QFC3QPU3QFF3QPX1T1O25H26J22L31UB24R24L23O26B22G410CA3V8G410TF3ZRD3S8G3VYM3SSH410TL410CH3TDQ3V8R410TP3WAC3UKS3V8W3UVC3VZ03WAI3UKY3V923UVI3VZ63WAO3UL432BO3UL62CG3QRF3RNH3QHO3UCD3UDX3ZSH3R153YBV3WFX3X3K3SAC3SAF3R1D3QS03R1G3Q6X32ZX3Q6Z3X3W3R1L3RR83QS73R1O3QSA3Q793R1R3VF53R1U341S3R1W3YCN3UWM3QIV3X4D3RW23Q7Q3SBA3QJ23TQ3384I3QJ63YCW3Q773X4N3TG53YD03QJD3Q863QT43QJH329Q3QJJ3R2K411253VBS3Q8I3WMQ3Q9A3WMS3R2U32433X553RTA3SC6410FH3YHV3YI13X5B3SCC3X5D34E03WRL3R393WRN3X5H3R3E32EW3QU432ZH3Q9N3SCQ3Q9N3WDE3R3K3UOC3QVD3RL6411K13R4R3QUK3YE73R3T32453SFA34AS3WDU326J3WSC3YEG3WE33R443YEK3QV232133R49324U3QV734NR3QAR3VNO3QVC3YF13TQS3X6R3QVH3QKM3TIU3RTY32153QKP3R4W3R4V3QVP3YEE3YFB3X753QVX3X783R5532T63X7B3I5G3X7D3SES3X7G34CZ3SDX3RIE3YUC3WTP3QMT3WTR3W0D3YFV3R5O3YFX3R5R3TK13QN43RAO3QWP3R5W3V8L3FHA3W733LN83LCF3Z3C310I3G9N411M63G8Z411M72I6411M9411M4411MA411M5411ME411MD411MG411MC411MI411MB411MK411MF411MJ411MM411ML411MH411MP411MN411MQ411MO411MU411MT411MW411MC3OA6411MR411MP3G9R411M9411N2411MV411MS411N6411N0411N5411N8411MX411NA411N7411MV3LSJ411ND3LV4411NG411MC3PUE411EV3SK22Y3310G2RB2YG2G823P341R3YP52AK3R7R2DB38WL3WG03S613LSK32AQ2AJ3ZHB3TSH32353ZHH3SKE3TY6410ZM410J13S6P3NM53ZF73ZCY410TI3NII3RHX411BS2DK3OBM2DB32QX2DB3UCQ338825A3JH5411OS39VK2AV25B411OV3J9T3JU1411OZ31RT411P031M6411P233CS356W2AV411P52XF3PUT3PYQ3ZG431UY31RJ31O23ZJN2I531UU31RQ2T9410B43ZNN31JU24D31XG3TBM31JZ31S33ZQQ3SMX3SMZ3S5H3EIX3V3P340436SG3QNA411Q03REV3SJ8389X32ZA389X328D3SCI3SO63RAO35HN3KW23SPD35YB410DS3T0J347C411BZ3ZH83REC411Q9411PX33AF411QD3SOA411QF35ML3UHC3WG4347C3REA328D38GH410D032JM3ZL23T0U3R5Y3REC3L5J3UCQ32F43XX434PL2AV411R83L8Y411RA2DB411RB411RF411RD411R9411RI411RC2DK411RG411RJ411RM411RK411RP411RO24Y3L14411RT3L0N3PUY3PYQ3ZDN31P531OT23P3V7O3UFV411PD2I2411PF3ZD7411PH2O431UV27G2LX411PL31QN411PN411PP410SB317W32C53V503T023RWH348M3SK03STQ3P9X411PZ3V9N411QG33MG411QT33MG410DJ33MG347X3RDQ3Q6C3RFH3STK382P36C03YG13NMV3V3L3SKC3LGU2AV3Z4P23X2AV23U411TE411TG3DGW411TH39EF411TJ23O2AV411TM3OB2411TL3PV33P8B2XK323O411AQ3SJO39PU3UGH3QN533ZT3RWG3V4N32M12B83DC03W703KVW411NW411OK3YBQ3S5Z3NM53ZJ432X0330P2DB3SNI23S2AV411UI275411UK3J2M2AV23Q411UO411UQ411TP3736411PC2EU31RK411PG31RM411S9411PJ3ZKL2GI3193410SN2FL3SMY24731LC3ZDA3ZQP31S53ZQR411PV3ZDC411QN3V3O411PZ411R13JXM410NO3SJO3ZIT3W7N411QL3ZLD3KVW411QC3V9M411QQ3RF43VZO411QI3W4R35KH411Q8411VP3M26411QP411Q1411VU3T0J410DI3Q6M411QW3I3E3ZLD411R0411VQ3QWS3UGH411R53RNH32F424E2AV411WI3HEG411WJ411WM411OK411WN3AXQ411WP411WK411WQ411WL411WO411WU411WT411WX411WS411WZ411WR2AV24F411X2411X43MSE3PVB411RX2MH411RZ2NW411S131DX3V7P411S4411UW411S7411UY31RO411V029Z3ZKM411V331ML411V52D8411V8411SI3KGR3OYO3UC834KG411SO3V9N3SZV411VS3UF9411E832T1411Y2411SX3205411SZ3LO03EHV3QHL3KVW411T4373G3RQJ411T7411AT31ZJ324G2482AV411YJ3OEA2AV247411YN411YP275411YO411YR411YQ3AWZ2AV232411YW411YY411YT3J4E3PVJ411AU4115R3QG13Q0Y2AO411NQ2YC411NT411UA3VS6411NX3UF4411O03203411O233LQ33RM3RAZ411O737A53XKZ411OA3WKU411OC3RF43QHU3YB33SKB411U73S6O3OBK411OM3S60411OP3OFN2AV244412022AV24541205412073LBQ2AV3XYV3W804120A4120D4120C4120F3B3W2AV2414120I4120K411Z1373632EL2AO27R27T27V411Z723B2LI2H7411BG31B729131W42LD3ZJU290411BL2B823224A21O2103PNB25C23522X31TK24S24333WW3YAZ3QQ53YB13X2N411H43X2P411H63S8L410TM410CI411HA3VYU411HC3X303ZRO3YBE410CQ410TW411HJ3X373ZRV3YBL410CX3RHQ3MUT32063O6G411XV3Q0Y34WI3SA63UGZ3LQ33VZS3WL33RQP3WG43RD04104V3TPT3W00410US3WP83ULR32BT3TWZ3RR33UWB3R1L3XMM32UG3RX83QSC3WGR32IG3WGT341S3WLR34943WGX412343RXK3WBW411IQ4111F36843WM0321U3WM23WH636XI31M53W0Y3L3P3WC9329B3RY333LV3W16412313WCG33M03WHK35WJ3WMJ3RZ1411293T2O3WCQ3TKD3ZWW3RYO3W2I3WHW3WCW410UW4112D3RT63WI13RTB412493WI53QUM3WN24102B32HC31L53Q9N3S0O411K03QUH3TN031L53RL63SCQ411K54124K3WEN3VRD3WNK2HE3WIQ337X3XK1411KE3TOZ3WNT410XG3RZZ3271336Q3WE232NI410NK33N3336Q3WE83RSO3WEA38XJ3WO83YF03R5832HU3VD3348X3YRW31L53YF93S0O3YF936043W3I329Q4103P3W3D3UOB3W3G3WEU3WJX3XH43T3V3WK033GN346A412583WOZ360O3WK73WF63W433G6E3QJB3RVV4122O3W493WFF3RW2411LP3WPE411LQ3S1W34IZ3W1033B828Z3VG33ZMG3VG332AX3SPC25Q3BGL3SZW4122A3LDX3VA633S43ZH43UFA3XIX3S6432A33VG33RDH412723V9G4126Q3TP23ULJ3YS63BHH4114R2AW3XAI3WUA325F278321K3UGH4127K34C53ULH4126S4127C32WZ4127E34KT4122B33Q43V1U4126N3SOO4127N31ZD3TPG2AW4113P3KVW3XL94105031ZJ4122623F2AV412893E6X4128A2DB4128B3Q1P4128C4128H4128G4128J4128F4128L4128D4128I4128M4128O4128N4128K4128R4128P4128S4128Q4128W4128V4128Y4128U412904128T412924128I3SHW412934128Z4128E4128R3SI041296412914128X4129C412974129437SG412964129A4129D4129B4129L3SIG4129I3LSH4129E4129Q4129M4129F4129T4128F4129J4129U4129S4129E3P9C4120O3W753UAY4120S31DE24J22V22421323O1K29131ZJ2523UGB3UG22502T9318G31DA2XV24B28N2CF23222Y25C3YA14121I3QZN3ZRC3YB24121M3QZU3ZRF411H73SSL3V8Q3UV64121T3X2Z3ZRN3YBD410CP410TV411HI3X363ZRU3YBK410CW410U23QHJ3AXJ31ZE412283S6Q411CT411E9411YE3WAY3WL23T264122G3RWS410094122L4110134JU3WKD3VLS3TVP323R3WBE32BK3UWC3W0T3W0A4122W32BH4122Y3WLO412313W0I3RRL3WLT412363WLV3ZUB3QJ03TVB3YCR4123D32BN4123F34QA4123I411IZ32383RS73LM23WMB3VRB33LV321U4123Q3RY93WMH3WCJ410W93WHN3W1G3WHP4123Y3WCS3SBY3WMR412433WMT412463RYW412483WD33WMZ3RZ33SUC312M4102B325F31L53Q9P3S0O3Q9P4125S3Q9P3SCQ3Q9V4112Y3RMM411K733MB3RZP3QL13R4V3QL432A33QA63RVB3WDW412513WNW34S3412553TZA3WE53YMR3WSO3RUM4125C411KR32EN3QAU3SCQ3TIO3W3B4124F410XQ3S0O3UPG3PUQ4125Q3RK8412DK3UPL3QBB3WJW3RU94125Y32XX35RE3VRD3WF032T73WK53TJF412663WP33WF8411LI3TJL3W473WP94126E32ZI4126G3WKJ3S1V3W4I34IZ3SEE4126M3AX23Z4L412FL3NIK3UC532B13RCH338P4127U3V9E410HZ3XLT3REC3YGZ3SK9355D412FQ32PF4127G33RI32M13X8X35OU412G634CS3W70412G03P9B2VK412G33S5M28Z3YGZ410II3UGP3LRF32882B03AXA3UGH412GN32Y6327S412813GOG411FH3XL73RNG3LN8412BH3YV13Q1S3SIL412H03SIN412H23Q1R412H1412H6412GZ412H7412H5412H8412HB412HA412HD412H4412HF412H9412HG412HC412HI412HE412HH412HM412HJ412HN412HL412HO412HR3736412HQ412HU412HK412HW412H72AK412HV412HP412HX412HR412I0412H3412I1412I6412I33RBP3LOL412I43LSJ412I4412IB279412ID412H2412HZ412I2412IG2DK412IK412HB3P9C328Y411VA3SMW2G43UUO3ZQU2653V7J3UUY3UBA3ZNT411F83QVK3UBL411DR2FD2XC2PP31E03ZJT2NN31RN3V7X2FI31BR2AF3V6J2OW23V3PUX21B3TA825U27126S3VY9311Z31VZ2YQ2R82HW412JD23M412JF2OX253411Z631FI2VU2RM412JW23V2533V3V2EO2GD2Q23UBB2XV3UFV323U412K124A412KA3V7P31P5412JU412KG3UFV412KI27L2NZ31B72YZ411BM312022421K23Y123UB331L8412KO31E52Z031DE24X24X3Y8E2Z32HW412L32LA412L5246313931UT27L412KP3V3H3ZR9410TD4121J3VYI3ZRE3RGP410CG412B13VYS3ZRK3YBA410CM410TS411HF3X333ZRR3YBH410CT410TZ411HM3X3A3D3R3HQ1410D03ZM5411VI32JJ3UVR31ZM3D73411SY3STE3VOG35OU412MD410D02FD3W4P33RH3UGH3UE33ZHE33KN356V411Q23LQ53SO0411C1411QK32ZA3YCQ411QZ3KX23TES33KN3SOT411OH3H1U34WI3ZIS32Q8327J32AQ3UCF3ZU032QB32U33ZUS32B73QI533E53520411VX38GH33PQ412NB32B23TJX410D232B23TUE29C412NJ3ZU2412ND32363LE43QHZ323O3S6A4104T3UHQ3WHI3V4F3SAJ3RN63VGA411Y633723SNX3BMX3REC38D33ZHH412O42QO37MR3W7O3NIK412O232B1336N2V6322032JI412G427Y3FUY33RM3FUY412OC412373SMD412OG3R8I412ON347K336N31RS412OM412MB337I3RL93UYK33KN3RIC3Y163Y1D3IMS27I3TLL412OF3SLA32Z63Q6D412OJ3ZT3338P412ON3YG227Y3W2M33RM3W2M32AX412P83Y19412PA33ZL27I410K63RQD412OW3J73412OY39Q3336N31CW412P2411Y633RJ410XQ33RM3ZWE33XB411WB33XF3WB4336V410Z92F6412PE3KVY33XB321Y31ZZ33YH33XV412BM3WHY373532K03UM034DY34E23V9H3YLN3VH9330332MW410VU31BT3599412R034K931ZQ34EG321A3SUC35AT34QQ3QLM321A410HB348X32L332T6331T34ET32LA3RMN32LD32LB32LG33K33RVU3XIU32PV339034GE322S3XCL3Z083QLM34FC3YIN32U432TK33UW32M732MB350Z34FL34GE3XET3XO732UF34FR3UXZ3SXJ3XT832UF3XTA3RLX35GG31BT34S2354T3TRR33AK3XY434LT358B33VF35Y132NG3W2Y34GD32NJ3QC738UW334737W23TZS329B3363410MM412T43TOK412T634GT412T633UT3VEF32Q332W0320T33B8326R3BVF3Y063S7O3REC3VH733W434HB32I033I932OX34HE33P837EV33QF37DG34U63XB635CX32GQ38CD32GT3E7S3QLO3257410N934GT41110392F33CJ2NU3RZE410GJ3RZD32HN33UU320T3TIR3SLD34B63XAX32QH34IH33V434IK32QN32WI334V32HY39X3344S333W3HVC32CI34IV36T932R33G6E3WIS3LRH34J332RC36XI353O338X3SZM33WZ3XN33W0M33DF34JG2793TP233B827Y3TOD3TX232A33TOD412NR32IG3XMD38344110U35XY3SPH35932CA31RS3TGZ32S12IE323U3LMT32A1411YA3W5B3LNC3APP358H331L3YLN33LJ3WGT361I32UV36HI36SO361N412QY3VBN35ES32TM412R234XA412R43UXL31ZQ361W34RJ36CD38N433LB3R4C31AR411423UZN36CK3Y0M36TC36I636I93XGI36CR3TOE36BI4113P33MV412RS322J4125A322S36CZ37BZ3QAP36TR3UIQ33MZ36NC412S33T3S350Z35RE34GE363234YS36U336IV36U5368S36IY35Y336J032OS36J235SD36UE36ZJ36UG36J83653375N36JC36UM36JE36UO36E63ZKZ37DG3LYH32HC2NU3KY9355U3YZ23REC4104K3T4F3LDU412TJ275412YP32HU4104K36JU327236JW412UR36EP1M3235376X412Z03K8E3QL636L936K735TH32IM370X37XN389936VU36ON39S136VY387P4103K36FH3XFC412YQ412ZK3S9K32T5392C33J2410V4333B34ZR3VP539RG36WI33P03TIR3WNR37JQ3YOZ36K4333U36G936WU36LC364W36WX36OQ3ACG33RM3TSW35OZ366636X53AV232HC3LLF36LQ36XB366F36LU4113V35PE36LY36M03G6E3XE933ZL411IF31DT3Q7C3RJH410VC28T2BC32O532BA3ZMD32353UMS3ZMG3UMS3LDO3UCP3RNH3HQ123A2AV4131C32L74131D4131G4131F3SIZ2AV3XZY2DK4131L3DHG4131K4131P4131M4131Q4131O3ZB12AV2384131V4131X3ZCH2AV33IJ4131Z413222AW413213DMF41320413273YIU2AV2364132A4132C3SJ72AV2344132F4132H3GA92DB4132G4132J4132M26M2352AV4132P3ZCV4132Q4132T4132S4132V3MYM2AV3XXQ3H2J4132Y4133141330413334132X413342272AV413373X05413384133B4133A4133D3IPY4133C3RZD2AV2244133I4133K3HW84133L4133H4133M4133P3H3K2AV2254133S4133U2DK4133T2754133X4133R4133Y4133V41340413434133Z413454134241346413414134941344413474134C4134A413484134B4134E4134D4134G4134J4134F4134L4134I37364134M4134H4134Q4134K4134N39N24134I4134P4134S4134R4134W4134Z4134V413513LV64134W3LSJ4133Z2AK4133Z33HT27533HZ4135A2AV4135B26M4135E2202AV3X3C3ONV4135I4135L4135K33HE2DB33HB4135O4135R33HK4135S4135Q4135T4135W4135V4135Y2AV4135Z4135U413604136341362413654135X41364413674136641361413694136C4136B4136E413684135V37364136F4136A4135P413682AK4136J4135W4136N4136G4136R4136K4136T2AW4136O4136Q4136U4136O4136W3LSH413703LRB4135V4135E21S2AV413764131U3N3C2AV22N3Q203QWN2Z6412JT2KM412JV31OE2OX412JI412JK412JM412JO2FI24223122621R24Q1825U31QI31G931FI23Q23A2261X24F2132PG25D21W3PXJ3LO731P54137Q4137S2571925I1I26122031LN3ROR413804138224F21I2621825G22D22E182P83Y9L23B22L1X2SK25D21725E22A22E1J25Q22Y31RL412J1410BI2WU412J528X412AT3UKD410TG3WA2411H5410TK4121P411H8412B23WAA3ZRL3YBB410CN410TT411HG3X343ZRS3YBI410CU410U0411HN24U411HP35Z33PC23RE6412GB3ZGT411BX3WG3412FM3W7O3REY3W673RCW3S9K33FN3UVY352K3WPN3QHX3YBX411I13T0W3W083ZUE4122Q335O35PF35K0411I733RH321U3YC831L533L42GB411563SVD3WQ73YNP41230411IH3YCJ411IK3QIV411IM3Y0Z32MY3S1Q3WD43WM03UMA3T1R32C53YCV3UMT3T1S3X4N3W10411J04123N3YD33TL93SBQ3SBM337C3QT93YDA3YHV3YDC412D83WR7412443X543XEJ3UXZ3YMQ3R30411JK3X5A3WRH32MB3WRJ411JP3X5F411JS3QKG3WGA31EM2XE32Q627I3BS13SCQ3BS13RMI35H627I3DJM3QVD3WDS3W283SE53X4Q411K932TM3SD53W2M34AS3W2M328D3FR9411L63QA93WSD3QUX32NI321Y3X6B32VE3UXK34RY321Y3YEP3WJ734NR3I3R3XBF31573JHA3QVD3X723QBO3X6R27I4126A3SCQ4126A3RTY3SYD32HC27I3QVI3R4V3QVI3WEM3YFA413D6411L83XJR3YFF35L13YFI38LX3ZW43YFM3WTK3X7T3TJL3X7K411LM32TM3WTR36UP3WFK3X7Q3SF63R5R3A13410ID28Z4113P412N4412X9322J3STU3WPM411HY3X3J3YPU3ZM83SAF413AO35933TVP413AS413F43X87413AW3QID3WFW413B03YGU413B3412813RRH3X46411II3WQE3X4A413BA3WQI32ZI412GP3SBA413BG33WS413BI3WQP413BK3SV732BN3TPO413BO3T1Y413BQ320Y413BS3XWW3TKD3SVZ3QJN3YDB411JB3R2R412D9411JE3SC4411JH3YHY3VHZ3YMS35EX413C93QK83VHZ3SCE413CD3YDR413CF3QU233XH413CJ3MYC3WJE3ZZX32HU3XBX413GR3YJ33QVD3YJ33YJW3X5V3SXM413CX3SX2320N31BT412V334AS412V33RZS3X64413D6411KH413D93QV03R4632GQ413DD324B413DF37D33WE831ZQ3TN2413DK410L83YIO3VIN3WSW327W27I3YKM3SCQ3YKM413DV32PW27I4100X3R4V4100X413D53QBF3WJ13WTB34YQ3WTD413E8411LC35OU413HT3WTI410HV411LH34IZ3EHO3YFQ3R5H411LN3TFQ3ZXP413EL3YFW413EN34IZ3HLK327J3SFA3IMR3SFC3SPR3SFZ3RAO3RAN3RDW411YE3YG22CA413IX35OU413J7411C2355D3W7W3R8W3XW93PBT32ZG410ZE36BW413AJ413F0411I0413F1413AN34PW3ZIH3TW3413F6413JP3QS1331P413AX413FB3T13329B3T1532ZI4102M3X453YCI3X48413B83SMH413FL3YCO3RW23JDV3R23413FQ3YCB3Q7V3QSV3SBH413FV2GB3VP234Y83SBM3SVE413G03T213QT632C53YD8410W7413G6413BX413G83RSZ413GA3QTI3R2V413C3411JI3YHZ413C73X9N413GI3YDO413GL3SCH3YDS3R3D413CG413GQ325F27I3TTY3RTS413LF413GR3YND3QVD3YND411Q83U03344J413H33WTC413H53Z2Q3XPW3U8W411C03WSB3R4Z413HE32UW413HG3SDI3X4Q3VIA413HL411KP35NV3XFM3X6K3DPL3XAD411UB36BA3XQR3R4L413LD33ZH3WOA3TUR413CV413DW347Q326Q3XQ3356Q3VP53GV6413HC413I73WNZ413I93X4Q411LA3SYV413ID33RM3WOH4100Y35GG3QBV413II35VP3VO93X7J411LL3QMS413EI3TFQ3KW83SF33T193TJV3X7S35VP347E413EQ3P2N413IY413NK3WPJ3YU53VFR3SAA3QRR413EZ3QRS413F2413JO3X3Q413JR413AU3T113R1K3WQ2413AZ413JX413B232KY31L53VQJ413B5413FH413B73WQF413K7411IO32ZI3YTX3YCR413KC33XM413BJ3QSW413KH3CDQ3WQU413KL411J2413BR3RKC413KQ413G4411J83X4Y3QJQ413BZ3X513WR8413KZ3WRB33G6411JJ36HT411JL413L5413CB324Y411JQ413P93W0P34A1413GP413CI413MF3OE73WJE413PG413I12NO3WST3J3V413LN32MB413LP3QKX413LR31BT3ZEO3XBY3OBH3GLN413LW3YEF3WJ13YEH36XJ413DB413HI3QV33VI1413DG413HN2AK3YSD413M83W7U413MA3AXF3VP53YT2413HU413PJ32YG3WJE413QI412DV3T4N413DX26M37N23XK1413QP32HU3Y1R413MR3RZX413MT346B3SYS3R54413MX3QMF33RM413QF413IG3XN2413N435OU3WTY413IL3X7L3YFS32BN3VQT3QC83SUL413NF3YFY3Z7M413NJ3P2A413NL413RK413NN32A1413EX3R17413NS413RR3YYO336H413F3413JS3411413NX33S4320H413F93X3X413JW413B13T1S37N03U1Z413O8413K33SB3413FK3QIU413BB3QIX32ZI3OLV413KB4111J413OI413FT413OK3Q8035FH413ON36SO3WQX413KO34KD413OS411J7413BW36HT413BY411JC413KX322A413C2413P13QK0413L2413P4413C83YDN413P73QTW413L8413CE413LA413PD34US27I3ZNB3WJE413TG3B2Q3YWH413ML3OYT413QC413TM413TJ413MJ3WS5413CY413H626M410593R3W413TV35DA413PX3YFB413LY36NZ32UY411KK413DC413Q436XJ413Q6412RC3OYK3VP036IK413PL3EP13VP54108W3YEX33J227I410AL3WJE413UK32HU410O6413TQ32883VLF413MN410AO413QU3RUA413QW3T3X413IB33NM413E932A3413UG413N1413EC413R63JCS32YH413EG413N93R5J2GB21T3WTT413RF411LS34IZ410RQ413RJ32M1412N4413RM3F70338J3RDF2CF413J234KT3TK33R8E3PBI3V9G31HX413J032KP31ZV3R5P36SG347M3RIQ3S9G340N3TSV413VN3SG92YS413AE3V9Y413A421Y2AV413WD3N0V413WE413WH413WG413WJ3GTS2DB3XWB275413WN413WL413WO2AV413WP413WT413WS413WV413WR413WX413WQ413WZ413WU413WY413X1413X0413WW413X4413X2413X5413X3413X9413X8413XB413X7413XD413X63LOL413XA413XE413WP2AK413X3413XK413XC413WZ413XM413XI413XN413XH413XF413XS413XS413XP413XT413XR412I93736413XV3LSH413Y1413XQ413Y4413XX413Y5413XU413XY413Y7413Y9413Y6413YC413Y8413YA413WY413Y0413YB413XL3XWA413X5413XW413Y3413YD413YI413YP413YF413YO413YR3LSJ413YN3LPW413YE413YS413XF21W2DB413Z03DKD2AV413Z23N15413Z4413Z7413Z3413Z9413Z6413ZA413Z5413ZD413Z8413ZB413ZG413ZE413ZC413ZF413ZI413ZH413ZK413ZN413ZJ413ZP413ZM413ZQ413ZL413ZL3N1W413ZO413ZR413ZX413Z53N20413ZW413ZZ3N184140141404413ZS413ZF4140041406413ZQ41408413ZY414053LV4413ZT413XZ3N13413ZW4140B4140F414094140C4140L4140K4140M4140P4140O4140R4140D4140S4140N414074140H4140V4140Y4140P4140J4140T41412413ZA414114140Z414154140Q4140W3LRB4140O3N2C4140I414034140Z4140U414184141F414134141H4141K4141G4141M4141D2DK4141N414144141E413ZG41417413ZU4141S4141Q4141L413Z14141O4141Y4141I3LV64141B3N2E4141Z41422414213XBN2AV21X4135M3SG7');

local BitXOR = bit and bit.bxor or function(a,b)
    local p,c=1,0
    while a>0 and b>0 do
        local ra,rb=a%2,b%2
        if ra~=rb then c=c+p end
        a,b,p=(a-ra)/2,(b-rb)/2,p*2
    end
    if a<b then a=b end
    while a>0 do
        local ra=a%2
        if ra>0 then c=c+p end
        a,p=(a-ra)/2,p*2
    end
    return c
end

local function gBit(Bit, Start, End)
	if End then
		local Res = (Bit / 2 ^ (Start - 1)) % 2 ^ ((End - 1) - (Start - 1) + 1);
		return Res - Res % 1;
	else
		local Plc = 2 ^ (Start - 1);
        return (Bit % (Plc + Plc) >= Plc) and 1 or 0;
	end;
end;

local Pos = 1;

local function gBits32()
    local W, X, Y, Z = Byte(ByteString, Pos, Pos + 3);

	W = BitXOR(W, 238)
	X = BitXOR(X, 238)
	Y = BitXOR(Y, 238)
	Z = BitXOR(Z, 238)

    Pos	= Pos + 4;
    return (Z*16777216) + (Y*65536) + (X*256) + W;
end;

local function gBits8()
    local F = BitXOR(Byte(ByteString, Pos, Pos), 238);
    Pos = Pos + 1;
    return F;
end;

local function gBits16()
    local W, X = Byte(ByteString, Pos, Pos + 2);

	W = BitXOR(W, 238)
	X = BitXOR(X, 238)

    Pos	= Pos + 2;
    return (X*256) + W;
end;

local function gFloat()
	local Left = gBits32();
	local Right = gBits32();
	local IsNormal = 1;
	local Mantissa = (gBit(Right, 1, 20) * (2 ^ 32))
					+ Left;
	local Exponent = gBit(Right, 21, 31);
	local Sign = ((-1) ^ gBit(Right, 32));
	if (Exponent == 0) then
		if (Mantissa == 0) then
			return Sign * 0; -- +-0
		else
			Exponent = 1;
			IsNormal = 0;
		end;
	elseif (Exponent == 2047) then
        return (Mantissa == 0) and (Sign * (1 / 0)) or (Sign * (0 / 0));
	end;
	return LDExp(Sign, Exponent - 1023) * (IsNormal + (Mantissa / (2 ^ 52)));
end;

local gSizet = gBits32;
local function gString(Len)
    local Str;
    if (not Len) then
        Len = gSizet();
        if (Len == 0) then
            return '';
        end;
    end;

    Str	= Sub(ByteString, Pos, Pos + Len - 1);
    Pos = Pos + Len;

	local FStr = {}
	for Idx = 1, #Str do
		FStr[Idx] = Char(BitXOR(Byte(Sub(Str, Idx, Idx)), 238))
	end

    return Concat(FStr);
end;

local gInt = gBits32;
local function _R(...) return {...}, Select('#', ...) end

local function Deserialize()
    local Instrs = {};
    local Functions = {};
	local Lines = {};
    local Chunk = 
	{
		Instrs,
		Functions,
		nil,
		Lines
	};
	local ConstCount = gBits32()
    local Consts = {}

	for Idx=1, ConstCount do 
		local Type =gBits8();
		local Cons;
	
		if(Type==1) then Cons = (gBits8() ~= 0);
		elseif(Type==2) then Cons = gFloat();
		elseif(Type==3) then Cons = gString();
		end;
		
		Consts[Idx] = Cons;
	end;

                            local function createInstruction(instructionType)
                                local instruction = {gBits16(), gBits16(), nil, nil}

                                if instructionType == 0 then 
                                    instruction[3] = gBits16()
                                    instruction[4] = gBits16()
                                elseif instructionType == 1 then 
                                    instruction[3] = gBits32()
                                elseif instructionType == 2 then 
                                    instruction[3] = gBits32() - (2 ^ 16)
                                elseif instructionType == 3 then 
                                    instruction[3] = gBits32() - (2 ^ 16)
                                    instruction[4] = gBits16()
                                else
                                    error("Invalid instruction type: " .. tostring(instructionType))
                                end

                                return instruction
                            end

                            local function applyMask(instruction, mask)
                                if gBit(mask, 1, 1) == 1 then 
                                    instruction[2] = Consts[instruction[2]] 
                                end
                                if gBit(mask, 2, 2) == 1 then 
                                    instruction[3] = Consts[instruction[3]] 
                                end
                                if gBit(mask, 3, 3) == 1 then 
                                    instruction[4] = Consts[instruction[4]] 
                                end
                            end

                            for idx = 1, gBits32() do 
                                local descriptor = gBits8()

                                if gBit(descriptor, 1, 1) == 0 then
                                    local instructionType = gBit(descriptor, 2, 3)
                                    local mask = gBit(descriptor, 4, 6)

                                    local instruction = createInstruction(instructionType)

                                    applyMask(instruction, mask)

                                    Instrs[idx] = instruction
                                end
                            end
                            ;for Idx=1,gBits32() do Lines[Idx]=gBits32();end;for Idx=1,gBits32() do Functions[Idx-1]=Deserialize();end;Chunk[3] = gBits8();return Chunk;end;
local PCall = pcall
local function Wrap(Chunk, Upvalues, Env)
	local Instr = Chunk[1];
	local Proto = Chunk[2];
	local Params = Chunk[3];

	return function(...)
		local InstrPoint = 1;
		local Top = -1;

		local Args = {...};
		local PCount = Select('#', ...) - 1;

		local function Loop()
			local Instr  = Instr; 
			local Const  = Const; 
			local Proto  = Proto; 
			local Params = Params;

			local _R = _R
			local Vararg = {};

			local Lupvals	= {};
			local Stk		= {};
	
			for Idx = 0, PCount do
				if (Idx >= Params) then
					Vararg[Idx - Params] = Args[Idx + 1];
				else
					Stk[Idx] = Args[Idx + 1];
				end;
			end;
	
			local Varargsz = PCount - Params + 1

			local Inst;
			local Enum;	

			while true do
				Inst		= Instr[InstrPoint];
				Enum		= Inst[1];if Enum <= 193 then if Enum <= 96 then if Enum <= 47 then if Enum <= 23 then if Enum <= 11 then if Enum <= 5 then if Enum <= 2 then if Enum <= 0 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum > 1 then local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 3 then local B;local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
 elseif Enum == 4 then local Edx;local Results,Limit;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Results,Limit= _R(Stk[A](Stk[A + 1]))
Top = Limit + A - 1
Edx= 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Top)) end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];do return end;else local Step;local Index;local B;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 8 then if Enum <= 6 then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]]; elseif Enum > 7 then 
local A = Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
else local A;
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A]()
end; elseif Enum <= 9 then 
local A = Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
 elseif Enum == 10 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else do return end;end; elseif Enum <= 17 then if Enum <= 14 then if Enum <= 12 then local B;local A;Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]]; elseif Enum == 13 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else 
local A = Inst[2];
local Index = Stk[A]
local Step = Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 15 then Top=Inst[2]; elseif Enum == 16 then 
local A = Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
else 
local A = Inst[2];
local T = Stk[A];
for Idx = A + 1, Inst[3] do 
	Insert(T, Stk[Idx])
end;end; elseif Enum <= 20 then if Enum <= 18 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum > 19 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 21 then if(Stk[Inst[2]] == Inst[4])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum > 22 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];end; elseif Enum <= 35 then if Enum <= 29 then if Enum <= 26 then if Enum <= 24 then 
local A = Inst[2];
local C = Inst[4];
local CB = A + 2
local Result = {Stk[A](Stk[A + 1],Stk[CB])};
for Idx = 1, C do 
	Stk[CB + Idx] = Result[Idx];
end;
local R = Result[1]
if R then 
	Stk[CB] = R 
	InstrPoint = Inst[3];
else
	InstrPoint = InstrPoint + 1;
end; elseif Enum > 25 then if(Stk[Inst[2]] < Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;else 
local A = Inst[2];
local T = Stk[A];
for Idx = A + 1, Inst[3] do 
	Insert(T, Stk[Idx])
end;end; elseif Enum <= 27 then if(Stk[Inst[2]]==Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum == 28 then local A;
A= Inst[2]
Stk[A] = Stk[A]()
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if not Stk[Inst[2]] then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;else if(Stk[Inst[2]]~=Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;end; elseif Enum <= 32 then if Enum <= 30 then 
local A = Inst[2]
Stk[A] = Stk[A]()
 elseif Enum == 31 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local A=Inst[2];Top=A+Varargsz-1;for Idx=A,Top do local VA=Vararg[Idx-A];Stk[Idx]=VA;end;end; elseif Enum <= 33 then 
local A = Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
 elseif Enum == 34 then local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
else Stk[Inst[2]]=#Stk[Inst[3]];end; elseif Enum <= 41 then if Enum <= 38 then if Enum <= 36 then local Edx;local Results,Limit;local A;
A= Inst[2]
Results,Limit= _R(Stk[A](Stk[A + 1]))
Top = Limit + A - 1
Edx= 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Top))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]]; elseif Enum == 37 then local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if(Stk[Inst[2]]~=Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 39 then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum == 40 then local Step;local Index;local A;for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]();InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A]()
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];end; elseif Enum <= 44 then if Enum <= 42 then local Step;local Index;local B;local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum == 43 then local A;Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local A;
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];end; elseif Enum <= 45 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum == 46 then if(Stk[Inst[2]] == Inst[4])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;else Stk[Inst[2]]=Stk[Inst[3]] - Inst[4];end; elseif Enum <= 71 then if Enum <= 59 then if Enum <= 53 then if Enum <= 50 then if Enum <= 48 then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum == 49 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 51 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum > 52 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 56 then if Enum <= 54 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum == 55 then Stk[Inst[2]]=(Inst[3]~=0);else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 57 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum > 58 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 65 then if Enum <= 62 then if Enum <= 60 then Stk[Inst[2]]=#Stk[Inst[3]]; elseif Enum == 61 then local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];do return end;else InstrPoint=Inst[3];end; elseif Enum <= 63 then 
local A = Inst[2];
local Step = Stk[A + 2];
local Index = Stk[A] + Step;
Stk[A] = Index;
if (Step > 0) then 
	if (Index <= Stk[A+1]) then
		InstrPoint = Inst[3];
		Stk[A+3] = Index;
	end
elseif (Index >= Stk[A+1]) then
	InstrPoint = Inst[3];
	Stk[A+3] = Index;
end
 elseif Enum > 64 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else if(Stk[Inst[2]]==Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;end; elseif Enum <= 68 then if Enum <= 66 then local Step;local Index;local A;Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum == 67 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else 
local A = Inst[2]
local Results, Limit = _R(Stk[A](Stk[A + 1]))
Top = Limit + A - 1
local Edx = 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
end; elseif Enum <= 69 then if Stk[Inst[2]] then InstrPoint=InstrPoint + 1; else InstrPoint = Inst[3]; end; elseif Enum == 70 then Stk[Inst[2]][Stk[Inst[3]]] = Inst[4];else 
local A = Inst[2]
local Results = { Stk[A](Stk[A + 1]) };
local Edx = 0;
for Idx = A, Inst[4] do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end
end; elseif Enum <= 83 then if Enum <= 77 then if Enum <= 74 then if Enum <= 72 then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum > 73 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];end; elseif Enum <= 75 then Stk[Inst[2]](); elseif Enum == 76 then local NewProto=Proto[Inst[3]];local NewUvals;local Indexes={};NewUvals=Setmetatable({},{__index=function(_,Key)local Val=Indexes[Key];return Val[1][Val[2]];end,__newindex=function(_,Key,Value)local Val=Indexes[Key] Val[1][Val[2]]=Value;end;});for Idx=1,Inst[4] do InstrPoint=InstrPoint+1;local Mvm=Instr[InstrPoint];if Mvm[1]==218 then Indexes[Idx-1]={Stk,Mvm[3]};else Indexes[Idx-1]={Upvalues,Mvm[3]};end;Lupvals[#Lupvals+1]=Indexes;end;Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env);else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 80 then if Enum <= 78 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum > 79 then Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 81 then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum > 82 then Stk[Inst[2]]=Wrap(Proto[Inst[3]],nil,Env);else local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 89 then if Enum <= 86 then if Enum <= 84 then if(Inst[2] < Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum == 85 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];end; elseif Enum <= 87 then Stk[Inst[2]]=Stk[Inst[3]]*Stk[Inst[4]]; elseif Enum > 88 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else Upvalues[Inst[3]]=Stk[Inst[2]];end; elseif Enum <= 92 then if Enum <= 90 then Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]]; elseif Enum == 91 then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if(Stk[Inst[2]]==Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;else Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];end; elseif Enum <= 94 then if Enum > 93 then local Step;local Index;local B;local A;A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else 
local A = Inst[2]
Stk[A](Unpack(Stk, A + 1, Top))
end; elseif Enum == 95 then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 144 then if Enum <= 120 then if Enum <= 108 then if Enum <= 102 then if Enum <= 99 then if Enum <= 97 then local Step;local Index;local A;Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum == 98 then 
local A = Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
else if(Inst[2] < Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;end; elseif Enum <= 100 then Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum > 101 then local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if Stk[Inst[2]] then InstrPoint=InstrPoint + 1; else InstrPoint = Inst[3]; end;else Stk[Inst[2]]=Upvalues[Inst[3]];end; elseif Enum <= 105 then if Enum <= 103 then Upvalues[Inst[3]]=Stk[Inst[2]]; elseif Enum > 104 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 106 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum > 107 then local A;Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Env[Inst[3]] = Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Upvalues[Inst[3]]=Stk[Inst[2]];else local A;Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];end; elseif Enum <= 114 then if Enum <= 111 then if Enum <= 109 then InstrPoint=Inst[3]; elseif Enum == 110 then local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 112 then local Step;local Index;local B;local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum == 113 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 117 then if Enum <= 115 then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]]; elseif Enum > 116 then Stk[Inst[2]][Inst[3]] = Inst[4];else Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];end; elseif Enum <= 118 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4]; elseif Enum > 119 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 132 then if Enum <= 126 then if Enum <= 123 then if Enum <= 121 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum == 122 then local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
else local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A]()
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A]()
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];end; elseif Enum <= 124 then 
local A = Inst[2]; 
do return Unpack(Stk, A, Top) end; elseif Enum > 125 then Stk[Inst[2]]=(Inst[3]~=0);InstrPoint=InstrPoint+1;else local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;end; elseif Enum <= 129 then if Enum <= 127 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum == 128 then Stk[Inst[2]][Inst[3]] = Inst[4];else local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
end; elseif Enum <= 130 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4]; elseif Enum > 131 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 138 then if Enum <= 135 then if Enum <= 133 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum > 134 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;end; elseif Enum <= 136 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum == 137 then Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];else Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]*Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]+Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];end; elseif Enum <= 141 then if Enum <= 139 then if not Stk[Inst[2]] then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum == 140 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else 
local A = Inst[2]
local Results, Limit = _R(Stk[A](Stk[A + 1]))
Top = Limit + A - 1
local Edx = 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
end; elseif Enum <= 142 then local B;local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if not Stk[Inst[2]] then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum > 143 then 
local A = Inst[2];
local Index = Stk[A]
local Step = Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else local A;Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];end; elseif Enum <= 168 then if Enum <= 156 then if Enum <= 150 then if Enum <= 147 then if Enum <= 145 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum == 146 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else 
local A = Inst[2]
local Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])))
Top = Limit + A - 1
local Edx = 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
end; elseif Enum <= 148 then local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
 elseif Enum > 149 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else if (Stk[Inst[2]] <= Inst[4]) then InstrPoint=Inst[3]; else InstrPoint=InstrPoint+1; end;end; elseif Enum <= 153 then if Enum <= 151 then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if(Stk[Inst[2]]==Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum > 152 then Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];else 
local A = Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
end; elseif Enum <= 154 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum > 155 then Env[Inst[3]] = Stk[Inst[2]];else local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;end; elseif Enum <= 162 then if Enum <= 159 then if Enum <= 157 then if not Stk[Inst[2]] then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum == 158 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local A=Inst[2];local Cls={};for Idx=1,#Lupvals do local List=Lupvals[Idx];for Idz=0,#List do local Upv=List[Idz];local NStk=Upv[1];local Pos=Upv[2]; if NStk==Stk and Pos>=A then Cls[Pos]=NStk[Pos];Upv[1]=Cls;end;end;end;end; elseif Enum <= 160 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum == 161 then 
local A = Inst[2];
local Step = Stk[A + 2];
local Index = Stk[A] + Step;
Stk[A] = Index;
if (Step > 0) then 
	if (Index <= Stk[A+1]) then
		InstrPoint = Inst[3];
		Stk[A+3] = Index;
	end
elseif (Index >= Stk[A+1]) then
	InstrPoint = Inst[3];
	Stk[A+3] = Index;
end
else local Step;local Index;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 165 then if Enum <= 163 then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum > 164 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 166 then Stk[Inst[2]]=Env[Inst[3]]; elseif Enum > 167 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local Step;local Index;local A;Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 180 then if Enum <= 174 then if Enum <= 171 then if Enum <= 169 then if (Stk[Inst[2]]<Stk[Inst[4]])then InstrPoint=Inst[3]; else InstrPoint=InstrPoint+1; end; elseif Enum == 170 then local B;local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];else local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 172 then local Step;local Index;local A;Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum > 173 then local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];do return end;else Stk[Inst[2]]=Env[Inst[3]];end; elseif Enum <= 177 then if Enum <= 175 then local Step;local Index;local A;Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum > 176 then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else local Step;local Index;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 178 then local NewProto=Proto[Inst[3]];local NewUvals;local Indexes={};NewUvals=Setmetatable({},{__index=function(_,Key)local Val=Indexes[Key];return Val[1][Val[2]];end,__newindex=function(_,Key,Value)local Val=Indexes[Key] Val[1][Val[2]]=Value;end;});for Idx=1,Inst[4] do InstrPoint=InstrPoint+1;local Mvm=Instr[InstrPoint];if Mvm[1]==218 then Indexes[Idx-1]={Stk,Mvm[3]};else Indexes[Idx-1]={Upvalues,Mvm[3]};end;Lupvals[#Lupvals+1]=Indexes;end;Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env); elseif Enum > 179 then local Results;local Edx;local Results,Limit;local A;Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Results,Limit= _R(Stk[A](Stk[A + 1]))
Top = Limit + A - 1
Edx= 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Results= { Stk[A](Unpack(Stk, A + 1, Top)) };
Edx= 0;
for Idx = A, Inst[4] do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else Top=Inst[2];end; elseif Enum <= 186 then if Enum <= 183 then if Enum <= 181 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum > 182 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 184 then 
local A = Inst[2]
local Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])))
Top = Limit + A - 1
local Edx = 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
 elseif Enum == 185 then local Step;local Index;local A;Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else 
local A = Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end;end; elseif Enum <= 189 then if Enum <= 187 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum == 188 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local A;
A= Inst[2]
Stk[A] = Stk[A]()
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if not Stk[Inst[2]] then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;end; elseif Enum <= 191 then if Enum > 190 then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else local B=Inst[3];local K=Stk[B] for Idx=B+1,Inst[4] do K=K..Stk[Idx];end;Stk[Inst[2]]=K;end; elseif Enum == 192 then 
local A = Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Top)) end;
else Env[Inst[3]] = Stk[Inst[2]];end; elseif Enum <= 290 then if Enum <= 241 then if Enum <= 217 then if Enum <= 205 then if Enum <= 199 then if Enum <= 196 then if Enum <= 194 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum > 195 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 197 then local A;
A= Inst[2]
Stk[A] = Stk[A]()
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if not Stk[Inst[2]] then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum > 198 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else 
local A = Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Top))
end; elseif Enum <= 202 then if Enum <= 200 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum > 201 then Stk[Inst[2]]=(Inst[3]~=0);else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 203 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum > 204 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 211 then if Enum <= 208 then if Enum <= 206 then local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]]; elseif Enum == 207 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local A;
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];end; elseif Enum <= 209 then if(Stk[Inst[2]]~=Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum == 210 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else Stk[Inst[2]] = Inst[3];end; elseif Enum <= 214 then if Enum <= 212 then Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]]; elseif Enum == 213 then local Step;local Index;local A;Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Env[Inst[3]] = Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else local Step;local Index;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 215 then Stk[Inst[2]]=Wrap(Proto[Inst[3]],nil,Env); elseif Enum > 216 then local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];do return end;else local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 229 then if Enum <= 223 then if Enum <= 220 then if Enum <= 218 then Stk[Inst[2]]=Stk[Inst[3]]; elseif Enum > 219 then local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 221 then Stk[Inst[2]] = Stk[Inst[3]] + Inst[4]; elseif Enum > 222 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else Stk[Inst[2]]=Upvalues[Inst[3]];end; elseif Enum <= 226 then if Enum <= 224 then if(Stk[Inst[2]] ~= Inst[4]) then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum > 225 then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if(Stk[Inst[2]]==Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;else Stk[Inst[2]]=Stk[Inst[3]]*Stk[Inst[4]];end; elseif Enum <= 227 then 
local A = Inst[2];
local T = Stk[A];
for Idx = A + 1, Top do 
	Insert(T, Stk[Idx])
end; elseif Enum > 228 then 
local A = Inst[2]
Stk[A](Stk[A + 1])
else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 235 then if Enum <= 232 then if Enum <= 230 then Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(not Stk[Inst[3]]);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(not Stk[Inst[3]]);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]]; elseif Enum == 231 then if (Stk[Inst[2]] <= Inst[4]) then InstrPoint=Inst[3]; else InstrPoint=InstrPoint+1; end;else local Step;local Index;local A;Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 233 then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]]; elseif Enum == 234 then local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if(Stk[Inst[2]]~=Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 238 then if Enum <= 236 then local B;local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum == 237 then local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
else Stk[Inst[2]]=(not Stk[Inst[3]]);end; elseif Enum <= 239 then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]]; elseif Enum > 240 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 265 then if Enum <= 253 then if Enum <= 247 then if Enum <= 244 then if Enum <= 242 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum > 243 then 
local A = Inst[2];
local C = Inst[4];
local CB = A + 2
local Result = {Stk[A](Stk[A + 1],Stk[CB])};
for Idx = 1, C do 
	Stk[CB + Idx] = Result[Idx];
end;
local R = Result[1]
if R then 
	Stk[CB] = R 
	InstrPoint = Inst[3];
else
	InstrPoint = InstrPoint + 1;
end;else local Step;local Index;local A;Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 245 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum == 246 then local B;local A;A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if not Stk[Inst[2]] then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;else 
local A = Inst[2]
Stk[A](Stk[A + 1])
end; elseif Enum <= 250 then if Enum <= 248 then local Step;local Index;local B;local A;A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum == 249 then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if(Stk[Inst[2]]~=Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;else local Results;local Edx;local Results,Limit;local B;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Results,Limit= _R(Stk[A](Stk[A + 1]))
Top = Limit + A - 1
Edx= 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Results= { Stk[A](Unpack(Stk, A + 1, Top)) };
Edx= 0;
for Idx = A, Inst[4] do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 251 then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum == 252 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local Step;local Index;local A;Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 259 then if Enum <= 256 then if Enum <= 254 then Stk[Inst[2]]=(not Stk[Inst[3]]); elseif Enum > 255 then Stk[Inst[2]]();else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 257 then local B;local A;Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]]; elseif Enum == 258 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local Step;local Index;local B;local A;A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 262 then if Enum <= 260 then local B;local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
 elseif Enum == 261 then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local Step;local Index;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 263 then local A;
A= Inst[2]
Stk[A] = Stk[A]()
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if not Stk[Inst[2]] then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum == 264 then local A;
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];else local A=Inst[2];local Cls={};for Idx=1,#Lupvals do local List=Lupvals[Idx];for Idz=0,#List do local Upv=List[Idz];local NStk=Upv[1];local Pos=Upv[2]; if NStk==Stk and Pos>=A then Cls[Pos]=NStk[Pos];Upv[1]=Cls;end;end;end;end; elseif Enum <= 277 then if Enum <= 271 then if Enum <= 268 then if Enum <= 266 then local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]+Stk[Inst[4]]; elseif Enum > 267 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else Stk[Inst[2]]=(Inst[3]~=0);InstrPoint=InstrPoint+1;end; elseif Enum <= 269 then local A=Inst[2];local B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]]; elseif Enum == 270 then local A;Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else 
local A = Inst[2];
local T = Stk[A];
for Idx = A + 1, Top do 
	Insert(T, Stk[Idx])
end;end; elseif Enum <= 274 then if Enum <= 272 then local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum == 273 then local Step;local Index;local B;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end;end; elseif Enum <= 275 then if (Inst[2] < Stk[Inst[4]]) then InstrPoint=Inst[3]; else InstrPoint=InstrPoint+1; end; elseif Enum == 276 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else if (Inst[2] < Stk[Inst[4]]) then InstrPoint=Inst[3]; else InstrPoint=InstrPoint+1; end;end; elseif Enum <= 283 then if Enum <= 280 then if Enum <= 278 then local Edx;local Results,Limit;local A;
A= Inst[2]
Results,Limit= _R(Stk[A](Unpack(Stk, A + 1, Inst[3])))
Top = Limit + A - 1
Edx= 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Top))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]();InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]]; elseif Enum > 279 then local Step;local Index;local A;Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 281 then if(Stk[Inst[2]] < Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum == 282 then 
local A = Inst[2]; 
do return Unpack(Stk, A, Top) end;else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 286 then if Enum <= 284 then Stk[Inst[2]]={}; elseif Enum == 285 then Stk[Inst[2]]=Stk[Inst[3]]+Stk[Inst[4]];else local A=Inst[2];local B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];end; elseif Enum <= 288 then if Enum > 287 then if (Stk[Inst[2]]<Stk[Inst[4]])then InstrPoint=Inst[3]; else InstrPoint=InstrPoint+1; end;else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum > 289 then local VA;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];Top=A+Varargsz-1;for Idx=A,Top do VA=Vararg[Idx-A];Stk[Idx]=VA;end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Top)) end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];do return end;else Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];end; elseif Enum <= 339 then if Enum <= 314 then if Enum <= 302 then if Enum <= 296 then if Enum <= 293 then if Enum <= 291 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum > 292 then local A;Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Inst[4];else local Step;local Index;local B;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 294 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum > 295 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];do return end;end; elseif Enum <= 299 then if Enum <= 297 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum > 298 then local Step;local Index;local B;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else local A;Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];end; elseif Enum <= 300 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum > 301 then Stk[Inst[2]]=Stk[Inst[3]];else Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];do return end;end; elseif Enum <= 308 then if Enum <= 305 then if Enum <= 303 then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum > 304 then 
local A = Inst[2]
local Results = { Stk[A](Stk[A + 1]) };
local Edx = 0;
for Idx = A, Inst[4] do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end
else if(Stk[Inst[2]] ~= Inst[4]) then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;end; elseif Enum <= 306 then 
local A = Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Top))
 elseif Enum == 307 then local A;
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A]()
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];else local Step;local Index;local A;Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 311 then if Enum <= 309 then local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]]; elseif Enum > 310 then 
local A = Inst[2]
local Results = { Stk[A](Unpack(Stk, A + 1, Top)) };
local Edx = 0;
for Idx = A, Inst[4] do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end
else 
local A = Inst[2]
Stk[A] = Stk[A]()
end; elseif Enum <= 312 then local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum > 313 then local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]+Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]+Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];else local Step;local Index;local B;local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 326 then if Enum <= 320 then if Enum <= 317 then if Enum <= 315 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum > 316 then local A;Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 318 then Stk[Inst[2]] = Inst[3]; elseif Enum > 319 then local Edx;local Results,Limit;local B;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Results,Limit= _R(Stk[A](Stk[A + 1]))
Top = Limit + A - 1
Edx= 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Top))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};else local B=Stk[Inst[4]];if not B then InstrPoint=InstrPoint+1;else Stk[Inst[2]]=B;InstrPoint=Inst[3];end;end; elseif Enum <= 323 then if Enum <= 321 then local Step;local Index;local B;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum == 322 then 
do return Stk[Inst[2]] end
else Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(not Stk[Inst[3]]);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if Stk[Inst[2]] then InstrPoint=InstrPoint + 1; else InstrPoint = Inst[3]; end;end; elseif Enum <= 324 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum > 325 then local Step;local Index;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Stk[A + 1]) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else Stk[Inst[2]]=Stk[Inst[3]] - Inst[4];end; elseif Enum <= 332 then if Enum <= 329 then if Enum <= 327 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum == 328 then do return end;else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 330 then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum == 331 then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else local Step;local Index;local B;local A;A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 335 then if Enum <= 333 then local B;local A;Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]]; elseif Enum == 334 then local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]();InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A]()
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 337 then if Enum > 336 then 
local A = Inst[2]
local Results = { Stk[A](Unpack(Stk, A + 1, Top)) };
local Edx = 0;
for Idx = A, Inst[4] do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end
else local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;end; elseif Enum > 338 then local B;local A;
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
do return Stk[Inst[2]] end
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];do return end;else local Results;local Edx;local Results,Limit;local A;Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Results,Limit= _R(Stk[A](Stk[A + 1]))
Top = Limit + A - 1
Edx= 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Results= { Stk[A](Unpack(Stk, A + 1, Top)) };
Edx= 0;
for Idx = A, Inst[4] do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 363 then if Enum <= 351 then if Enum <= 345 then if Enum <= 342 then if Enum <= 340 then 
local A = Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end; elseif Enum == 341 then local Edx;local Results,Limit;local A;
A= Inst[2]
Results,Limit= _R(Stk[A](Stk[A + 1]))
Top = Limit + A - 1
Edx= 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Top))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];else Stk[Inst[2]]={};end; elseif Enum <= 343 then local A=Inst[2];Top=A+Varargsz-1;for Idx=A,Top do local VA=Vararg[Idx-A];Stk[Idx]=VA;end; elseif Enum > 344 then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if(Stk[Inst[2]]==Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end;else local Step;local Index;local B;local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
end; elseif Enum <= 348 then if Enum <= 346 then local B=Stk[Inst[4]];if not B then InstrPoint=InstrPoint+1;else Stk[Inst[2]]=B;InstrPoint=Inst[3];end; elseif Enum > 347 then 
local A = Inst[2]
Stk[A](Unpack(Stk, A + 1, Top))
else for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end;end; elseif Enum <= 349 then local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]]; elseif Enum > 350 then local T;local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]+Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A]()
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
T= Stk[A];
for Idx = A + 1, Inst[3] do 
	Insert(T, Stk[Idx])
end;else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 357 then if Enum <= 354 then if Enum <= 352 then local B=Inst[3];local K=Stk[B] for Idx=B+1,Inst[4] do K=K..Stk[Idx];end;Stk[Inst[2]]=K; elseif Enum > 353 then local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;else Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];end; elseif Enum <= 355 then Stk[Inst[2]]=Stk[Inst[3]]+Stk[Inst[4]]; elseif Enum > 356 then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];else local A;Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];end; elseif Enum <= 360 then if Enum <= 358 then local B;local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=(Inst[3]~=0);InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
 elseif Enum > 359 then local Edx;local Results,Limit;local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Results,Limit= _R(Stk[A](Stk[A + 1]))
Top = Limit + A - 1
Edx= 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Top)) end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;else local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A]()
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if Stk[Inst[2]] then InstrPoint=InstrPoint + 1; else InstrPoint = Inst[3]; end;end; elseif Enum <= 361 then local A;Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Stk[A + 1])
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];do return end; elseif Enum > 362 then Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 375 then if Enum <= 369 then if Enum <= 366 then if Enum <= 364 then 
do return Stk[Inst[2]] end
 elseif Enum > 365 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 367 then if Stk[Inst[2]] then InstrPoint=InstrPoint + 1; else InstrPoint = Inst[3]; end; elseif Enum == 368 then 
local A = Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Top)) end;
else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 372 then if Enum <= 370 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3]; elseif Enum == 371 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 373 then local B;local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if Stk[Inst[2]] then InstrPoint=InstrPoint + 1; else InstrPoint = Inst[3]; end; elseif Enum == 374 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];end; elseif Enum <= 381 then if Enum <= 378 then if Enum <= 376 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3]; elseif Enum > 377 then Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]]-Stk[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] / Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];InstrPoint=Inst[3];else local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];end; elseif Enum <= 379 then local Step;local Index;local Edx;local Results,Limit;local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Results,Limit= _R(Stk[A](Unpack(Stk, A + 1, Inst[3])))
Top = Limit + A - 1
Edx= 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Top))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
 elseif Enum == 380 then Stk[Inst[2]][Stk[Inst[3]]] = Inst[4];else local Edx;local Results,Limit;local A;Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Results,Limit= _R(Stk[A](Stk[A + 1]))
Top = Limit + A - 1
Edx= 0;
for Idx = A, Top do 
	Edx = Edx + 1;
	Stk[Idx] = Results[Edx];
end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Top)) end;
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;end; elseif Enum <= 384 then if Enum <= 382 then Stk[Inst[2]]=Upvalues[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];if(Stk[Inst[2]]~=Stk[Inst[4]])then InstrPoint=InstrPoint+1;else InstrPoint=Inst[3];end; elseif Enum > 383 then local Step;local Index;local A;Upvalues[Inst[3]]=Stk[Inst[2]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else local A;Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
end; elseif Enum <= 386 then if Enum > 385 then local Step;local Index;local B;local A;
A= Inst[2]
Stk[A](Unpack(Stk, A + 1, Inst[3]))
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];A=Inst[2];B=Stk[Inst[3]];Stk[A+1]=B;Stk[A]=B[Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Env[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]={};InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
Index= Stk[A]
Step= Stk[A + 2];
if (Step > 0) then 
	if (Index > Stk[A+1]) then
		InstrPoint = Inst[3];
	else
		Stk[A+3] = Index;
	end
elseif (Index < Stk[A+1]) then
	InstrPoint = Inst[3];
else
	Stk[A+3] = Index;
end
else Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];end; elseif Enum > 387 then local A;Stk[Inst[2]] = Stk[Inst[3]] % Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]
Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3])) 
InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]] = Inst[3];else local A;Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];Stk[Inst[2]]=Stk[Inst[3]];InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2];
do return Stk[A](Unpack(Stk, A + 1, Inst[3])) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];
A= Inst[2]; 
do return Unpack(Stk, A, Top) end;InstrPoint = InstrPoint + 1;Inst = Instr[InstrPoint];do return end;end;
				InstrPoint	= InstrPoint + 1;
			end;
		end;

		A, B = _R(PCall(Loop))
		if not A[1] then
			local line = Chunk[7][InstrPoint] or '?'
			error('ERROR IN ScriptGuard SCRIPT [LINE ' .. line .. ']:' .. A[2])
		else
			return Unpack(A, 2, B)
		end;
	end;
end;	
return Wrap(Deserialize(), {}, GetFEnv())();

